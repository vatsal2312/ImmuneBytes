{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vaultAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oldDatasetHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newDatasetHash",
          "type": "bytes32"
        }
      ],
      "name": "DatasetUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalAmountOfTokensPaidOut",
          "type": "uint256"
        }
      ],
      "name": "PerformanceRewardsPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "PerformanceRewardsPayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oldResultsHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newResultsHash",
          "type": "bytes32"
        }
      ],
      "name": "ResultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sponsorAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolTotal",
          "type": "uint256"
        }
      ],
      "name": "Sponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "currentStake",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "participationInterestGained",
          "type": "uint256"
        }
      ],
      "name": "StakeParticipationRewardsPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newStakeThreshold",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "adminAddress",
          "type": "address"
        }
      ],
      "name": "StakeThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "StakingOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "SubmissionClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "SubmissionOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "participantAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newSubmissionHash",
          "type": "bytes32"
        }
      ],
      "name": "SubmissionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newVaultAddress",
          "type": "address"
        }
      ],
      "name": "VaultAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "decreaseStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCompetitionPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "competitionPool",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentParticipationRewardsBudget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentParticipationRewardsBudget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPerformanceRewardsBudget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentPerformanceRewardsBudget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTotalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentTotalStaked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getDatasetHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "dataset",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestChallengeNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "latestChallengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getPhase",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getResultsHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "results",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getSubmission",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "submissionHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getSubmissionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "submissionCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getSubmitters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "submitters",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getTotalStakesLockedForChallenge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalStakedForChallenge",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "datasetHash",
          "type": "bytes32"
        }
      ],
      "name": "openStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openSubmission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address[]",
          "name": "winners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rewards",
          "type": "uint256[]"
        }
      ],
      "name": "payPerformanceRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "winners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rewards",
          "type": "uint256[]"
        }
      ],
      "name": "payPerformanceRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "setStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "sponsor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "submissionHash",
          "type": "bytes32"
        }
      ],
      "name": "submitNewPredictions",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resultsHash",
          "type": "bytes32"
        }
      ],
      "name": "submitResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "transferStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldDatasetHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newDatasetHash",
          "type": "bytes32"
        }
      ],
      "name": "updateDataset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldResultsHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newResultsHash",
          "type": "bytes32"
        }
      ],
      "name": "updateResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStakeThreshold",
          "type": "uint256"
        }
      ],
      "name": "updateStakeThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldSubmissionHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newSubmissionHash",
          "type": "bytes32"
        }
      ],
      "name": "updateSubmission",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVaultAddress",
          "type": "address"
        }
      ],
      "name": "updateVaultAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/Competition.sol",
    "91": "interfaces/IToken.sol",
    "92": "interfaces/IVault.sol"
  },
  "ast": {
    "absolutePath": "contracts/Competition.sol",
    "exportedSymbols": {
      "AccessControl": [
        3590
      ],
      "Competition": [
        1648
      ],
      "Context": [
        13097
      ],
      "ERC165": [
        14155
      ],
      "IAccessControl": [
        3310
      ],
      "ICompetition": [
        16688
      ],
      "IERC165": [
        14481
      ],
      "IRegistry": [
        16982
      ],
      "IToken": [
        16809
      ],
      "IVault": [
        17045
      ]
    },
    "id": 1649,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 303,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "interfaces/ICompetition.sol",
        "file": "./../interfaces/ICompetition.sol",
        "id": 304,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1649,
        "sourceUnit": 16689,
        "src": "57:42:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/standard/access/AccessControl.sol",
        "file": "./standard/access/AccessControl.sol",
        "id": 305,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1649,
        "sourceUnit": 3591,
        "src": "100:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IToken.sol",
        "file": "../interfaces/IToken.sol",
        "id": 306,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1649,
        "sourceUnit": 16810,
        "src": "146:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 307,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1649,
        "sourceUnit": 17046,
        "src": "181:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IRegistry.sol",
        "file": "../interfaces/IRegistry.sol",
        "id": 308,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1649,
        "sourceUnit": 16983,
        "src": "216:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 310,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3590,
              "src": "583:13:2"
            },
            "id": 311,
            "nodeType": "InheritanceSpecifier",
            "src": "583:13:2"
          },
          {
            "baseName": {
              "id": 312,
              "name": "ICompetition",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16688,
              "src": "598:12:2"
            },
            "id": 313,
            "nodeType": "InheritanceSpecifier",
            "src": "598:12:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 309,
          "nodeType": "StructuredDocumentation",
          "src": "255:303:2",
          "text": " @title RCI Tournament Contract\n @author Rocket Capital Investment Pte Ltd\n @dev This contract manages registration and reward payouts for the RCI Tournament.\n @dev IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes)\n "
        },
        "fullyImplemented": true,
        "id": 1648,
        "linearizedBaseContracts": [
          1648,
          16688,
          3590,
          14155,
          14481,
          3310,
          13097
        ],
        "name": "Competition",
        "nameLocation": "568:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Competition.Challenge",
            "id": 329,
            "members": [
              {
                "constant": false,
                "id": 315,
                "mutability": "mutable",
                "name": "dataset",
                "nameLocation": "652:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "644:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 314,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "644:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 317,
                "mutability": "mutable",
                "name": "results",
                "nameLocation": "677:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "669:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 316,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "669:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 319,
                "mutability": "mutable",
                "name": "totalStakedForChallenge",
                "nameLocation": "702:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "694:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 318,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 321,
                "mutability": "mutable",
                "name": "phase",
                "nameLocation": "741:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "735:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 320,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "735:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 325,
                "mutability": "mutable",
                "name": "addressToSubmissionMap",
                "nameLocation": "924:22:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "896:50:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                  "typeString": "mapping(address => bytes32)"
                },
                "typeName": {
                  "id": 324,
                  "keyType": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "896:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                    "typeString": "mapping(address => bytes32)"
                  },
                  "valueType": {
                    "id": 323,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 328,
                "mutability": "mutable",
                "name": "submitters",
                "nameLocation": "966:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "956:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 327,
                  "nodeType": "ArrayTypeName",
                  "src": "956:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Challenge",
            "nameLocation": "625:9:2",
            "nodeType": "StructDefinition",
            "scope": 1648,
            "src": "618:365:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 332,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "1004:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "989:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IToken_$16809",
              "typeString": "contract IToken"
            },
            "typeName": {
              "id": 331,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 330,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16809,
                "src": "989:6:2"
              },
              "referencedDeclaration": 16809,
              "src": "989:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$16809",
                "typeString": "contract IToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 335,
            "mutability": "mutable",
            "name": "_vault",
            "nameLocation": "1031:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1016:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVault_$17045",
              "typeString": "contract IVault"
            },
            "typeName": {
              "id": 334,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 333,
                "name": "IVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17045,
                "src": "1016:6:2"
              },
              "referencedDeclaration": 17045,
              "src": "1016:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$17045",
                "typeString": "contract IVault"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 337,
            "mutability": "mutable",
            "name": "_challengeCounter",
            "nameLocation": "1058:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1043:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 336,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1043:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 339,
            "mutability": "mutable",
            "name": "_stakeThreshold",
            "nameLocation": "1097:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1081:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 338,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1081:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 341,
            "mutability": "mutable",
            "name": "_competitionPool",
            "nameLocation": "1134:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1118:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1118:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 343,
            "mutability": "mutable",
            "name": "_currentTotalStaked",
            "nameLocation": "1172:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1156:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 342,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1156:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 345,
            "mutability": "mutable",
            "name": "_currentParticipationRewardsBudget",
            "nameLocation": "1213:34:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1197:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1197:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 347,
            "mutability": "mutable",
            "name": "_currentPerformanceRewardsBudget",
            "nameLocation": "1269:32:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1253:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 346,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1253:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 350,
            "mutability": "mutable",
            "name": "_performanceRewardsPercentageInWei",
            "nameLocation": "1323:34:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1307:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 348,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3930653136",
              "id": 349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1360:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_900000000000000000_by_1",
                "typeString": "int_const 900000000000000000"
              },
              "value": "90e16"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 354,
            "mutability": "mutable",
            "name": "_stakes",
            "nameLocation": "1407:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1371:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 353,
              "keyType": {
                "id": 351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1379:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1371:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1390:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 359,
            "mutability": "mutable",
            "name": "_challenges",
            "nameLocation": "1457:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1648,
            "src": "1420:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
              "typeString": "mapping(uint32 => struct Competition.Challenge)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 355,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1428:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1420:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                "typeString": "mapping(uint32 => struct Competition.Challenge)"
              },
              "valueType": {
                "id": 357,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 356,
                  "name": "Challenge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 329,
                  "src": "1438:9:2"
                },
                "referencedDeclaration": 329,
                "src": "1438:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Challenge_$329_storage_ptr",
                  "typeString": "struct Competition.Challenge"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "1760:410:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 369,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1778:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1803:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1795:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 370,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1795:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1795:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1778:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320666f756e642e",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2a364926bda23624f5d60beb9b60994567a34603a8bfcfb6aedc99a72c7014a",
                          "typeString": "literal_string \"No token address found.\""
                        },
                        "value": "No token address found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2a364926bda23624f5d60beb9b60994567a34603a8bfcfb6aedc99a72c7014a",
                          "typeString": "literal_string \"No token address found.\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1770:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1770:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 379,
                          "name": "vaultAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "1851:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1876:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1868:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 380,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1868:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1868:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1851:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207661756c74206164647265737320666f756e642e",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1880:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e944f340297174e5aa8f5cd07424ebc4cb31f881463913fabc0ef536192a103",
                          "typeString": "literal_string \"No vault address found.\""
                        },
                        "value": "No vault address found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e944f340297174e5aa8f5cd07424ebc4cb31f881463913fabc0ef536192a103",
                          "typeString": "literal_string \"No vault address found.\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1843:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 389,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "1928:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1948:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1948:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 388,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3504,
                      "src": "1917:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:42:2"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 394,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "1969:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 395,
                      "name": "stakeThreshold_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "1987:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1969:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:33:2"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 398,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "2012:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$16809",
                        "typeString": "contract IToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 400,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "2028:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 399,
                        "name": "IToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16809,
                        "src": "2021:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IToken_$16809_$",
                          "typeString": "type(contract IToken)"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2021:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$16809",
                        "typeString": "contract IToken"
                      }
                    },
                    "src": "2012:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IToken_$16809",
                      "typeString": "contract IToken"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:30:2"
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "2052:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17045",
                        "typeString": "contract IVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 406,
                          "name": "vaultAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "2068:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 405,
                        "name": "IVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17045,
                        "src": "2061:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVault_$17045_$",
                          "typeString": "type(contract IVault)"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2061:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17045",
                        "typeString": "contract IVault"
                      }
                    },
                    "src": "2052:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17045",
                      "typeString": "contract IVault"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:30:2"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 410,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2092:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2112:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2092:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:21:2"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 414,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "2123:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 416,
                        "indexExpression": {
                          "id": 415,
                          "name": "_challengeCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "2135:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2123:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "2123:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2162:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "2123:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:40:2"
                }
              ]
            },
            "id": 422,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "stakeThreshold_",
                  "nameLocation": "1698:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "1690:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "tokenAddress_",
                  "nameLocation": "1723:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "1715:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "vaultAddress_",
                  "nameLocation": "1746:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "1738:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:71:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:0:2"
            },
            "scope": 1648,
            "src": "1678:492:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16352
            ],
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "2267:410:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 433,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2360:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2360:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 437,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2380:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Competition_$1648",
                                  "typeString": "contract Competition"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Competition_$1648",
                                  "typeString": "contract Competition"
                                }
                              ],
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2372:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 435,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2372:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2372:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 439,
                            "name": "amountToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "2387:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 431,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "2340:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$16809",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16741,
                          "src": "2340:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2340:59:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f75726e616d656e74202d2073706f6e736f723a20546f6b656e207472616e73666572206661696c65642e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2401:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_228fcfc58eaf87d28fbd7a847a73fb8fae913465ceccf4cb9437e09f651bd051",
                          "typeString": "literal_string \"Tournament - sponsor: Token transfer failed.\""
                        },
                        "value": "Tournament - sponsor: Token transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_228fcfc58eaf87d28fbd7a847a73fb8fae913465ceccf4cb9437e09f651bd051",
                          "typeString": "literal_string \"Tournament - sponsor: Token transfer failed.\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:116:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:116:2"
                },
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "currentCompPoolAmt",
                      "nameLocation": "2466:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 467,
                      "src": "2458:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 444,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2458:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "id": 446,
                    "name": "_competitionPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "2487:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2458:45:2"
                },
                {
                  "expression": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 448,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "2513:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 449,
                        "name": "currentCompPoolAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "2532:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 450,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "2553:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2532:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2513:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:51:2"
                },
                {
                  "expression": {
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 454,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "2574:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2584:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2574:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "2574:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 459,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 461,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "2624:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 462,
                          "name": "currentCompPoolAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "2637:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 463,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "2658:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2637:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 458,
                      "name": "Sponsor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16601,
                      "src": "2604:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "EmitStatement",
                  "src": "2599:71:2"
                }
              ]
            },
            "functionSelector": "b6cce5e2",
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "2185:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 426,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2227:8:2"
            },
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "2201:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "2193:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2192:21:2"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2254:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "2249:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2248:14:2"
            },
            "scope": 1648,
            "src": "2176:501:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16360
            ],
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "2775:499:2",
              "statements": [
                {
                  "assignments": [
                    477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "currentStake",
                      "nameLocation": "2793:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "2785:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2785:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 482,
                  "initialValue": {
                    "baseExpression": {
                      "id": 478,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "2808:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 481,
                    "indexExpression": {
                      "expression": {
                        "id": 479,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2816:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2816:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2808:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2785:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 484,
                          "name": "currentStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 477,
                          "src": "2845:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 485,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "2861:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2845:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207365745374616b653a20596f7572207374616b6520697320616c72656164792073657420746f207468697320616d6f756e742e",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2874:67:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ad314e288969b4d4ae63bac73dc03da6892970aecaea689888faf98816e940c",
                          "typeString": "literal_string \"Competition - setStake: Your stake is already set to this amount.\""
                        },
                        "value": "Competition - setStake: Your stake is already set to this amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ad314e288969b4d4ae63bac73dc03da6892970aecaea689888faf98816e940c",
                          "typeString": "literal_string \"Competition - setStake: Your stake is already set to this amount.\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2837:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:105:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:105:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 490,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "2956:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 491,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "2970:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2956:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "3116:128:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 505,
                                    "name": "currentStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 477,
                                    "src": "3152:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 506,
                                    "name": "amountToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 470,
                                    "src": "3167:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3152:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 504,
                                "name": "decreaseStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "3138:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) returns (bool)"
                                }
                              },
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3138:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d7065746974696f6e202d207365745374616b653a20436f756c64206e6f74206465637265617365207374616b652e",
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3181:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d520fbeb10e8c4b26748182cef02802c86121eab0822aed2d624c903b05b0a3",
                                "typeString": "literal_string \"Competition - setStake: Could not decrease stake.\""
                              },
                              "value": "Competition - setStake: Could not decrease stake."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3d520fbeb10e8c4b26748182cef02802c86121eab0822aed2d624c903b05b0a3",
                                "typeString": "literal_string \"Competition - setStake: Could not decrease stake.\""
                              }
                            ],
                            "id": 503,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3130:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3130:103:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "3130:103:2"
                      }
                    ]
                  },
                  "id": 513,
                  "nodeType": "IfStatement",
                  "src": "2952:292:2",
                  "trueBody": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "2983:128:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 495,
                                    "name": "amountToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 470,
                                    "src": "3019:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 496,
                                    "name": "currentStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 477,
                                    "src": "3033:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3019:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 494,
                                "name": "increaseStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 573,
                                "src": "3005:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) returns (bool)"
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3005:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d7065746974696f6e202d207365745374616b653a20436f756c64206e6f7420696e637265617365207374616b652e",
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3048:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca04796a74d0d5afb5f7b5fd3263afa5a97115bebdf7f91d8054556d2fde2d3a",
                                "typeString": "literal_string \"Competition - setStake: Could not increase stake.\""
                              },
                              "value": "Competition - setStake: Could not increase stake."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca04796a74d0d5afb5f7b5fd3263afa5a97115bebdf7f91d8054556d2fde2d3a",
                                "typeString": "literal_string \"Competition - setStake: Could not increase stake.\""
                              }
                            ],
                            "id": 493,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2997:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2997:103:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 501,
                        "nodeType": "ExpressionStatement",
                        "src": "2997:103:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 514,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "3253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3263:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3253:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:14:2"
                }
              ]
            },
            "functionSelector": "35d9db53",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStake",
            "nameLocation": "2692:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 472,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2735:8:2"
            },
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "2709:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "2701:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2700:21:2"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2762:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "2757:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:14:2"
            },
            "scope": 1648,
            "src": "2683:591:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16368
            ],
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "3375:473:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 528,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3393:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 530,
                            "indexExpression": {
                              "id": 529,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "3405:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3393:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "3393:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3433:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3393:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c65617365207761697420666f7220746865207374616b696e6720706572696f6420746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f7572207374616b652e",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3436:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d93c7b7f5a71ebe616a0f23f0f6ae0567c46abbe82d82d198528996906dc786b",
                          "typeString": "literal_string \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        },
                        "value": "Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d93c7b7f5a71ebe616a0f23f0f6ae0567c46abbe82d82d198528996906dc786b",
                          "typeString": "literal_string \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3385:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:156:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:156:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 540,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3579:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3579:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 544,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3599:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Competition_$1648",
                                  "typeString": "contract Competition"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Competition_$1648",
                                  "typeString": "contract Competition"
                                }
                              ],
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3591:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 542,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3591:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3591:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 546,
                            "name": "amountToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "3606:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 538,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "3559:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$16809",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16741,
                          "src": "3559:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3559:59:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20696e6372656173655374616b653a20546f6b656e205472616e73666572206661696c65642e",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e24aa30b4df1575afd74dd3cb9fb5073d6d601da50af85e6b6d51e662584da59",
                          "typeString": "literal_string \"Competition - increaseStake: Token Transfer failed.\""
                        },
                        "value": "Competition - increaseStake: Token Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e24aa30b4df1575afd74dd3cb9fb5073d6d601da50af85e6b6d51e662584da59",
                          "typeString": "literal_string \"Competition - increaseStake: Token Transfer failed.\""
                        }
                      ],
                      "id": 537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3551:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:123:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:123:2"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 551,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "3684:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 554,
                      "indexExpression": {
                        "expression": {
                          "id": 552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3692:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3692:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3684:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "3707:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3684:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:34:2"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 558,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3728:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "3751:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3728:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "3728:34:2"
                },
                {
                  "expression": {
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 562,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "3772:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3782:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3772:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "3772:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3817:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3817:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 569,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "3829:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 566,
                      "name": "StakeIncreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16607,
                      "src": "3802:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3802:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "EmitStatement",
                  "src": "3797:44:2"
                }
              ]
            },
            "functionSelector": "eedad66b",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nameLocation": "3289:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 523,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3335:8:2"
            },
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "3311:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "3303:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:21:2"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3362:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "3357:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3357:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3356:14:2"
            },
            "scope": 1648,
            "src": "3280:568:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16376
            ],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "3949:563:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 582,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3967:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 584,
                            "indexExpression": {
                              "id": 583,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "3979:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3967:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "3967:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4007:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3967:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20506c65617365207761697420666f7220746865207374616b696e6720706572696f6420746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f7572207374616b652e",
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f2c7519bd0947d1e31b0197865c655497e811e9a1e0dbcf0c7e9617e2fa93b4",
                          "typeString": "literal_string \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        },
                        "value": "Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f2c7519bd0947d1e31b0197865c655497e811e9a1e0dbcf0c7e9617e2fa93b4",
                          "typeString": "literal_string \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3959:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:156:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:156:2"
                },
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "currentBal",
                      "nameLocation": "4133:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "4125:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4125:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "baseExpression": {
                      "id": 593,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "4146:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 596,
                    "indexExpression": {
                      "expression": {
                        "id": 594,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4154:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4154:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4146:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4125:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 599,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "4183:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 600,
                          "name": "currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "4198:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4183:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20496e73756666696369656e742066756e647320666f72207769746864726177616c2e",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4210:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0b87d1fafacf1963b156fcfc5d8f0fdb4dabcdefc948857cddc45407ff7031",
                          "typeString": "literal_string \"Competition - decreaseStake: Insufficient funds for withdrawal.\""
                        },
                        "value": "Competition - decreaseStake: Insufficient funds for withdrawal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc0b87d1fafacf1963b156fcfc5d8f0fdb4dabcdefc948857cddc45407ff7031",
                          "typeString": "literal_string \"Competition - decreaseStake: Insufficient funds for withdrawal.\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4175:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:101:2"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 605,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "4286:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 608,
                      "indexExpression": {
                        "expression": {
                          "id": 606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4294:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4294:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4286:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 609,
                        "name": "currentBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "4308:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 610,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4321:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4308:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4286:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "4286:46:2"
                },
                {
                  "expression": {
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 614,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "4342:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 615,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "4365:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4342:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 621,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4402:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4402:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 623,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4414:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 618,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "4386:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$16809",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16712,
                      "src": "4386:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:40:2"
                },
                {
                  "expression": {
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 626,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "4436:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4446:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4436:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4481:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4481:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 633,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "4493:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "name": "StakeDecreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16613,
                      "src": "4466:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "EmitStatement",
                  "src": "4461:44:2"
                }
              ]
            },
            "functionSelector": "e8b96de1",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseStake",
            "nameLocation": "3863:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 577,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3909:8:2"
            },
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "3885:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3877:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3876:21:2"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3936:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "3931:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3931:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:14:2"
            },
            "scope": 1648,
            "src": "3854:658:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16386
            ],
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "4634:500:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 648,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "4652:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 650,
                            "indexExpression": {
                              "id": 649,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "4664:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4652:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "4652:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4692:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4652:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207472616e736665725374616b653a20506c65617365207761697420666f7220746865207374616b696e6720706572696f6420746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f7572207374616b652e",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4695:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1184d5f12135012c8def789dc46263ac0be9874efbe82d578828eea70527ae54",
                          "typeString": "literal_string \"Competition - transferStake: Please wait for the staking period to unlock before modifying your stake.\""
                        },
                        "value": "Competition - transferStake: Please wait for the staking period to unlock before modifying your stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1184d5f12135012c8def789dc46263ac0be9874efbe82d578828eea70527ae54",
                          "typeString": "literal_string \"Competition - transferStake: Please wait for the staking period to unlock before modifying your stake.\""
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4644:156:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "4644:156:2"
                },
                {
                  "assignments": [
                    658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 658,
                      "mutability": "mutable",
                      "name": "currentBal",
                      "nameLocation": "4818:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "4810:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4810:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 663,
                  "initialValue": {
                    "baseExpression": {
                      "id": 659,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "4831:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "expression": {
                        "id": 660,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4839:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4839:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4831:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 665,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "4868:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 666,
                          "name": "currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "4883:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4868:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207472616e736665725374616b653a20496e73756666696369656e742062616c616e63652e",
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4895:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2994c6e4d733e6425807c113f6ac3a341895f03d9fc0bdc591940ef438afc197",
                          "typeString": "literal_string \"Competition - transferStake: Insufficient balance.\""
                        },
                        "value": "Competition - transferStake: Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2994c6e4d733e6425807c113f6ac3a341895f03d9fc0bdc591940ef438afc197",
                          "typeString": "literal_string \"Competition - transferStake: Insufficient balance.\""
                        }
                      ],
                      "id": 664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4860:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "4860:88:2"
                },
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 671,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "4958:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 674,
                      "indexExpression": {
                        "expression": {
                          "id": 672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4966:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4966:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4958:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 675,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "4981:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4958:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "4958:34:2"
                },
                {
                  "expression": {
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 678,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "5002:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 680,
                      "indexExpression": {
                        "id": 679,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5010:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5002:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 681,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "5024:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5002:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "5002:33:2"
                },
                {
                  "expression": {
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 684,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "5045:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5055:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5045:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "5045:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5092:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5092:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5104:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 692,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "5115:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 688,
                      "name": "StakeTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16621,
                      "src": "5075:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5075:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "EmitStatement",
                  "src": "5070:57:2"
                }
              ]
            },
            "functionSelector": "a28f8847",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferStake",
            "nameLocation": "4527:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 643,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4594:8:2"
            },
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4549:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "4541:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "4568:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "4560:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4560:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4540:40:2"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4621:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "4616:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:14:2"
            },
            "scope": 1648,
            "src": "4518:616:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16394
            ],
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "5257:725:2",
              "statements": [
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 704,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "5269:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5313:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5305:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 706,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5305:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5305:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 710,
                          "name": "submissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "5317:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 705,
                        "name": "_updateSubmission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "5287:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_uint32_$",
                          "typeString": "function (bytes32,bytes32) returns (uint32)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5287:45:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5269:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "5269:63:2"
                },
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "currentStake",
                      "nameLocation": "5350:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "5342:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5342:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "baseExpression": {
                      "id": 716,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "5365:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 719,
                    "indexExpression": {
                      "expression": {
                        "id": 717,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5373:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5373:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5365:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5342:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 722,
                          "name": "currentStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "5402:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 723,
                          "name": "_stakeThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "5418:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5402:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207375626d69744e657750726564696374696f6e733a205374616b652069732062656c6f77207468726573686f6c642e",
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5435:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_368e8dd051adfee0e33535cf20b0408228457960ebcaa1295b4c7060b07588e0",
                          "typeString": "literal_string \"Competition - submitNewPredictions: Stake is below threshold.\""
                        },
                        "value": "Competition - submitNewPredictions: Stake is below threshold."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_368e8dd051adfee0e33535cf20b0408228457960ebcaa1295b4c7060b07588e0",
                          "typeString": "literal_string \"Competition - submitNewPredictions: Stake is below threshold.\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5394:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5394:105:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "5394:105:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5554:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5554:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 728,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "5509:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                              "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                            }
                          },
                          "id": 730,
                          "indexExpression": {
                            "id": 729,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "5521:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5509:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$329_storage",
                            "typeString": "struct Competition.Challenge storage ref"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "submitters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 328,
                        "src": "5509:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5509:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5509:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "5509:56:2"
                },
                {
                  "assignments": [
                    738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 738,
                      "mutability": "mutable",
                      "name": "participationRewards",
                      "nameLocation": "5584:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 772,
                      "src": "5576:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5576:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 739,
                        "name": "_currentParticipationRewardsBudget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "5607:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 740,
                        "name": "currentStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "5644:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5607:49:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 742,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "5659:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 744,
                        "indexExpression": {
                          "id": 743,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 702,
                          "src": "5671:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5659:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedForChallenge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "5659:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5607:104:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5576:135:2"
                },
                {
                  "expression": {
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 748,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "5722:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 749,
                      "name": "participationRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "5742:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5722:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "5722:40:2"
                },
                {
                  "expression": {
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 752,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "5772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 755,
                      "indexExpression": {
                        "expression": {
                          "id": 753,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5780:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5780:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5772:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 756,
                        "name": "currentStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "5794:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 757,
                        "name": "participationRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "5809:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5794:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5772:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "5772:57:2"
                },
                {
                  "expression": {
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "5839:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 762,
                      "name": "participationRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "5862:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5839:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "5839:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 766,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5928:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5928:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 768,
                        "name": "currentStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "5940:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 769,
                        "name": "participationRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "5954:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 765,
                      "name": "StakeParticipationRewardsPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16629,
                      "src": "5898:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5898:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "EmitStatement",
                  "src": "5893:82:2"
                }
              ]
            },
            "functionSelector": "9f2492a2",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitNewPredictions",
            "nameLocation": "5149:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 700,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5207:8:2"
            },
            "parameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "submissionHash",
                  "nameLocation": "5178:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "5170:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5169:24:2"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "5236:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "5229:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5229:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5228:24:2"
            },
            "scope": 1648,
            "src": "5140:842:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16404
            ],
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "6129:210:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 784,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "6147:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6176:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6168:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 785,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6168:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6168:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6147:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a204d7573742068617665207072652d6578697374696e67207375626d697373696f6e2e",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6180:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdade075d3124d768e00aee4685a35087919ca510b62848af4af242b59e7709d",
                          "typeString": "literal_string \"Competition - updateSubmission: Must have pre-existing submission.\""
                        },
                        "value": "Competition - updateSubmission: Must have pre-existing submission."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdade075d3124d768e00aee4685a35087919ca510b62848af4af242b59e7709d",
                          "typeString": "literal_string \"Competition - updateSubmission: Must have pre-existing submission.\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6139:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6139:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "6139:110:2"
                },
                {
                  "expression": {
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 793,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "6259:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 795,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "6295:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 796,
                          "name": "newSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "6314:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 794,
                        "name": "_updateSubmission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "6277:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_uint32_$",
                          "typeString": "function (bytes32,bytes32) returns (uint32)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6277:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6259:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "6259:73:2"
                }
              ]
            },
            "functionSelector": "f7fb373d",
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSubmission",
            "nameLocation": "5997:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 779,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6079:8:2"
            },
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "oldSubmissionHash",
                  "nameLocation": "6022:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "6014:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "newSubmissionHash",
                  "nameLocation": "6049:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "6041:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6041:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6013:54:2"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "6108:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "6101:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6101:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6100:24:2"
            },
            "scope": 1648,
            "src": "5988:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "6479:786:2",
              "statements": [
                {
                  "expression": {
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 810,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "6489:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 811,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "6507:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6489:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "6489:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 815,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "6542:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 817,
                            "indexExpression": {
                              "id": 816,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "6554:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6542:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "6542:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6580:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6542:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a204e6f7420617661696c61626c6520666f72207375626d697373696f6e732e",
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6583:64:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ef9dd591605be04ba5d12facfecea7841dcf0b88b1ecbb4b08a503ffced2caa",
                          "typeString": "literal_string \"Competition - updateSubmission: Not available for submissions.\""
                        },
                        "value": "Competition - updateSubmission: Not available for submissions."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ef9dd591605be04ba5d12facfecea7841dcf0b88b1ecbb4b08a503ffced2caa",
                          "typeString": "literal_string \"Competition - updateSubmission: Not available for submissions.\""
                        }
                      ],
                      "id": 814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6534:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "6534:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 825,
                          "name": "newSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "6666:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6695:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6687:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 826,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6687:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6687:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6666:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a2043616e6e6f74207375626d697420656d70747920686173682e",
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6699:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6e2a1fbc5a14809ae66afffe948b671c59125f45c15b623258a812e4c0c074",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot submit empty hash.\""
                        },
                        "value": "Competition - updateSubmission: Cannot submit empty hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6e2a1fbc5a14809ae66afffe948b671c59125f45c15b623258a812e4c0c074",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot submit empty hash.\""
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6658:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6658:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "6658:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 835,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 803,
                          "src": "6777:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 836,
                          "name": "newSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "6798:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6777:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6817:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e979c18d10a4abe34e0de6b0de14f9326104ad6f70d5f75db4a4178cf1c681be",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateSubmission: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e979c18d10a4abe34e0de6b0de14f9326104ad6f70d5f75db4a4178cf1c681be",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6769:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:126:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 842,
                                "name": "_challenges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "6913:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                  "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                                }
                              },
                              "id": 844,
                              "indexExpression": {
                                "id": 843,
                                "name": "challengeNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 808,
                                "src": "6925:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6913:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$329_storage",
                                "typeString": "struct Competition.Challenge storage ref"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressToSubmissionMap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "6913:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 848,
                          "indexExpression": {
                            "expression": {
                              "id": 846,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6965:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6965:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6913:63:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 849,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 803,
                          "src": "6980:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6913:84:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a20436c61736820696e206578697374696e67207375626d697373696f6e20686173682e",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f37b2edb3b9a813d49e781e426698a691c6e307e5da204fc7f4d9d27c209131",
                          "typeString": "literal_string \"Competition - updateSubmission: Clash in existing submission hash.\""
                        },
                        "value": "Competition - updateSubmission: Clash in existing submission hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f37b2edb3b9a813d49e781e426698a691c6e307e5da204fc7f4d9d27c209131",
                          "typeString": "literal_string \"Competition - updateSubmission: Clash in existing submission hash.\""
                        }
                      ],
                      "id": 841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6905:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6905:179:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "6905:179:2"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 854,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "7094:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                              "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                            }
                          },
                          "id": 856,
                          "indexExpression": {
                            "id": 855,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "7106:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7094:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$329_storage",
                            "typeString": "struct Competition.Challenge storage ref"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressToSubmissionMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "7094:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 860,
                      "indexExpression": {
                        "expression": {
                          "id": 858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7146:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7146:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7094:63:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "newSubmissionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "7160:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7094:83:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "7094:83:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 865,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "7211:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7228:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 868,
                        "name": "newSubmissionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "7240:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 864,
                      "name": "SubmissionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16637,
                      "src": "7193:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,address,bytes32)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7193:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "EmitStatement",
                  "src": "7188:70:2"
                }
              ]
            },
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSubmission",
            "nameLocation": "6354:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "oldSubmissionHash",
                  "nameLocation": "6380:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "6372:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6372:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "newSubmissionHash",
                  "nameLocation": "6407:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "6399:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6399:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6371:54:2"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "6458:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "6451:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6451:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6450:24:2"
            },
            "scope": 1648,
            "src": "6345:920:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              16410
            ],
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "7370:51:2",
              "statements": [
                {
                  "expression": {
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 878,
                      "name": "competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "7380:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 879,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "7398:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7380:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "7380:34:2"
                }
              ]
            },
            "functionSelector": "d4f4b806",
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionPool",
            "nameLocation": "7280:18:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 874,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7319:8:2"
            },
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7298:2:2"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "competitionPool",
                  "nameLocation": "7349:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "7341:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7340:25:2"
            },
            "scope": 1648,
            "src": "7271:150:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16416
            ],
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "7532:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 889,
                      "name": "currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "7542:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 890,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "7563:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7542:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "7542:40:2"
                }
              ]
            },
            "functionSelector": "25b06746",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTotalStaked",
            "nameLocation": "7436:21:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 885,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7478:8:2"
            },
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:2:2"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "currentTotalStaked",
                  "nameLocation": "7508:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "7500:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7500:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7499:28:2"
            },
            "scope": 1648,
            "src": "7427:162:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16422
            ],
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "7730:87:2",
              "statements": [
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 900,
                      "name": "currentParticipationRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 898,
                      "src": "7740:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 901,
                      "name": "_currentParticipationRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "7776:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7740:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "7740:70:2"
                }
              ]
            },
            "functionSelector": "f789b4e9",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentParticipationRewardsBudget",
            "nameLocation": "7604:36:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7661:8:2"
            },
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7640:2:2"
            },
            "returnParameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "currentParticipationRewardsBudget",
                  "nameLocation": "7691:33:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "7683:41:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7682:43:2"
            },
            "scope": 1648,
            "src": "7595:222:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16428
            ],
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "7954:83:2",
              "statements": [
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 911,
                      "name": "currentPerformanceRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "7964:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 912,
                      "name": "_currentPerformanceRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "7998:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7964:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "7964:66:2"
                }
              ]
            },
            "functionSelector": "dea1b2ce",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPerformanceRewardsBudget",
            "nameLocation": "7832:34:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7887:8:2"
            },
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7866:2:2"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "currentPerformanceRewardsBudget",
                  "nameLocation": "7917:31:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "7909:39:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7909:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7908:41:2"
            },
            "scope": 1648,
            "src": "7823:214:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16434
            ],
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "8151:58:2",
              "statements": [
                {
                  "expression": {
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 922,
                      "name": "latestChallengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "8161:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 923,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "8185:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8161:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "8161:41:2"
                }
              ]
            },
            "functionSelector": "736d8c91",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestChallengeNumber",
            "nameLocation": "8052:24:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 918,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8095:8:2"
            },
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8076:2:2"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "latestChallengeNumber",
                  "nameLocation": "8124:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "8117:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8117:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8116:30:2"
            },
            "scope": 1648,
            "src": "8043:166:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16442
            ],
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "8324:63:2",
              "statements": [
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 935,
                      "name": "dataset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "8334:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 936,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "8344:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 938,
                        "indexExpression": {
                          "id": 937,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "8356:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8344:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dataset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "8344:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8334:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "8334:46:2"
                }
              ]
            },
            "functionSelector": "39e28777",
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDatasetHash",
            "nameLocation": "8224:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 931,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8281:8:2"
            },
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "8246:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8239:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8239:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8238:24:2"
            },
            "returnParameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "dataset",
                  "nameLocation": "8311:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8303:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8303:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8302:17:2"
            },
            "scope": 1648,
            "src": "8215:172:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16450
            ],
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "8502:63:2",
              "statements": [
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 951,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "8512:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 952,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "8522:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 954,
                        "indexExpression": {
                          "id": 953,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "8534:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8522:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "results",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "8522:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8512:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "8512:46:2"
                }
              ]
            },
            "functionSelector": "eecfc33f",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultsHash",
            "nameLocation": "8402:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 947,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8459:8:2"
            },
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "8424:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "8417:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8417:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8416:24:2"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "results",
                  "nameLocation": "8489:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "8481:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8481:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8480:17:2"
            },
            "scope": 1648,
            "src": "8393:172:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16458
            ],
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "8696:83:2",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 967,
                      "name": "submissionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "8706:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 968,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "8726:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                              "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                            }
                          },
                          "id": 970,
                          "indexExpression": {
                            "id": 969,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "8738:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8726:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$329_storage",
                            "typeString": "struct Competition.Challenge storage ref"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "submitters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 328,
                        "src": "8726:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8726:46:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8706:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "8706:66:2"
                }
              ]
            },
            "functionSelector": "c8f971df",
            "id": 976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmissionCounter",
            "nameLocation": "8580:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 963,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8643:8:2"
            },
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "8608:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "8601:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8600:24:2"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "submissionCounter",
                  "nameLocation": "8673:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "8665:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8665:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8664:27:2"
            },
            "scope": 1648,
            "src": "8571:208:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16467
            ],
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "8905:69:2",
              "statements": [
                {
                  "expression": {
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 985,
                      "name": "submitters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "8915:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 986,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "8928:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "id": 987,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "8940:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8928:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 328,
                      "src": "8928:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "src": "8915:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "8915:52:2"
                }
              ]
            },
            "functionSelector": "9044265a",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmitters",
            "nameLocation": "8794:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 980,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8850:8:2"
            },
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "8815:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "8808:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8808:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8807:24:2"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "submitters",
                  "nameLocation": "8889:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "8872:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 981,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8872:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 982,
                    "nodeType": "ArrayTypeName",
                    "src": "8872:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8871:29:2"
            },
            "scope": 1648,
            "src": "8785:189:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16475
            ],
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "9079:59:2",
              "statements": [
                {
                  "expression": {
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1001,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "9089:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1002,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "9097:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1004,
                        "indexExpression": {
                          "id": 1003,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "9109:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9097:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "9097:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "9089:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "9089:42:2"
                }
              ]
            },
            "functionSelector": "af976fec",
            "id": 1009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhase",
            "nameLocation": "8989:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 997,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9040:8:2"
            },
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "9005:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "8998:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8997:24:2"
            },
            "returnParameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "phase",
                  "nameLocation": "9068:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1009,
                  "src": "9062:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9062:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9061:13:2"
            },
            "scope": 1648,
            "src": "8980:158:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16481
            ],
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "9241:49:2",
              "statements": [
                {
                  "expression": {
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1015,
                      "name": "stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "9251:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1016,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "9268:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9251:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "9251:32:2"
                }
              ]
            },
            "functionSelector": "343cb6be",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeThreshold",
            "nameLocation": "9153:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1011,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9191:8:2"
            },
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9170:2:2"
            },
            "returnParameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "stakeThreshold",
                  "nameLocation": "9221:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "9213:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9213:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9212:24:2"
            },
            "scope": 1648,
            "src": "9144:146:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16489
            ],
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "9394:45:2",
              "statements": [
                {
                  "expression": {
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1028,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "9404:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1029,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "9412:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1031,
                      "indexExpression": {
                        "id": 1030,
                        "name": "participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "9420:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9412:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9404:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "9404:28:2"
                }
              ]
            },
            "functionSelector": "7a766460",
            "id": 1035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "9305:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1024,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9353:8:2"
            },
            "parameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "9322:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "9314:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9314:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9313:21:2"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "9383:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "9375:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9375:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9374:15:2"
            },
            "scope": 1648,
            "src": "9296:143:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16495
            ],
            "body": {
              "id": 1048,
              "nodeType": "Block",
              "src": "9538:47:2",
              "statements": [
                {
                  "expression": {
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1041,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "9548:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1044,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "9571:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IToken_$16809",
                            "typeString": "contract IToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IToken_$16809",
                            "typeString": "contract IToken"
                          }
                        ],
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9563:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9563:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9563:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9548:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "9548:30:2"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 1049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "9454:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9490:8:2"
            },
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9469:2:2"
            },
            "returnParameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "9520:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "9512:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9512:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9511:22:2"
            },
            "scope": 1648,
            "src": "9445:140:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16501
            ],
            "body": {
              "id": 1062,
              "nodeType": "Block",
              "src": "9684:47:2",
              "statements": [
                {
                  "expression": {
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1055,
                      "name": "vaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "9694:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1058,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "9717:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$17045",
                            "typeString": "contract IVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IVault_$17045",
                            "typeString": "contract IVault"
                          }
                        ],
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9709:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9709:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9709:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9694:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "9694:30:2"
                }
              ]
            },
            "functionSelector": "65cacaa4",
            "id": 1063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultAddress",
            "nameLocation": "9600:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9636:8:2"
            },
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9615:2:2"
            },
            "returnParameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "vaultAddress",
                  "nameLocation": "9666:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "9658:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9658:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9657:22:2"
            },
            "scope": 1648,
            "src": "9591:140:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16511
            ],
            "body": {
              "id": 1082,
              "nodeType": "Block",
              "src": "9873:98:2",
              "statements": [
                {
                  "expression": {
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1073,
                      "name": "submissionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "9883:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1074,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "9900:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                              "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                            }
                          },
                          "id": 1076,
                          "indexExpression": {
                            "id": 1075,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "9912:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9900:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$329_storage",
                            "typeString": "struct Competition.Challenge storage ref"
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressToSubmissionMap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "9900:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 1079,
                      "indexExpression": {
                        "id": 1078,
                        "name": "participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "9952:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9900:64:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9883:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "9883:81:2"
                }
              ]
            },
            "functionSelector": "60cdb6cc",
            "id": 1083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmission",
            "nameLocation": "9746:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1069,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9823:8:2"
            },
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "9767:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "9760:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9760:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "9792:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "9784:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9784:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9759:45:2"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "submissionHash",
                  "nameLocation": "9853:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "9845:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9845:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9844:24:2"
            },
            "scope": 1648,
            "src": "9737:234:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16519
            ],
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "10120:95:2",
              "statements": [
                {
                  "expression": {
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1091,
                      "name": "totalStakedForChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "10130:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1092,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "10156:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1094,
                        "indexExpression": {
                          "id": 1093,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "10168:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10156:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedForChallenge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "10156:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10130:78:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1097,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:78:2"
                }
              ]
            },
            "functionSelector": "934d9012",
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakesLockedForChallenge",
            "nameLocation": "9986:32:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1087,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10061:8:2"
            },
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "10026:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "10019:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10019:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10018:24:2"
            },
            "returnParameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "totalStakedForChallenge",
                  "nameLocation": "10091:23:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "10083:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10083:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10082:33:2"
            },
            "scope": 1648,
            "src": "9977:238:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16525
            ],
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "10300:220:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1107,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "10326:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10346:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10346:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1106,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "10318:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10318:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655661756c74416464726573733a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10359:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dec1cd17dfb72afc7ba9d91e249166aeef9fb0abd1afc5b4eb67148bac6a8d3f",
                          "typeString": "literal_string \"Competition - updateVaultAddress: Caller is unauthorized.\""
                        },
                        "value": "Competition - updateVaultAddress: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dec1cd17dfb72afc7ba9d91e249166aeef9fb0abd1afc5b4eb67148bac6a8d3f",
                          "typeString": "literal_string \"Competition - updateVaultAddress: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10310:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10310:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "10310:109:2"
                },
                {
                  "expression": {
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1114,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "10429:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17045",
                        "typeString": "contract IVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1116,
                          "name": "newVaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1101,
                          "src": "10445:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1115,
                        "name": "IVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17045,
                        "src": "10438:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVault_$17045_$",
                          "typeString": "type(contract IVault)"
                        }
                      },
                      "id": 1117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10438:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17045",
                        "typeString": "contract IVault"
                      }
                    },
                    "src": "10429:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17045",
                      "typeString": "contract IVault"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "10429:32:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1121,
                        "name": "newVaultAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "10497:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1120,
                      "name": "VaultAddressUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16641,
                      "src": "10477:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10477:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1123,
                  "nodeType": "EmitStatement",
                  "src": "10472:41:2"
                }
              ]
            },
            "functionSelector": "d2de2f85",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateVaultAddress",
            "nameLocation": "10230:18:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1103,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10287:8:2"
            },
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "newVaultAddress",
                  "nameLocation": "10257:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "10249:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10249:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10248:25:2"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10300:0:2"
            },
            "scope": 1648,
            "src": "10221:299:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16531
            ],
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "10609:241:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1133,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "10635:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1134,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10655:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10655:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1132,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "10627:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10627:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655374616b655468726573686f6c643a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10668:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_430c497211238d2b0ca7a6e44c96532cfee2aa1c6c0e230cb21d0ff71913ad3f",
                          "typeString": "literal_string \"Competition - updateStakeThreshold: Caller is unauthorized.\""
                        },
                        "value": "Competition - updateStakeThreshold: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_430c497211238d2b0ca7a6e44c96532cfee2aa1c6c0e230cb21d0ff71913ad3f",
                          "typeString": "literal_string \"Competition - updateStakeThreshold: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10619:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "10619:111:2"
                },
                {
                  "expression": {
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1140,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "10740:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1141,
                      "name": "newStakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1127,
                      "src": "10758:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10740:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "10740:35:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1145,
                        "name": "newStakeThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "10813:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10832:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10832:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1144,
                      "name": "StakeThresholdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16647,
                      "src": "10791:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10791:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "EmitStatement",
                  "src": "10786:57:2"
                }
              ]
            },
            "functionSelector": "5ef53329",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateStakeThreshold",
            "nameLocation": "10535:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10596:8:2"
            },
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "newStakeThreshold",
                  "nameLocation": "10564:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "10556:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10556:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10555:27:2"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10609:0:2"
            },
            "scope": 1648,
            "src": "10526:324:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16537
            ],
            "body": {
              "id": 1232,
              "nodeType": "Block",
              "src": "10924:813:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1159,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "10950:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1160,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10970:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10970:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1158,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "10942:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10942:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206f70656e5374616b696e673a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10983:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_865b9a09aa3fda95b8a7faebebcfcb852436f15bc19cc2b296e177d0308bbc39",
                          "typeString": "literal_string \"Competition - openStaking: Caller is unauthorized.\""
                        },
                        "value": "Competition - openStaking: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_865b9a09aa3fda95b8a7faebebcfcb852436f15bc19cc2b296e177d0308bbc39",
                          "typeString": "literal_string \"Competition - openStaking: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10934:102:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "10934:102:2"
                },
                {
                  "assignments": [
                    1167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1167,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "11053:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1232,
                      "src": "11046:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1166,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11046:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "initialValue": {
                    "id": 1168,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 337,
                    "src": "11071:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11046:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1171,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "11106:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1173,
                            "indexExpression": {
                              "id": 1172,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1167,
                              "src": "11118:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11106:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "11106:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11144:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "11106:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206f70656e5374616b696e673a2050726576696f757320706861736520697320696e636f6d706c6574652e",
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11147:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9dad0571ed382cea6964db3ed4380301f2d6ca4ef4496a4b53bfdcdcf64f9ca",
                          "typeString": "literal_string \"Competition - openStaking: Previous phase is incomplete.\""
                        },
                        "value": "Competition - openStaking: Previous phase is incomplete."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9dad0571ed382cea6964db3ed4380301f2d6ca4ef4496a4b53bfdcdcf64f9ca",
                          "typeString": "literal_string \"Competition - openStaking: Previous phase is incomplete.\""
                        }
                      ],
                      "id": 1170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11098:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11098:108:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "11098:108:2"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11217:17:2",
                    "subExpression": {
                      "id": 1180,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "11217:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "11217:17:2"
                },
                {
                  "expression": {
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1183,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "11245:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1185,
                        "indexExpression": {
                          "id": 1184,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "11257:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11245:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "11245:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11282:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11245:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1189,
                  "nodeType": "ExpressionStatement",
                  "src": "11245:38:2"
                },
                {
                  "expression": {
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1190,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "11293:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1191,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "11313:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11293:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "11293:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1195,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "11354:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11379:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11371:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1196,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "11371:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11371:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "datasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1153,
                        "src": "11383:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1194,
                      "name": "_updateDataset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "11339:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11339:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "ExpressionStatement",
                  "src": "11339:56:2"
                },
                {
                  "assignments": [
                    1204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "drawAmount",
                      "nameLocation": "11414:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1232,
                      "src": "11406:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11406:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1205,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "11427:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$17045",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17026,
                      "src": "11427:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11427:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11406:34:2"
                },
                {
                  "expression": {
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1209,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11450:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1210,
                      "name": "drawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "11470:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11450:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "11450:30:2"
                },
                {
                  "expression": {
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1213,
                      "name": "_currentPerformanceRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "11491:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1214,
                          "name": "_competitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "11526:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 1215,
                          "name": "_performanceRewardsPercentageInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "11545:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11526:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "31653138",
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11581:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "id": 1218,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11580:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "11526:60:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11491:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "11491:95:2"
                },
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1222,
                      "name": "_currentParticipationRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "11596:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1223,
                        "name": "_competitionPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "11633:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1224,
                        "name": "_currentPerformanceRewardsBudget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "11652:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11633:51:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11596:88:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "11596:88:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1229,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "11714:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1228,
                      "name": "StakingOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16651,
                      "src": "11700:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11700:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "EmitStatement",
                  "src": "11695:35:2"
                }
              ]
            },
            "functionSelector": "2313ed3e",
            "id": 1233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openStaking",
            "nameLocation": "10865:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10911:8:2"
            },
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1153,
                  "mutability": "mutable",
                  "name": "datasetHash",
                  "nameLocation": "10885:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1233,
                  "src": "10877:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10877:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10876:21:2"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10924:0:2"
            },
            "scope": 1648,
            "src": "10856:881:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16541
            ],
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "11799:481:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1239,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "11825:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1240,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11845:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11845:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1238,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "11817:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11817:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206f70656e5375626d697373696f6e3a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11858:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7d74033e5e8c6fa09823726f8c1c0f95f4a27c271dafbe4d62e597f238e075d",
                          "typeString": "literal_string \"Competition - openSubmission: Caller is unauthorized.\""
                        },
                        "value": "Competition - openSubmission: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7d74033e5e8c6fa09823726f8c1c0f95f4a27c271dafbe4d62e597f238e075d",
                          "typeString": "literal_string \"Competition - openSubmission: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11809:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11809:105:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "11809:105:2"
                },
                {
                  "assignments": [
                    1247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "11931:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "11924:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1246,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11924:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1249,
                  "initialValue": {
                    "id": 1248,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 337,
                    "src": "11949:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11924:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1251,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "11984:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1253,
                            "indexExpression": {
                              "id": 1252,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1247,
                              "src": "11996:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11984:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "11984:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12022:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11984:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206f70656e5375626d697373696f6e3a204368616c6c656e676520697320696e20756e65787065637465642073746174652e",
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12025:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_781f4b8e3713f1b3bc1242627d1410147eda8d71c7e58008b2adf00e95928946",
                          "typeString": "literal_string \"Competition - openSubmission: Challenge is in unexpected state.\""
                        },
                        "value": "Competition - openSubmission: Challenge is in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_781f4b8e3713f1b3bc1242627d1410147eda8d71c7e58008b2adf00e95928946",
                          "typeString": "literal_string \"Competition - openSubmission: Challenge is in unexpected state.\""
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11976:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11976:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "11976:115:2"
                },
                {
                  "expression": {
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1260,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "12102:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1262,
                        "indexExpression": {
                          "id": 1261,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "12114:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12102:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "12102:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12139:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "12102:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "12102:38:2"
                },
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1267,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "12150:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1269,
                        "indexExpression": {
                          "id": 1268,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "12162:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12150:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakedForChallenge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 319,
                      "src": "12150:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1271,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "12205:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12150:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "12150:74:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1275,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "12257:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1274,
                      "name": "SubmissionOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16655,
                      "src": "12240:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12240:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "EmitStatement",
                  "src": "12235:38:2"
                }
              ]
            },
            "functionSelector": "58e2f50e",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openSubmission",
            "nameLocation": "11756:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1235,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11786:8:2"
            },
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11770:2:2"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11799:0:2"
            },
            "scope": 1648,
            "src": "11747:533:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16549
            ],
            "body": {
              "id": 1326,
              "nodeType": "Block",
              "src": "12383:468:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1289,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "12409:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1290,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12429:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12429:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1288,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "12401:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12401:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12442:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_693afb203cf24d575e3b8c21ebb57ec0ec45270dc282c66c356ec8e946263e26",
                          "typeString": "literal_string \"Competition - updateDataset: Caller is unauthorized.\""
                        },
                        "value": "Competition - updateDataset: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_693afb203cf24d575e3b8c21ebb57ec0ec45270dc282c66c356ec8e946263e26",
                          "typeString": "literal_string \"Competition - updateDataset: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12393:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12393:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "12393:104:2"
                },
                {
                  "assignments": [
                    1297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1297,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "12514:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1326,
                      "src": "12507:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1296,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12507:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1299,
                  "initialValue": {
                    "id": 1298,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 337,
                    "src": "12532:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12507:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1301,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "12567:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1303,
                            "indexExpression": {
                              "id": 1302,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1297,
                              "src": "12579:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12567:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "12567:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12605:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12567:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a204368616c6c656e676520697320636c6f7365642e",
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12608:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edc17a376d2d94db38c0b908b7455791a72d11a0683b43c2059983e390862d81",
                          "typeString": "literal_string \"Competition - updateDataset: Challenge is closed.\""
                        },
                        "value": "Competition - updateDataset: Challenge is closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edc17a376d2d94db38c0b908b7455791a72d11a0683b43c2059983e390862d81",
                          "typeString": "literal_string \"Competition - updateDataset: Challenge is closed.\""
                        }
                      ],
                      "id": 1300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12559:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12559:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "ExpressionStatement",
                  "src": "12559:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1311,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1281,
                          "src": "12678:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12704:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12696:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1312,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12696:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12696:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12678:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a204d7573742068617665207072652d6578697374696e6720646174617365742e",
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12708:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac52b622e90dffc21e309e01ce0b5ed2e86ba5975b97b3509c615f2023ff13ae",
                          "typeString": "literal_string \"Competition - updateDataset: Must have pre-existing dataset.\""
                        },
                        "value": "Competition - updateDataset: Must have pre-existing dataset."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac52b622e90dffc21e309e01ce0b5ed2e86ba5975b97b3509c615f2023ff13ae",
                          "typeString": "literal_string \"Competition - updateDataset: Must have pre-existing dataset.\""
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12670:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12670:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "12670:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1321,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1297,
                        "src": "12796:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1322,
                        "name": "oldDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "12813:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1323,
                        "name": "newDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "12829:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1320,
                      "name": "_updateDataset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "12781:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12781:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "12781:63:2"
                }
              ]
            },
            "functionSelector": "3f230915",
            "id": 1327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDataset",
            "nameLocation": "12295:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1285,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12370:8:2"
            },
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "oldDatasetHash",
                  "nameLocation": "12317:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "12309:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12309:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "newDatasetHash",
                  "nameLocation": "12341:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1327,
                  "src": "12333:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12333:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12308:48:2"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12383:0:2"
            },
            "scope": 1648,
            "src": "12286:565:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "12969:414:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1337,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "12987:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1338,
                          "name": "newDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1333,
                          "src": "13005:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12987:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13021:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f67a091b48dbc1f35afb8d1167ae58c8d395c23ca36a11f0b1e5b34166209f3",
                          "typeString": "literal_string \"Competition - updateDataset: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateDataset: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f67a091b48dbc1f35afb8d1167ae58c8d395c23ca36a11f0b1e5b34166209f3",
                          "typeString": "literal_string \"Competition - updateDataset: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 1336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12979:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12979:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "12979:117:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1344,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "13114:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1346,
                            "indexExpression": {
                              "id": 1345,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1329,
                              "src": "13126:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13114:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dataset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 315,
                          "src": "13114:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1348,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "13154:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "13114:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a20496e636f7272656374206f6c642064617461736574207265666572656e63652e",
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13170:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6e394bed57cd000ee2e800320c9985c42fe315cc470d6e04ed45f81e4a5006f",
                          "typeString": "literal_string \"Competition - updateDataset: Incorrect old dataset reference.\""
                        },
                        "value": "Competition - updateDataset: Incorrect old dataset reference."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6e394bed57cd000ee2e800320c9985c42fe315cc470d6e04ed45f81e4a5006f",
                          "typeString": "literal_string \"Competition - updateDataset: Incorrect old dataset reference.\""
                        }
                      ],
                      "id": 1343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13106:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13106:128:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "13106:128:2"
                },
                {
                  "expression": {
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1353,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "13244:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1355,
                        "indexExpression": {
                          "id": 1354,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1329,
                          "src": "13256:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13244:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dataset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "13244:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1357,
                      "name": "newDatasetHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1333,
                      "src": "13283:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13244:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "13244:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1361,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "13328:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1362,
                        "name": "oldDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1331,
                        "src": "13345:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1363,
                        "name": "newDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1333,
                        "src": "13361:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1360,
                      "name": "DatasetUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16663,
                      "src": "13313:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13313:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1365,
                  "nodeType": "EmitStatement",
                  "src": "13308:68:2"
                }
              ]
            },
            "id": 1367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDataset",
            "nameLocation": "12866:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "12888:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "12881:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12881:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1331,
                  "mutability": "mutable",
                  "name": "oldDatasetHash",
                  "nameLocation": "12913:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "12905:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1330,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12905:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "newDatasetHash",
                  "nameLocation": "12937:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "12929:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12929:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12880:72:2"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12969:0:2"
            },
            "scope": 1648,
            "src": "12857:526:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              16553
            ],
            "body": {
              "id": 1405,
              "nodeType": "Block",
              "src": "13442:395:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1373,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "13468:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1374,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13488:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13488:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1372,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "13460:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13460:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13501:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08026e79c2665f4430733c3f708094d2eabbad06b179bb0e77b350c5096fcc55",
                          "typeString": "literal_string \"Competition - closeSubmission: Caller is unauthorized.\""
                        },
                        "value": "Competition - closeSubmission: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08026e79c2665f4430733c3f708094d2eabbad06b179bb0e77b350c5096fcc55",
                          "typeString": "literal_string \"Competition - closeSubmission: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13452:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13452:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "13452:106:2"
                },
                {
                  "assignments": [
                    1381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1381,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "13575:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "13568:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1380,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13568:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "id": 1382,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 337,
                    "src": "13593:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13568:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1385,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "13628:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1387,
                            "indexExpression": {
                              "id": 1386,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "13640:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13628:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "13628:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13666:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "13628:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204368616c6c656e676520696e20756e65787065637465642073746174652e",
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13669:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_072053b40828734e9e29cc8fec9220e78c6f8f485358eb2f9b22d96cb9ac57e7",
                          "typeString": "literal_string \"Competition - closeSubmission: Challenge in unexpected state.\""
                        },
                        "value": "Competition - closeSubmission: Challenge in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_072053b40828734e9e29cc8fec9220e78c6f8f485358eb2f9b22d96cb9ac57e7",
                          "typeString": "literal_string \"Competition - closeSubmission: Challenge in unexpected state.\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13620:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13620:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1393,
                  "nodeType": "ExpressionStatement",
                  "src": "13620:113:2"
                },
                {
                  "expression": {
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1394,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "13743:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1396,
                        "indexExpression": {
                          "id": 1395,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1381,
                          "src": "13755:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13743:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1397,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "13743:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13780:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "13743:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "13743:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1402,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1381,
                        "src": "13814:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1401,
                      "name": "SubmissionClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16667,
                      "src": "13797:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13797:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "EmitStatement",
                  "src": "13792:38:2"
                }
              ]
            },
            "functionSelector": "ffc6ff1e",
            "id": 1406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeSubmission",
            "nameLocation": "13398:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13429:8:2"
            },
            "parameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13413:2:2"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13442:0:2"
            },
            "scope": 1648,
            "src": "13389:448:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16559
            ],
            "body": {
              "id": 1420,
              "nodeType": "Block",
              "src": "13913:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13946:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13938:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1413,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "13938:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13938:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1417,
                        "name": "resultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "13950:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1412,
                      "name": "_updateResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1506,
                      "src": "13923:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13923:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1419,
                  "nodeType": "ExpressionStatement",
                  "src": "13923:39:2"
                }
              ]
            },
            "functionSelector": "315c455e",
            "id": 1421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitResults",
            "nameLocation": "13852:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13900:8:2"
            },
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "resultsHash",
                  "nameLocation": "13874:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1421,
                  "src": "13866:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13866:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13865:21:2"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13913:0:2"
            },
            "scope": 1648,
            "src": "13843:126:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16567
            ],
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "14070:175:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1430,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1423,
                          "src": "14089:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14115:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14107:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1431,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "14107:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14107:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14089:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a204d7573742068617665207072652d6578697374696e6720726573756c74732e",
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14119:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb86a9e3116a8ad60accc68462eeac5b2cf633c6592d42b9f1d5bc96bdfc2bf",
                          "typeString": "literal_string \"Competition - updateResults: Must have pre-existing results.\""
                        },
                        "value": "Competition - updateResults: Must have pre-existing results."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb86a9e3116a8ad60accc68462eeac5b2cf633c6592d42b9f1d5bc96bdfc2bf",
                          "typeString": "literal_string \"Competition - updateResults: Must have pre-existing results.\""
                        }
                      ],
                      "id": 1429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14081:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14081:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1438,
                  "nodeType": "ExpressionStatement",
                  "src": "14081:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1440,
                        "name": "oldResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "14207:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1441,
                        "name": "newResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "14223:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1439,
                      "name": "_updateResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1506,
                      "src": "14192:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14192:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "14192:46:2"
                }
              ]
            },
            "functionSelector": "c55e86b1",
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateResults",
            "nameLocation": "13984:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14057:8:2"
            },
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1423,
                  "mutability": "mutable",
                  "name": "oldResultsHash",
                  "nameLocation": "14006:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "13998:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13998:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "newResultsHash",
                  "nameLocation": "14030:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "14022:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14022:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13997:48:2"
            },
            "returnParameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14070:0:2"
            },
            "scope": 1648,
            "src": "13975:270:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "14339:700:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1454,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "14365:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1455,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14385:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14385:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1453,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "14357:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14357:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14398:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c039f0d8abb4435141d6dec272aefcd468d567c300a2d752c7246a66ad698a4",
                          "typeString": "literal_string \"Competition - updateResults: Caller is unauthorized.\""
                        },
                        "value": "Competition - updateResults: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c039f0d8abb4435141d6dec272aefcd468d567c300a2d752c7246a66ad698a4",
                          "typeString": "literal_string \"Competition - updateResults: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14349:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14349:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "14349:104:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1462,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "14471:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1463,
                          "name": "newResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1449,
                          "src": "14489:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14471:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14505:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac275a4ee9624976537900d871bf570b6e16966cbd73acc4fc49ccaad80fed6",
                          "typeString": "literal_string \"Competition - updateResults: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateResults: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac275a4ee9624976537900d871bf570b6e16966cbd73acc4fc49ccaad80fed6",
                          "typeString": "literal_string \"Competition - updateResults: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 1461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14463:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14463:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "14463:117:2"
                },
                {
                  "assignments": [
                    1469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1469,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "14597:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1505,
                      "src": "14590:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1468,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14590:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1471,
                  "initialValue": {
                    "id": 1470,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 337,
                    "src": "14615:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14590:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1473,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "14650:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1475,
                            "indexExpression": {
                              "id": 1474,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "14662:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14650:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1476,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "14650:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14688:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "14650:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a204368616c6c656e676520696e20756e65787065637465642073746174652e",
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14691:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_891e28c63259cb81e465124f887c019cc31169e3451a60222ecf57c19d0fec99",
                          "typeString": "literal_string \"Competition - updateResults: Challenge in unexpected state.\""
                        },
                        "value": "Competition - updateResults: Challenge in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_891e28c63259cb81e465124f887c019cc31169e3451a60222ecf57c19d0fec99",
                          "typeString": "literal_string \"Competition - updateResults: Challenge in unexpected state.\""
                        }
                      ],
                      "id": 1472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14642:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "14642:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1483,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "14771:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1485,
                            "indexExpression": {
                              "id": 1484,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "14783:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14771:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "results",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 317,
                          "src": "14771:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1487,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "14811:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14771:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a20436c61736820696e206578697374696e6720726573756c747320686173682e",
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14827:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1914860dc25623475aeb177953538de1f6d18e86c3fe0442a505b7ae268bae",
                          "typeString": "literal_string \"Competition - updateResults: Clash in existing results hash.\""
                        },
                        "value": "Competition - updateResults: Clash in existing results hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a1914860dc25623475aeb177953538de1f6d18e86c3fe0442a505b7ae268bae",
                          "typeString": "literal_string \"Competition - updateResults: Clash in existing results hash.\""
                        }
                      ],
                      "id": 1482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14763:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14763:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "14763:127:2"
                },
                {
                  "expression": {
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1492,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "14900:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1494,
                        "indexExpression": {
                          "id": 1493,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1469,
                          "src": "14912:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14900:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "results",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "14900:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1496,
                      "name": "newResultsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "14939:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14900:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "14900:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1500,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "14984:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1501,
                        "name": "oldResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "15001:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1502,
                        "name": "newResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "15017:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1499,
                      "name": "ResultsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16675,
                      "src": "14969:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14969:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "EmitStatement",
                  "src": "14964:68:2"
                }
              ]
            },
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateResults",
            "nameLocation": "14260:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "oldResultsHash",
                  "nameLocation": "14283:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "14275:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14275:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "newResultsHash",
                  "nameLocation": "14307:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "14299:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14299:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14274:48:2"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14339:0:2"
            },
            "scope": 1648,
            "src": "14251:788:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              16579
            ],
            "body": {
              "id": 1526,
              "nodeType": "Block",
              "src": "15185:85:2",
              "statements": [
                {
                  "expression": {
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1518,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "15195:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1520,
                          "name": "_challengeCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "15227:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1521,
                          "name": "winners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1509,
                          "src": "15246:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1522,
                          "name": "rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1512,
                          "src": "15255:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        ],
                        "id": 1519,
                        "name": "payPerformanceRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "15205:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (uint32,address[] calldata,uint256[] calldata) returns (bool)"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15205:58:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15195:68:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "15195:68:2"
                }
              ]
            },
            "functionSelector": "af4d2212",
            "id": 1527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payPerformanceRewards",
            "nameLocation": "15054:21:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1514,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15145:8:2"
            },
            "parameters": {
              "id": 1513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "winners",
                  "nameLocation": "15095:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "15076:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1507,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15076:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1508,
                    "nodeType": "ArrayTypeName",
                    "src": "15076:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1512,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "15123:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "15104:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1510,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15104:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1511,
                    "nodeType": "ArrayTypeName",
                    "src": "15104:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15075:56:2"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "15172:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "15167:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15167:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15166:14:2"
            },
            "scope": 1648,
            "src": "15045:225:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16593
            ],
            "body": {
              "id": 1646,
              "nodeType": "Block",
              "src": "15438:1138:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1543,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "15464:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1544,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15484:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15484:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1542,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "15456:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15456:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20706179506572666f726d616e6365526577617264733a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15497:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6f9e5186c983f455ef768ec99c30a67c9c342eb83e258fb6cb3a1a6418a13d2",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Caller is unauthorized.\""
                        },
                        "value": "Competition - payPerformanceRewards: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6f9e5186c983f455ef768ec99c30a67c9c342eb83e258fb6cb3a1a6418a13d2",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Caller is unauthorized.\""
                        }
                      ],
                      "id": 1541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15448:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15448:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "15448:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1551,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "15578:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                                "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                              }
                            },
                            "id": 1553,
                            "indexExpression": {
                              "id": 1552,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1529,
                              "src": "15590:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15578:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$329_storage",
                              "typeString": "struct Competition.Challenge storage ref"
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "15578:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15616:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "15578:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20706179506572666f726d616e6365526577617264733a204368616c6c656e676520697320696e20756e65787065637465642073746174652e",
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15619:72:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1928106f1dc3bcac7e94947932cbca0f57d605d8496679427a900c5b7c4c7fe4",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Challenge is in unexpected state.\""
                        },
                        "value": "Competition - payPerformanceRewards: Challenge is in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1928106f1dc3bcac7e94947932cbca0f57d605d8496679427a900c5b7c4c7fe4",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Challenge is in unexpected state.\""
                        }
                      ],
                      "id": 1550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15570:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15570:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1559,
                  "nodeType": "ExpressionStatement",
                  "src": "15570:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1561,
                            "name": "winners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1532,
                            "src": "15710:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15710:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1563,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "15728:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15728:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15710:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20706179506572666f726d616e6365526577617264733a204e756d626572206f662077696e6e65727320616e6420726577617264732061726520646966666572656e742e",
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15744:83:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be1eeaa98394bf7e82616301a85d6f245397c323a0923a65e822abe8476aa2b",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Number of winners and rewards are different.\""
                        },
                        "value": "Competition - payPerformanceRewards: Number of winners and rewards are different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3be1eeaa98394bf7e82616301a85d6f245397c323a0923a65e822abe8476aa2b",
                          "typeString": "literal_string \"Competition - payPerformanceRewards: Number of winners and rewards are different.\""
                        }
                      ],
                      "id": 1560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15702:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15702:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1568,
                  "nodeType": "ExpressionStatement",
                  "src": "15702:126:2"
                },
                {
                  "assignments": [
                    1570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1570,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nameLocation": "15846:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1646,
                      "src": "15838:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1569,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15838:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1571,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15838:19:2"
                },
                {
                  "body": {
                    "id": 1610,
                    "nodeType": "Block",
                    "src": "15917:251:2",
                    "statements": [
                      {
                        "assignments": [
                          1584
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1584,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nameLocation": "15939:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1610,
                            "src": "15931:20:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1583,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15931:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1588,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1585,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "15954:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 1587,
                          "indexExpression": {
                            "id": 1586,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1573,
                            "src": "15962:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15954:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15931:33:2"
                      },
                      {
                        "assignments": [
                          1590
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1590,
                            "mutability": "mutable",
                            "name": "winner",
                            "nameLocation": "15986:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1610,
                            "src": "15978:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15978:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1594,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1591,
                            "name": "winners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1532,
                            "src": "15995:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1593,
                          "indexExpression": {
                            "id": 1592,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1573,
                            "src": "16003:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15995:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15978:27:2"
                      },
                      {
                        "expression": {
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1595,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "16019:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1597,
                            "indexExpression": {
                              "id": 1596,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "16027:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16019:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1598,
                            "name": "rewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1584,
                            "src": "16038:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16019:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1600,
                        "nodeType": "ExpressionStatement",
                        "src": "16019:31:2"
                      },
                      {
                        "expression": {
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1601,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "16064:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1602,
                            "name": "rewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1584,
                            "src": "16079:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16064:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1604,
                        "nodeType": "ExpressionStatement",
                        "src": "16064:27:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1606,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "16136:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1607,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1584,
                              "src": "16144:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1605,
                            "name": "PerformanceRewardsPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16681,
                            "src": "16110:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16110:47:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1609,
                        "nodeType": "EmitStatement",
                        "src": "16105:52:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1576,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1573,
                      "src": "15884:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1577,
                        "name": "winners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "15888:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15888:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15884:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1611,
                  "initializationExpression": {
                    "assignments": [
                      1573
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1573,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15877:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1611,
                        "src": "15872:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1572,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15872:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1575,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15881:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15872:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15904:3:2",
                      "subExpression": {
                        "id": 1580,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "15904:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1582,
                    "nodeType": "ExpressionStatement",
                    "src": "15904:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15867:301:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1612,
                      "name": "totalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "16181:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1613,
                      "name": "_currentPerformanceRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "16195:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16181:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1632,
                    "nodeType": "Block",
                    "src": "16322:132:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1620,
                            "name": "_competitionPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "16336:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1621,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "16356:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16336:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1623,
                        "nodeType": "ExpressionStatement",
                        "src": "16336:31:2"
                      },
                      {
                        "expression": {
                          "id": 1626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1624,
                            "name": "_currentTotalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "16381:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1625,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "16404:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16381:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1627,
                        "nodeType": "ExpressionStatement",
                        "src": "16381:34:2"
                      },
                      {
                        "expression": {
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1628,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "16429:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16439:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16429:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1631,
                        "nodeType": "ExpressionStatement",
                        "src": "16429:14:2"
                      }
                    ]
                  },
                  "id": 1633,
                  "nodeType": "IfStatement",
                  "src": "16177:277:2",
                  "trueBody": {
                    "id": 1619,
                    "nodeType": "Block",
                    "src": "16229:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "546f74616c207061796f75742073756d206d6f7265207468616e20636f6d7065746974696f6e20706f6f6c2e",
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16250:46:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b0b3ba788b546454a42115720f71f41f4dee6e37903380d066346f60d93630d",
                                "typeString": "literal_string \"Total payout sum more than competition pool.\""
                              },
                              "value": "Total payout sum more than competition pool."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4b0b3ba788b546454a42115720f71f41f4dee6e37903380d066346f60d93630d",
                                "typeString": "literal_string \"Total payout sum more than competition pool.\""
                              }
                            ],
                            "id": 1615,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "16243:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16243:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1618,
                        "nodeType": "ExpressionStatement",
                        "src": "16243:54:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1634,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "16463:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$329_storage_$",
                            "typeString": "mapping(uint32 => struct Competition.Challenge storage ref)"
                          }
                        },
                        "id": 1636,
                        "indexExpression": {
                          "id": 1635,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1529,
                          "src": "16475:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16463:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$329_storage",
                          "typeString": "struct Competition.Challenge storage ref"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 321,
                      "src": "16463:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16500:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "16463:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1640,
                  "nodeType": "ExpressionStatement",
                  "src": "16463:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1642,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "16540:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1643,
                        "name": "totalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "16557:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1641,
                      "name": "PerformanceRewardsPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16687,
                      "src": "16517:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,uint256)"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16517:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "EmitStatement",
                  "src": "16512:57:2"
                }
              ]
            },
            "functionSelector": "4bfde7f8",
            "id": 1647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payPerformanceRewards",
            "nameLocation": "15285:21:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1537,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15398:8:2"
            },
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "15314:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "15307:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15307:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "winners",
                  "nameLocation": "15350:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "15331:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1530,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15331:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1531,
                    "nodeType": "ArrayTypeName",
                    "src": "15331:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "15378:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "15359:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1533,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15359:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1534,
                    "nodeType": "ArrayTypeName",
                    "src": "15359:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15306:80:2"
            },
            "returnParameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "15425:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "15420:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15420:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15419:14:2"
            },
            "scope": 1648,
            "src": "15276:1300:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1649,
        "src": "559:16019:2",
        "usedErrors": []
      }
    ],
    "src": "0:16578:2"
  },
  "bytecode": "6080604052670c7d713b49da00006008553480156200001d57600080fd5b5060405162002da838038062002da8833981016040819052620000409162000235565b6001600160a01b0382166200009c5760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e206164647265737320666f756e642e00000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620000f45760405162461bcd60e51b815260206004820152601760248201527f4e6f207661756c74206164647265737320666f756e642e000000000000000000604482015260640162000093565b6200010160003362000168565b6003928355600180546001600160a01b039384166001600160a01b0319909116179055600280546001600160c01b031916919092161790819055600160a01b900463ffffffff166000908152600a6020526040902001805460ff1916600417905562000275565b62000174828262000178565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000174576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200023057600080fd5b919050565b6000806000606084860312156200024a578283fd5b835192506200025c6020850162000218565b91506200026c6040850162000218565b90509250925092565b612b2380620002856000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806391d148541161013b578063d2de2f85116100b8578063eecfc33f1161007c578063eecfc33f146105b6578063eedad66b146105df578063f789b4e9146105f2578063f7fb373d146105fa578063ffc6ff1e1461060d57600080fd5b8063d2de2f851461056d578063d4f4b80614610580578063d547741f14610588578063dea1b2ce1461059b578063e8b96de1146105a357600080fd5b8063af4d2212116100ff578063af4d2212146104cd578063af976fec146104e0578063b6cce5e21461051e578063c55e86b114610531578063c8f971df1461054457600080fd5b806391d1485414610463578063934d9012146104765780639f2492a21461049f578063a217fddf146104b2578063a28f8847146104ba57600080fd5b806339e28777116101c957806360cdb6cc1161018d57806360cdb6cc146103a357806365cacaa4146103e3578063736d8c91146103f45780637a7664601461041a5780639044265a1461044357600080fd5b806339e287771461033c5780633f230915146103625780634bfde7f81461037557806358e2f50e146103885780635ef533291461039057600080fd5b80632f2ff15d116102105780632f2ff15d146102e8578063315c455e146102fb578063343cb6be1461030e57806335d9db531461031657806336568abe1461032957600080fd5b806301ffc9a71461024d57806310fe9ae8146102755780632313ed3e1461029a578063248a9ca3146102af57806325b06746146102e0575b600080fd5b61026061025b3660046128bc565b610615565b60405190151581526020015b60405180910390f35b6001546001600160a01b03165b6040516001600160a01b03909116815260200161026c565b6102ad6102a8366004612858565b61064c565b005b6102d26102bd366004612858565b60009081526020819052604090206001015490565b60405190815260200161026c565b6005546102d2565b6102ad6102f6366004612870565b6108be565b6102ad610309366004612858565b61094d565b6003546102d2565b610260610324366004612858565b61095b565b6102ad610337366004612870565b610ae7565b6102d261034a3660046128fc565b63ffffffff166000908152600a602052604090205490565b6102ad61037036600461289b565b610b61565b61026061038336600461293f565b610ce7565b6102ad61107f565b6102ad61039e366004612858565b6111e5565b6102d26103b1366004612916565b63ffffffff9091166000908152600a602090815260408083206001600160a01b03909416835260049093019052205490565b6002546001600160a01b0316610282565b600254600160a01b900463ffffffff165b60405163ffffffff909116815260200161026c565b6102d261042836600461278c565b6001600160a01b031660009081526009602052604090205490565b6104566104513660046128fc565b611297565b60405161026c91906129bd565b610260610471366004612870565b61130d565b6102d26104843660046128fc565b63ffffffff166000908152600a602052604090206002015490565b6104056104ad366004612858565b611336565b6102d2600081565b6102606104c83660046127a6565b6114af565b6102606104db3660046127cf565b61168e565b61050c6104ee3660046128fc565b63ffffffff166000908152600a602052604090206003015460ff1690565b60405160ff909116815260200161026c565b61026061052c366004612858565b6116b7565b6102ad61053f36600461289b565b6117f4565b6102d26105523660046128fc565b63ffffffff166000908152600a602052604090206005015490565b6102ad61057b36600461278c565b611871565b6004546102d2565b6102ad610596366004612870565b611938565b6007546102d2565b6102606105b1366004612858565b6119b8565b6102d26105c43660046128fc565b63ffffffff166000908152600a602052604090206001015490565b6102606105ed366004612858565b611bfe565b6006546102d2565b61040561060836600461289b565b611e33565b6102ad611eb2565b60006001600160e01b03198216637965db0b60e01b148061064657506301ffc9a760e01b6001600160e01b03198316145b92915050565b61065760003361130d565b6106c35760405162461bcd60e51b815260206004820152603260248201527f436f6d7065746974696f6e202d206f70656e5374616b696e673a2043616c6c65604482015271391034b9903ab730baba3437b934bd32b21760711b60648201526084015b60405180910390fd5b600254600160a01b900463ffffffff166000818152600a602052604090206003015460ff1660041461075d5760405162461bcd60e51b815260206004820152603860248201527f436f6d7065746974696f6e202d206f70656e5374616b696e673a20507265766960448201527f6f757320706861736520697320696e636f6d706c6574652e000000000000000060648201526084016106ba565b8061076781612a93565b63ffffffff81166000818152600a60205260408120600301805460ff1916600117905560028054600160a01b90930263ffffffff60a01b19909316929092179091559092506107b99150829084612013565b60025460408051630eecae2160e01b815290516000926001600160a01b031691630eecae2191600480830192602092919082900301818787803b1580156107ff57600080fd5b505af1158015610813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083791906128e4565b9050806004600082825461084b9190612a0a565b9091555050600854600454670de0b6b3a76400009161086991612a42565b6108739190612a22565b60078190556004546108859190612a61565b60065560405163ffffffff8316907fdb78430d4256f71134803e3f9a309d288726d0a5aee4a19a67a4e381ddfde2f190600090a2505050565b6000828152602081905260409020600101546108db905b3361130d565b61093f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b60648201526084016106ba565b610949828261216d565b5050565b6109586000826121f1565b50565b33600090815260096020526040812054828114156109eb5760405162461bcd60e51b815260206004820152604160248201527f436f6d7065746974696f6e202d207365745374616b653a20596f75722073746160448201527f6b6520697320616c72656164792073657420746f207468697320616d6f756e746064820152601760f91b608482015260a4016106ba565b80831115610a6b57610a006105ed8285612a61565b610a665760405162461bcd60e51b815260206004820152603160248201527f436f6d7065746974696f6e202d207365745374616b653a20436f756c64206e6f6044820152703a1034b731b932b0b9b29039ba30b5b29760791b60648201526084016106ba565b610ade565b610a786105b18483612a61565b610ade5760405162461bcd60e51b815260206004820152603160248201527f436f6d7065746974696f6e202d207365745374616b653a20436f756c64206e6f6044820152703a103232b1b932b0b9b29039ba30b5b29760791b60648201526084016106ba565b50600192915050565b6001600160a01b0381163314610b575760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106ba565b6109498282612460565b610b6c60003361130d565b610bd55760405162461bcd60e51b815260206004820152603460248201527f436f6d7065746974696f6e202d20757064617465446174617365743a2043616c6044820152733632b91034b9903ab730baba3437b934bd32b21760611b60648201526084016106ba565b60025463ffffffff600160a01b909104166000818152600a602052604090206003015460ff16600114610c645760405162461bcd60e51b815260206004820152603160248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20436861604482015270363632b733b29034b99031b637b9b2b21760791b60648201526084016106ba565b82610cd75760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a204d757360448201527f742068617665207072652d6578697374696e6720646174617365742e0000000060648201526084016106ba565b610ce2818484612013565b505050565b6000610cf3813361130d565b610d655760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20706179506572666f726d616e63655265776160448201527f7264733a2043616c6c657220697320756e617574686f72697a65642e0000000060648201526084016106ba565b63ffffffff86166000908152600a6020526040902060039081015460ff161015610e065760405162461bcd60e51b815260206004820152604660248201527f436f6d7065746974696f6e202d20706179506572666f726d616e63655265776160448201527f7264733a204368616c6c656e676520697320696e20756e65787065637465642060648201526539ba30ba329760d11b608482015260a4016106ba565b838214610e955760405162461bcd60e51b815260206004820152605160248201527f436f6d7065746974696f6e202d20706179506572666f726d616e63655265776160448201527f7264733a204e756d626572206f662077696e6e65727320616e6420726577617260648201527032399030b932903234b33332b932b73a1760791b608482015260a4016106ba565b6000805b85811015610f8e576000858583818110610ec357634e487b7160e01b600052603260045260246000fd5b9050602002013590506000888884818110610eee57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f03919061278c565b6001600160a01b038116600090815260096020526040812080549293508492909190610f30908490612a0a565b90915550610f4090508285612a0a565b935081816001600160a01b03167fc993fae8b061033559278198ea3f4595bc21afd187db8384ddc0a40e2c7d6c1360405160405180910390a350508080610f8690612a78565b915050610e99565b50600754811115610ff65760405162461bcd60e51b815260206004820152602c60248201527f546f74616c207061796f75742073756d206d6f7265207468616e20636f6d706560448201526b3a34ba34b7b7103837b7b61760a11b60648201526084016106ba565b80600460008282546110089190612a61565b9250508190555080600560008282546110219190612a0a565b90915550600192505063ffffffff87166000818152600a6020526040808220600301805460ff19166004179055518392917fc0578e95e81728b40769c9f26794792cb548b910e25dbaca95d16f2ad71e4cff91a35095945050505050565b61108a60003361130d565b6110f45760405162461bcd60e51b815260206004820152603560248201527f436f6d7065746974696f6e202d206f70656e5375626d697373696f6e3a204361604482015274363632b91034b9903ab730baba3437b934bd32b21760591b60648201526084016106ba565b60025463ffffffff600160a01b909104166000818152600a602052604090206003015460ff1660011461118f5760405162461bcd60e51b815260206004820152603f60248201527f436f6d7065746974696f6e202d206f70656e5375626d697373696f6e3a20436860448201527f616c6c656e676520697320696e20756e65787065637465642073746174652e0060648201526084016106ba565b63ffffffff81166000818152600a602052604080822060038101805460ff19166002908117909155600554910155517f173d82e68025325bf392a6c9b38fde6a6a4ecda962fb17a14daf81b4b561ed2e9190a250565b6111f060003361130d565b6112625760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d207570646174655374616b655468726573686f60448201527f6c643a2043616c6c657220697320756e617574686f72697a65642e000000000060648201526084016106ba565b6003819055604051339082907fc3dad8d972694b8a948b4205b1bb45cbb2c73729f86630689e1e41c36a2965fa90600090a350565b63ffffffff81166000908152600a602090815260409182902060050180548351818402810184019094528084526060939283018282801561130157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112e3575b50505050509050919050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061134281836124c5565b33600090815260096020526040902054600354919250908110156113ce5760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d207375626d69744e657750726564696374696f60448201527f6e733a205374616b652069732062656c6f77207468726573686f6c642e00000060648201526084016106ba565b63ffffffff82166000818152600a60209081526040822060058101805460018101825590845291832090910180546001600160a01b03191633179055918152600290910154600654611421908490612a42565b61142b9190612a22565b9050806004600082825461143f9190612a61565b9091555061144f90508183612a0a565b3360009081526009602052604081209190915560058054839290611474908490612a0a565b90915550506040518190839033907f35d3bb8baa4b2735a9b7bcd0d44b2b974ebbd7f04c135714d0ec9ebdd800674f90600090a45050919050565b60025463ffffffff600160a01b909104166000908152600a602052604081206003015460ff1660011461157f5760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d207472616e736665725374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c4016106ba565b33600090815260096020526040902054808311156115fa5760405162461bcd60e51b815260206004820152603260248201527f436f6d7065746974696f6e202d207472616e736665725374616b653a20496e736044820152713ab33334b1b4b2b73a103130b630b731b29760711b60648201526084016106ba565b3360009081526009602052604081208054859290611619908490612a61565b90915550506001600160a01b03841660009081526009602052604081208054859290611646908490612a0a565b90915550506040516001925083906001600160a01b0386169033907f1e07278daf12d879e91ea076cf43032a70d56cb1d6e8bc91534dcd17f61e18f390600090a45092915050565b6002546000906116ae90600160a01b900463ffffffff1686868686610ce7565b95945050505050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561170a57600080fd5b505af115801561171e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117429190612838565b6117a35760405162461bcd60e51b815260206004820152602c60248201527f546f75726e616d656e74202d2073706f6e736f723a20546f6b656e207472616e60448201526b39b332b9103330b4b632b21760a11b60648201526084016106ba565b6004546117b08382612a0a565b600455600191506117c18382612a0a565b604051849033907f64939930c3fd0a1fe9e7fb9810272db7730a0f02b900972787bcb79fb6fd3d2d90600090a450919050565b816118675760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a204d757360448201527f742068617665207072652d6578697374696e6720726573756c74732e0000000060648201526084016106ba565b61094982826121f1565b61187c60003361130d565b6118ee5760405162461bcd60e51b815260206004820152603960248201527f436f6d7065746974696f6e202d207570646174655661756c744164647265737360448201527f3a2043616c6c657220697320756e617574686f72697a65642e0000000000000060648201526084016106ba565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f5e74f6697ae9d8e4ed8c4e8cb2f44acc9909529ce81812aab23103b3de223f6690600090a250565b600082815260208190526040902060010154611953906108d5565b610b575760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b60648201526084016106ba565b60025463ffffffff600160a01b909104166000908152600a602052604081206003015460ff16600114611a885760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c4016106ba565b3360009081526009602052604090205480831115611b0e5760405162461bcd60e51b815260206004820152603f60248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20496e7360448201527f756666696369656e742066756e647320666f72207769746864726177616c2e0060648201526084016106ba565b611b188382612a61565b3360009081526009602052604081209190915560058054859290611b3d908490612a61565b909155505060015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015611b8e57600080fd5b505af1158015611ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc69190612838565b5060405160019250839033907f700865370ffb2a65a2b0242e6a64b21ac907ed5ecd46c9cffc729c177b2b1c6990600090a350919050565b60025463ffffffff600160a01b909104166000908152600a602052604081206003015460ff16600114611cce5760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c4016106ba565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611d2057600080fd5b505af1158015611d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d589190612838565b611dc05760405162461bcd60e51b815260206004820152603360248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20546f6b60448201527232b7102a3930b739b332b9103330b4b632b21760691b60648201526084016106ba565b3360009081526009602052604081208054849290611ddf908490612a0a565b925050819055508160056000828254611df89190612a0a565b909155505060405160019150829033907f8b0ed825817a2e696c9a931715af4609fc60e1701f09c89ee7645130e937eb2d90600090a3919050565b600082611ea15760405162461bcd60e51b81526020600482015260426024820152600080516020612ace83398151915260448201527f4d7573742068617665207072652d6578697374696e67207375626d697373696f606482015261371760f11b608482015260a4016106ba565b611eab83836124c5565b9392505050565b611ebd60003361130d565b611f285760405162461bcd60e51b815260206004820152603660248201527f436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204360448201527530b63632b91034b9903ab730baba3437b934bd32b21760511b60648201526084016106ba565b60028054600160a01b900463ffffffff166000818152600a6020526040902060030154909160ff90911614611fc55760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204360448201527f68616c6c656e676520696e20756e65787065637465642073746174652e00000060648201526084016106ba565b63ffffffff81166000818152600a60205260408082206003908101805460ff19169091179055517faa5ebdc7900b87a79257aabbab219af255ada0be7148632ce5afcd622df7a88b9190a250565b8082141561209a5760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465446174617365743a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a4016106ba565b63ffffffff83166000908152600a602052604090205482146121245760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20496e6360448201527f6f7272656374206f6c642064617461736574207265666572656e63652e00000060648201526084016106ba565b63ffffffff83166000818152600a6020526040808220849055518392859290917f0b4ad7e2453c3c06a28c5cfe29a3067c6edde6eb03be4df2a461f9d806cb747e9190a4505050565b612177828261130d565b610949576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556121ad3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6121fc60003361130d565b6122655760405162461bcd60e51b815260206004820152603460248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043616c6044820152733632b91034b9903ab730baba3437b934bd32b21760611b60648201526084016106ba565b808214156122ec5760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a4016106ba565b600254600160a01b900463ffffffff166000818152600a6020526040902060039081015460ff1610156123875760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043686160448201527f6c6c656e676520696e20756e65787065637465642073746174652e000000000060648201526084016106ba565b63ffffffff81166000908152600a602052604090206001015483146124145760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a20436c6160448201527f736820696e206578697374696e6720726573756c747320686173682e0000000060648201526084016106ba565b63ffffffff81166000818152600a6020526040808220600101859055518492869290917f0fb7d772905d44c5fdd59d4ab87c7f40281e09f93e2e189d03737c6d82b154ea9190a4505050565b61246a828261130d565b15610949576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60028054600160a01b900463ffffffff166000818152600a6020526040902060030154909160ff909116146125505760405162461bcd60e51b815260206004820152603e6024820152600080516020612ace83398151915260448201527f4e6f7420617661696c61626c6520666f72207375626d697373696f6e732e000060648201526084016106ba565b816125b15760405162461bcd60e51b81526020600482015260396024820152600080516020612ace83398151915260448201527f43616e6e6f74207375626d697420656d70747920686173682e0000000000000060648201526084016106ba565b818314156126295760405162461bcd60e51b815260206004820152604b6024820152600080516020612ace83398151915260448201527f43616e6e6f74207570646174652077697468207468652073616d65206861736860648201526a1030b9903132b337b9329760a91b608482015260a4016106ba565b63ffffffff81166000908152600a6020908152604080832033845260040190915290205483146126ba5760405162461bcd60e51b81526020600482015260426024820152600080516020612ace83398151915260448201527f436c61736820696e206578697374696e67207375626d697373696f6e20686173606482015261341760f11b608482015260a4016106ba565b63ffffffff81166000818152600a6020908152604080832033808552600490910190925280832086905551859391927f953e3b79bb71898776bb2ef8bb919748c883b8b27c42e334de1ecdbf79d472bb91a492915050565b80356001600160a01b038116811461272957600080fd5b919050565b60008083601f84011261273f578182fd5b50813567ffffffffffffffff811115612756578182fd5b6020830191508360208260051b850101111561277157600080fd5b9250929050565b803563ffffffff8116811461272957600080fd5b60006020828403121561279d578081fd5b611eab82612712565b600080604083850312156127b8578081fd5b6127c183612712565b946020939093013593505050565b600080600080604085870312156127e4578182fd5b843567ffffffffffffffff808211156127fb578384fd5b6128078883890161272e565b9096509450602087013591508082111561281f578384fd5b5061282c8782880161272e565b95989497509550505050565b600060208284031215612849578081fd5b81518015158114611eab578182fd5b600060208284031215612869578081fd5b5035919050565b60008060408385031215612882578182fd5b8235915061289260208401612712565b90509250929050565b600080604083850312156128ad578182fd5b50508035926020909101359150565b6000602082840312156128cd578081fd5b81356001600160e01b031981168114611eab578182fd5b6000602082840312156128f5578081fd5b5051919050565b60006020828403121561290d578081fd5b611eab82612778565b60008060408385031215612928578182fd5b61293183612778565b915061289260208401612712565b600080600080600060608688031215612956578081fd5b61295f86612778565b9450602086013567ffffffffffffffff8082111561297b578283fd5b61298789838a0161272e565b9096509450604088013591508082111561299f578283fd5b506129ac8882890161272e565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156129fe5783516001600160a01b0316835292840192918401916001016129d9565b50909695505050505050565b60008219821115612a1d57612a1d612ab7565b500190565b600082612a3d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612a5c57612a5c612ab7565b500290565b600082821015612a7357612a73612ab7565b500390565b6000600019821415612a8c57612a8c612ab7565b5060010190565b600063ffffffff80831681811415612aad57612aad612ab7565b6001019392505050565b634e487b7160e01b600052601160045260246000fdfe436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a20a2646970667358221220b3bfd79626fc41e7f3590dcee999583c2490ce271d4f21f06afac863e4af60b664736f6c63430008040033",
  "bytecodeSha1": "3ab589705c9ea2dbf387baf19a19bccb00b821ae",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Competition",
  "coverageMap": {
    "branches": {
      "2": {
        "Competition._updateDataset": {
          "144": [
            12987,
            13019,
            true
          ],
          "145": [
            13114,
            13168,
            true
          ]
        },
        "Competition._updateResults": {
          "146": [
            14357,
            14396,
            true
          ],
          "147": [
            14471,
            14503,
            true
          ],
          "148": [
            14650,
            14689,
            true
          ],
          "149": [
            14771,
            14825,
            true
          ]
        },
        "Competition._updateSubmission": {
          "150": [
            6542,
            6581,
            true
          ],
          "151": [
            6666,
            6697,
            true
          ],
          "152": [
            6777,
            6815,
            true
          ],
          "153": [
            6913,
            6997,
            true
          ]
        },
        "Competition.closeSubmission": {
          "142": [
            13460,
            13499,
            true
          ],
          "143": [
            13628,
            13667,
            true
          ]
        },
        "Competition.decreaseStake": {
          "137": [
            3967,
            4008,
            true
          ],
          "138": [
            4183,
            4208,
            true
          ]
        },
        "Competition.increaseStake": {
          "139": [
            3393,
            3434,
            true
          ],
          "140": [
            3559,
            3618,
            true
          ]
        },
        "Competition.openStaking": {
          "115": [
            10942,
            10981,
            true
          ],
          "116": [
            11106,
            11145,
            true
          ]
        },
        "Competition.openSubmission": {
          "128": [
            11817,
            11856,
            true
          ],
          "129": [
            11984,
            12023,
            true
          ]
        },
        "Competition.payPerformanceRewards": {
          "124": [
            15456,
            15495,
            true
          ],
          "125": [
            15578,
            15617,
            true
          ],
          "126": [
            15710,
            15742,
            true
          ],
          "127": [
            16181,
            16227,
            false
          ]
        },
        "Competition.setStake": {
          "117": [
            2845,
            2872,
            true
          ],
          "118": [
            2956,
            2982,
            false
          ],
          "119": [
            3005,
            3046,
            true
          ],
          "120": [
            3138,
            3179,
            true
          ]
        },
        "Competition.sponsor": {
          "134": [
            2340,
            2399,
            true
          ]
        },
        "Competition.submitNewPredictions": {
          "131": [
            5402,
            5433,
            true
          ]
        },
        "Competition.transferStake": {
          "132": [
            4652,
            4693,
            true
          ],
          "133": [
            4868,
            4893,
            true
          ]
        },
        "Competition.updateDataset": {
          "121": [
            12401,
            12440,
            true
          ],
          "122": [
            12567,
            12606,
            true
          ],
          "123": [
            12678,
            12706,
            true
          ]
        },
        "Competition.updateResults": {
          "135": [
            14089,
            14117,
            true
          ]
        },
        "Competition.updateStakeThreshold": {
          "130": [
            10627,
            10666,
            true
          ]
        },
        "Competition.updateSubmission": {
          "141": [
            6147,
            6178,
            true
          ]
        },
        "Competition.updateVaultAddress": {
          "136": [
            10318,
            10357,
            true
          ]
        }
      },
      "91": {},
      "92": {}
    },
    "statements": {
      "2": {
        "Competition._updateDataset": {
          "98": [
            12979,
            13096
          ],
          "99": [
            13106,
            13234
          ],
          "100": [
            13244,
            13297
          ],
          "101": [
            13308,
            13376
          ]
        },
        "Competition._updateResults": {
          "102": [
            14349,
            14453
          ],
          "103": [
            14463,
            14580
          ],
          "104": [
            14642,
            14753
          ],
          "105": [
            14763,
            14890
          ],
          "106": [
            14900,
            14953
          ],
          "107": [
            14964,
            15032
          ]
        },
        "Competition._updateSubmission": {
          "108": [
            6489,
            6524
          ],
          "109": [
            6534,
            6648
          ],
          "110": [
            6658,
            6759
          ],
          "111": [
            6769,
            6895
          ],
          "112": [
            6905,
            7084
          ],
          "113": [
            7094,
            7177
          ],
          "114": [
            7188,
            7258
          ]
        },
        "Competition.closeSubmission": {
          "94": [
            13452,
            13558
          ],
          "95": [
            13620,
            13733
          ],
          "96": [
            13743,
            13781
          ],
          "97": [
            13792,
            13830
          ]
        },
        "Competition.decreaseStake": {
          "79": [
            3959,
            4115
          ],
          "80": [
            4175,
            4276
          ],
          "81": [
            4286,
            4332
          ],
          "82": [
            4342,
            4376
          ],
          "83": [
            4386,
            4426
          ],
          "84": [
            4461,
            4505
          ],
          "85": [
            4436,
            4450
          ]
        },
        "Competition.getCompetitionPool": {
          "11": [
            7380,
            7414
          ]
        },
        "Competition.getCurrentParticipationRewardsBudget": {
          "14": [
            7740,
            7810
          ]
        },
        "Competition.getCurrentPerformanceRewardsBudget": {
          "12": [
            7964,
            8030
          ]
        },
        "Competition.getCurrentTotalStaked": {
          "1": [
            7542,
            7582
          ]
        },
        "Competition.getDatasetHash": {
          "3": [
            8334,
            8380
          ]
        },
        "Competition.getLatestChallengeNumber": {
          "6": [
            8161,
            8202
          ]
        },
        "Competition.getPhase": {
          "9": [
            9089,
            9131
          ]
        },
        "Competition.getResultsHash": {
          "13": [
            8512,
            8558
          ]
        },
        "Competition.getStake": {
          "7": [
            9404,
            9432
          ]
        },
        "Competition.getStakeThreshold": {
          "2": [
            9251,
            9283
          ]
        },
        "Competition.getSubmission": {
          "4": [
            9883,
            9964
          ]
        },
        "Competition.getSubmissionCounter": {
          "10": [
            8706,
            8772
          ]
        },
        "Competition.getSubmitters": {
          "55": [
            8915,
            8967
          ]
        },
        "Competition.getTokenAddress": {
          "0": [
            9548,
            9578
          ]
        },
        "Competition.getTotalStakesLockedForChallenge": {
          "8": [
            10130,
            10208
          ]
        },
        "Competition.getVaultAddress": {
          "5": [
            9694,
            9724
          ]
        },
        "Competition.increaseStake": {
          "86": [
            3385,
            3541
          ],
          "87": [
            3551,
            3674
          ],
          "88": [
            3684,
            3718
          ],
          "89": [
            3728,
            3762
          ],
          "90": [
            3797,
            3841
          ],
          "91": [
            3772,
            3786
          ]
        },
        "Competition.openStaking": {
          "15": [
            10934,
            11036
          ],
          "16": [
            11098,
            11206
          ],
          "17": [
            11217,
            11234
          ],
          "18": [
            11245,
            11283
          ],
          "19": [
            11293,
            11328
          ],
          "20": [
            11339,
            11395
          ],
          "21": [
            11450,
            11480
          ],
          "22": [
            11491,
            11586
          ],
          "23": [
            11596,
            11684
          ],
          "24": [
            11695,
            11730
          ]
        },
        "Competition.openSubmission": {
          "47": [
            11809,
            11914
          ],
          "48": [
            11976,
            12091
          ],
          "49": [
            12102,
            12140
          ],
          "50": [
            12150,
            12224
          ],
          "51": [
            12235,
            12273
          ]
        },
        "Competition.payPerformanceRewards": {
          "34": [
            15448,
            15560
          ],
          "35": [
            15570,
            15692
          ],
          "36": [
            15702,
            15828
          ],
          "37": [
            16019,
            16050
          ],
          "38": [
            16064,
            16091
          ],
          "39": [
            16105,
            16157
          ],
          "40": [
            15904,
            15907
          ],
          "41": [
            16243,
            16297
          ],
          "42": [
            16336,
            16367
          ],
          "43": [
            16381,
            16415
          ],
          "44": [
            16429,
            16443
          ],
          "45": [
            16463,
            16501
          ],
          "46": [
            16512,
            16569
          ],
          "69": [
            15195,
            15263
          ]
        },
        "Competition.setStake": {
          "26": [
            2837,
            2942
          ],
          "27": [
            2997,
            3100
          ],
          "28": [
            3130,
            3233
          ],
          "29": [
            3253,
            3267
          ]
        },
        "Competition.sponsor": {
          "70": [
            2332,
            2448
          ],
          "71": [
            2513,
            2564
          ],
          "72": [
            2574,
            2588
          ],
          "73": [
            2599,
            2670
          ]
        },
        "Competition.submitNewPredictions": {
          "56": [
            5269,
            5332
          ],
          "57": [
            5394,
            5499
          ],
          "58": [
            5509,
            5565
          ],
          "59": [
            5722,
            5762
          ],
          "60": [
            5772,
            5829
          ],
          "61": [
            5839,
            5882
          ],
          "62": [
            5893,
            5975
          ]
        },
        "Competition.submitResults": {
          "25": [
            13923,
            13962
          ]
        },
        "Competition.transferStake": {
          "63": [
            4644,
            4800
          ],
          "64": [
            4860,
            4948
          ],
          "65": [
            4958,
            4992
          ],
          "66": [
            5002,
            5035
          ],
          "67": [
            5070,
            5127
          ],
          "68": [
            5045,
            5059
          ]
        },
        "Competition.updateDataset": {
          "30": [
            12393,
            12497
          ],
          "31": [
            12559,
            12660
          ],
          "32": [
            12670,
            12771
          ],
          "33": [
            12781,
            12844
          ]
        },
        "Competition.updateResults": {
          "74": [
            14081,
            14182
          ],
          "75": [
            14192,
            14238
          ]
        },
        "Competition.updateStakeThreshold": {
          "52": [
            10619,
            10730
          ],
          "53": [
            10740,
            10775
          ],
          "54": [
            10786,
            10843
          ]
        },
        "Competition.updateSubmission": {
          "92": [
            6139,
            6249
          ],
          "93": [
            6259,
            6332
          ]
        },
        "Competition.updateVaultAddress": {
          "76": [
            10310,
            10419
          ],
          "77": [
            10429,
            10461
          ],
          "78": [
            10472,
            10513
          ]
        }
      },
      "91": {},
      "92": {}
    }
  },
  "dependencies": [
    "IToken",
    "IVault"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "559:16019:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566:214:7;;;;;;:::i;:::-;;:::i;:::-;;;6822:14:93;;6815:22;6797:41;;6785:2;6770:18;3566:214:7;;;;;;;;9445:140:2;9571:6;;-1:-1:-1;;;;;9571:6:2;9445:140;;;-1:-1:-1;;;;;5288:32:93;;;5270:51;;5258:2;5243:18;9445:140:2;5225:102:93;10856:881:2;;;;;;:::i;:::-;;:::i;:::-;;4185:121:7;;;;;;:::i;:::-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121;;;;6995:25:93;;;6983:2;6968:18;4185:121:7;6950:76:93;7427:162:2;7563:19;;7427:162;;4556:228:7;;;;;;:::i;:::-;;:::i;13843:126:2:-;;;;;;:::i;:::-;;:::i;9144:146::-;9268:15;;9144:146;;2683:591;;;;;;:::i;:::-;;:::i;5740:214:7:-;;;;;;:::i;:::-;;:::i;8215:172:2:-;;;;;;:::i;:::-;8344:28;;8303:15;8344:28;;;:11;:28;;;;;:36;;8215:172;12286:565;;;;;;:::i;:::-;;:::i;15276:1300::-;;;;;;:::i;:::-;;:::i;11747:533::-;;;:::i;10526:324::-;;;;;;:::i;:::-;;:::i;9737:234::-;;;;;;:::i;:::-;9900:28;;;;9845:22;9900:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;9900:64:2;;;;;:51;;;;:64;;;;;9737:234;9591:140;9717:6;;-1:-1:-1;;;;;9717:6:2;9591:140;;8043:166;8185:17;;-1:-1:-1;;;8185:17:2;;;;8043:166;;;25590:10:93;25578:23;;;25560:42;;25548:2;25533:18;8043:166:2;25515:93:93;9296:143:2;;;;;;:::i;:::-;-1:-1:-1;;;;;9412:20:2;9375:13;9412:20;;;:7;:20;;;;;;;9296:143;8785:189;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3867:137:7:-;;;;;;:::i;:::-;;:::i;9977:238:2:-;;;;;;:::i;:::-;10156:28;;10083:31;10156:28;;;:11;:28;;;;;:52;;;;9977:238;5140:842;;;;;;:::i;:::-;;:::i;2363:49:7:-;;2408:4;2363:49;;4518:616:2;;;;;;:::i;:::-;;:::i;15045:225::-;;;;;;:::i;:::-;;:::i;8980:158::-;;;;;;:::i;:::-;9097:28;;9062:11;9097:28;;;:11;:28;;;;;:34;;;;;;8980:158;;;;25785:4:93;25773:17;;;25755:36;;25743:2;25728:18;8980:158:2;25710:87:93;2176:501:2;;;;;;:::i;:::-;;:::i;13975:270::-;;;;;;:::i;:::-;;:::i;8571:208::-;;;;;;:::i;:::-;8726:28;;8665:25;8726:28;;;:11;:28;;;;;:39;;:46;;8571:208;10221:299;;;;;;:::i;:::-;;:::i;7271:150::-;7398:16;;7271:150;;5018:231:7;;;;;;:::i;:::-;;:::i;7823:214:2:-;7998:32;;7823:214;;3854:658;;;;;;:::i;:::-;;:::i;8393:172::-;;;;;;:::i;:::-;8522:28;;8481:15;8522:28;;;:11;:28;;;;;:36;;;;8393:172;3280:568;;;;;;:::i;:::-;;:::i;7595:222::-;7776:34;;7595:222;;5988:351;;;;;;:::i;:::-;;:::i;13389:448::-;;;:::i;3566:214:7:-;3651:4;-1:-1:-1;;;;;;3674:47:7;;-1:-1:-1;;;3674:47:7;;:99;;-1:-1:-1;;;;;;;;;;871:40:75;;;3737:36:7;3667:106;3566:214;-1:-1:-1;;3566:214:7:o;10856:881:2:-;10942:39;2408:4:7;10970:10:2;10942:7;:39::i;:::-;10934:102;;;;-1:-1:-1;;;10934:102:2;;16905:2:93;10934:102:2;;;16887:21:93;16944:2;16924:18;;;16917:30;16983:34;16963:18;;;16956:62;-1:-1:-1;;;17034:18:93;;;17027:48;17092:19;;10934:102:2;;;;;;;;;11071:17;;-1:-1:-1;;;11071:17:2;;;;11046:22;11106:28;;;:11;:28;;;;;:34;;;;;11144:1;11106:39;11098:108;;;;-1:-1:-1;;;11098:108:2;;21511:2:93;11098:108:2;;;21493:21:93;21550:2;21530:18;;;21523:30;21589:34;21569:18;;;21562:62;21660:26;21640:18;;;21633:54;21704:19;;11098:108:2;21483:246:93;11098:108:2;11217:17;;;;:::i;:::-;11245:28;;;;;;;:11;:28;;;;;:34;;:38;;-1:-1:-1;;11245:38:2;11282:1;11245:38;;;11293:17;:35;;-1:-1:-1;;;11293:35:2;;;-1:-1:-1;;;;11293:35:2;;;;;;;;;;11217:17;;-1:-1:-1;11339:56:2;;-1:-1:-1;11217:17:2;;11383:11;11339:14;:56::i;:::-;11427:6;;:13;;;-1:-1:-1;;;11427:13:2;;;;11406:18;;-1:-1:-1;;;;;11427:6:2;;:11;;:13;;;;;;;;;;;;;;11406:18;11427:6;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11406:34;;11470:10;11450:16;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;11545:34:2;;11526:16;;11581:4;;11526:53;;;:::i;:::-;:60;;;;:::i;:::-;11491:32;:95;;;11633:16;;:51;;11491:95;11633:51;:::i;:::-;11596:34;:88;11700:30;;;;;;;;;;;10856:881;;;:::o;4556:228:7:-;4251:7;4277:12;;;;;;;;;;:22;;;4648:41;;4656:18;665:10:65;3867:137:7;:::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:7;;8086:2:93;4640:101:7;;;8068:21:93;8125:2;8105:18;;;8098:30;8164:34;8144:18;;;8137:62;-1:-1:-1;;;8215:18:93;;;8208:45;8270:19;;4640:101:7;8058:237:93;4640:101:7;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;13843:126:2:-;13923:39;13946:1;13950:11;13923:14;:39::i;:::-;13843:126;:::o;2683:591::-;2816:10;2757:12;2808:19;;;:7;:19;;;;;;2845:27;;;;2837:105;;;;-1:-1:-1;;;2837:105:2;;13454:2:93;2837:105:2;;;13436:21:93;13493:2;13473:18;;;13466:30;13532:34;13512:18;;;13505:62;13603:34;13583:18;;;13576:62;-1:-1:-1;;;13654:19:93;;;13647:32;13696:19;;2837:105:2;13426:295:93;2837:105:2;2970:12;2956:11;:26;2952:292;;;3005:41;3019:26;3033:12;3019:11;:26;:::i;3005:41::-;2997:103;;;;-1:-1:-1;;;2997:103:2;;20541:2:93;2997:103:2;;;20523:21:93;20580:2;20560:18;;;20553:30;20619:34;20599:18;;;20592:62;-1:-1:-1;;;20670:18:93;;;20663:47;20727:19;;2997:103:2;20513:239:93;2997:103:2;2952:292;;;3138:41;3152:26;3167:11;3152:12;:26;:::i;3138:41::-;3130:103;;;;-1:-1:-1;;;3130:103:2;;11285:2:93;3130:103:2;;;11267:21:93;11324:2;11304:18;;;11297:30;11363:34;11343:18;;;11336:62;-1:-1:-1;;;11414:18:93;;;11407:47;11471:19;;3130:103:2;11257:239:93;3130:103:2;-1:-1:-1;3263:4:2;;2683:591;-1:-1:-1;;2683:591:2:o;5740:214:7:-;-1:-1:-1;;;;;5835:23:7;;665:10:65;5835:23:7;5827:83;;;;-1:-1:-1;;;5827:83:7;;24545:2:93;5827:83:7;;;24527:21:93;24584:2;24564:18;;;24557:30;24623:34;24603:18;;;24596:62;-1:-1:-1;;;24674:18:93;;;24667:45;24729:19;;5827:83:7;24517:237:93;5827:83:7;5921:26;5933:4;5939:7;5921:11;:26::i;12286:565:2:-;12401:39;2408:4:7;12429:10:2;12401:7;:39::i;:::-;12393:104;;;;-1:-1:-1;;;12393:104:2;;14345:2:93;12393:104:2;;;14327:21:93;14384:2;14364:18;;;14357:30;14423:34;14403:18;;;14396:62;-1:-1:-1;;;14474:18:93;;;14467:50;14534:19;;12393:104:2;14317:242:93;12393:104:2;12532:17;;;-1:-1:-1;;;12532:17:2;;;;12507:22;12567:28;;;:11;:28;;;;;:34;;;;;;:39;12559:101;;;;-1:-1:-1;;;12559:101:2;;24127:2:93;12559:101:2;;;24109:21:93;24166:2;24146:18;;;24139:30;24205:34;24185:18;;;24178:62;-1:-1:-1;;;24256:18:93;;;24249:47;24313:19;;12559:101:2;24099:239:93;12559:101:2;12678:28;12670:101;;;;-1:-1:-1;;;12670:101:2;;19690:2:93;12670:101:2;;;19672:21:93;19729:2;19709:18;;;19702:30;19768:34;19748:18;;;19741:62;19839:30;19819:18;;;19812:58;19887:19;;12670:101:2;19662:250:93;12670:101:2;12781:63;12796:15;12813:14;12829;12781;:63::i;:::-;12286:565;;;:::o;15276:1300::-;15420:12;15456:39;15420:12;15484:10;15456:7;:39::i;:::-;15448:112;;;;-1:-1:-1;;;15448:112:2;;23214:2:93;15448:112:2;;;23196:21:93;23253:2;23233:18;;;23226:30;23292:34;23272:18;;;23265:62;23363:30;23343:18;;;23336:58;23411:19;;15448:112:2;23186:250:93;15448:112:2;15578:28;;;;;;;:11;:28;;;;;15616:1;15578:34;;;;;;:39;;15570:122;;;;-1:-1:-1;;;15570:122:2;;9054:2:93;15570:122:2;;;9036:21:93;9093:2;9073:18;;;9066:30;9132:34;9112:18;;;9105:62;9203:34;9183:18;;;9176:62;-1:-1:-1;;;9254:19:93;;;9247:37;9301:19;;15570:122:2;9026:300:93;15570:122:2;15710:32;;;15702:126;;;;-1:-1:-1;;;15702:126:2;;10795:2:93;15702:126:2;;;10777:21:93;10834:2;10814:18;;;10807:30;10873:34;10853:18;;;10846:62;10944:34;10924:18;;;10917:62;-1:-1:-1;;;10995:19:93;;;10988:48;11053:19;;15702:126:2;10767:311:93;15702:126:2;15838:19;;15867:301;15884:18;;;15867:301;;;15931:20;15954:7;;15962:1;15954:10;;;;;-1:-1:-1;;;15954:10:2;;;;;;;;;;;;;;;15931:33;;15978:14;15995:7;;16003:1;15995:10;;;;;-1:-1:-1;;;15995:10:2;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16019:15:2;;;;;;:7;:15;;;;;:31;;15978:27;;-1:-1:-1;16038:12:2;;16019:15;;;:31;;16038:12;;16019:31;:::i;:::-;;;;-1:-1:-1;16064:27:2;;-1:-1:-1;16079:12:2;16064:27;;:::i;:::-;;;16144:12;16136:6;-1:-1:-1;;;;;16110:47:2;;;;;;;;;;;15867:301;;15904:3;;;;;:::i;:::-;;;;15867:301;;;;16195:32;;16181:11;:46;16177:277;;;16243:54;;-1:-1:-1;;;16243:54:2;;12131:2:93;16243:54:2;;;12113:21:93;12170:2;12150:18;;;12143:30;12209:34;12189:18;;;12182:62;-1:-1:-1;;;12260:18:93;;;12253:42;12312:19;;16243:54:2;12103:234:93;16177:277:2;16356:11;16336:16;;:31;;;;;;;:::i;:::-;;;;;;;;16404:11;16381:19;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;16439:4:2;;-1:-1:-1;;16463:28:2;;;;;;;:11;:28;;;;;;:34;;:38;;-1:-1:-1;;16463:38:2;16500:1;16463:38;;;16517:52;16557:11;;16463:28;16517:52;;;15276:1300;;;;;;;;:::o;11747:533::-;11817:39;2408:4:7;11845:10:2;11817:7;:39::i;:::-;11809:105;;;;-1:-1:-1;;;11809:105:2;;20119:2:93;11809:105:2;;;20101:21:93;20158:2;20138:18;;;20131:30;20197:34;20177:18;;;20170:62;-1:-1:-1;;;20248:18:93;;;20241:51;20309:19;;11809:105:2;20091:243:93;11809:105:2;11949:17;;;-1:-1:-1;;;11949:17:2;;;;11924:22;11984:28;;;:11;:28;;;;;:34;;;;;;:39;11976:115;;;;-1:-1:-1;;;11976:115:2;;15613:2:93;11976:115:2;;;15595:21:93;15652:2;15632:18;;;15625:30;15691:34;15671:18;;;15664:62;15762:33;15742:18;;;15735:61;15813:19;;11976:115:2;15585:253:93;11976:115:2;12102:28;;;;;;;:11;:28;;;;;;:34;;;:38;;-1:-1:-1;;12102:38:2;12139:1;12102:38;;;;;;12205:19;;12150:52;;:74;12240:33;;;12102:28;12240:33;11747:533;:::o;10526:324::-;10627:39;2408:4:7;10655:10:2;10627:7;:39::i;:::-;10619:111;;;;-1:-1:-1;;;10619:111:2;;11703:2:93;10619:111:2;;;11685:21:93;11742:2;11722:18;;;11715:30;11781:34;11761:18;;;11754:62;11852:29;11832:18;;;11825:57;11899:19;;10619:111:2;11675:249:93;10619:111:2;10740:15;:35;;;10791:52;;10832:10;;10758:17;;10791:52;;;;;10526:324;:::o;8785:189::-;8928:28;;;;;;;:11;:28;;;;;;;;;:39;;8915:52;;;;;;;;;;;;;;;;;8872:27;;8915:52;;;8928:39;8915:52;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8915:52:2;;;;;;;;;;;;;;;;;;;;;;;8785:189;;;:::o;3867:137:7:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;;;;3867:137::o;5140:842:2:-;5229:22;5287:45;5229:22;5317:14;5287:17;:45::i;:::-;5373:10;5342:20;5365:19;;;:7;:19;;;;;;5418:15;;5269:63;;-1:-1:-1;5365:19:2;5402:31;;;5394:105;;;;-1:-1:-1;;;5394:105:2;;10365:2:93;5394:105:2;;;10347:21:93;10404:2;10384:18;;;10377:30;10443:34;10423:18;;;10416:62;10514:31;10494:18;;;10487:59;10563:19;;5394:105:2;10337:251:93;5394:105:2;5509:28;;;;;;;:11;:28;;;;;;;:39;;;:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5509:56:2;5554:10;5509:56;;;5659:28;;;:52;;;;;5607:34;;:49;;5644:12;;5607:49;:::i;:::-;:104;;;;:::i;:::-;5576:135;;5742:20;5722:16;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;5794:35:2;;-1:-1:-1;5809:20:2;5794:12;:35;:::i;:::-;5780:10;5772:19;;;;:7;:19;;;;;:57;;;;5839:19;:43;;5862:20;;5772:19;5839:43;;5862:20;;5839:43;:::i;:::-;;;;-1:-1:-1;;5898:77:2;;5954:20;;5940:12;;5928:10;;5898:77;;;;;5140:842;;;;;:::o;4518:616::-;4664:17;;;-1:-1:-1;;;4664:17:2;;;;4616:12;4652:30;;;:11;:30;;;;;:36;;;;;;:41;4644:156;;;;-1:-1:-1;;;4644:156:2;;8502:2:93;4644:156:2;;;8484:21:93;8541:3;8521:18;;;8514:31;8581:34;8561:18;;;8554:62;8652:34;8632:18;;;8625:62;8724:34;8703:19;;;8696:63;-1:-1:-1;;;8775:19:93;;;8768:37;8822:19;;4644:156:2;8474:373:93;4644:156:2;4839:10;4810:18;4831:19;;;:7;:19;;;;;;4868:25;;;;4860:88;;;;-1:-1:-1;;;4860:88:2;;9946:2:93;4860:88:2;;;9928:21:93;9985:2;9965:18;;;9958:30;10024:34;10004:18;;;9997:62;-1:-1:-1;;;10075:18:93;;;10068:48;10133:19;;4860:88:2;9918:240:93;4860:88:2;4966:10;4958:19;;;;:7;:19;;;;;:34;;4981:11;;4958:19;:34;;4981:11;;4958:34;:::i;:::-;;;;-1:-1:-1;;;;;;;5002:18:2;;;;;;:7;:18;;;;;:33;;5024:11;;5002:18;:33;;5024:11;;5002:33;:::i;:::-;;;;-1:-1:-1;;5075:52:2;;5055:4;;-1:-1:-1;5115:11:2;;-1:-1:-1;;;;;5075:52:2;;;5092:10;;5075:52;;;;;4518:616;;;;;:::o;15045:225::-;15227:17;;15167:12;;15205:58;;-1:-1:-1;;;15227:17:2;;;;15246:7;;15255;;15205:21;:58::i;:::-;15195:68;15045:225;-1:-1:-1;;;;;15045:225:2:o;2176:501::-;2340:6;;:59;;-1:-1:-1;;;2340:59:2;;2360:10;2340:59;;;5572:34:93;2380:4:2;5622:18:93;;;5615:43;5674:18;;;5667:34;;;2249:12:2;;-1:-1:-1;;;;;2340:6:2;;:19;;5507:18:93;;2340:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2332:116;;;;-1:-1:-1;;;2332:116:2;;9533:2:93;2332:116:2;;;9515:21:93;9572:2;9552:18;;;9545:30;9611:34;9591:18;;;9584:62;-1:-1:-1;;;9662:18:93;;;9655:42;9714:19;;2332:116:2;9505:234:93;2332:116:2;2487:16;;2532:32;2553:11;2487:16;2532:32;:::i;:::-;2513:16;:51;2584:4;;-1:-1:-1;2637:32:2;2658:11;2637:18;:32;:::i;:::-;2604:66;;2624:11;;2612:10;;2604:66;;;;;2176:501;;;;:::o;13975:270::-;14089:28;14081:101;;;;-1:-1:-1;;;14081:101:2;;16045:2:93;14081:101:2;;;16027:21:93;16084:2;16064:18;;;16057:30;16123:34;16103:18;;;16096:62;16194:30;16174:18;;;16167:58;16242:19;;14081:101:2;16017:250:93;14081:101:2;14192:46;14207:14;14223;14192;:46::i;10221:299::-;10318:39;2408:4:7;10346:10:2;10318:7;:39::i;:::-;10310:109;;;;-1:-1:-1;;;10310:109:2;;22368:2:93;10310:109:2;;;22350:21:93;22407:2;22387:18;;;22380:30;22446:34;22426:18;;;22419:62;22517:27;22497:18;;;22490:55;22562:19;;10310:109:2;22340:247:93;10310:109:2;10429:6;:32;;-1:-1:-1;;;;;;10429:32:2;-1:-1:-1;;;;;10429:32:2;;;;;;;;10477:36;;;;-1:-1:-1;;10477:36:2;10221:299;:::o;5018:231:7:-;4251:7;4277:12;;;;;;;;;;:22;;;5111:41;;5119:18;4185:121;5111:41;5103:102;;;;-1:-1:-1;;;5103:102:7;;13928:2:93;5103:102:7;;;13910:21:93;13967:2;13947:18;;;13940:30;14006:34;13986:18;;;13979:62;-1:-1:-1;;;14057:18:93;;;14050:46;14113:19;;5103:102:7;13900:238:93;3854:658:2;3979:17;;;-1:-1:-1;;;3979:17:2;;;;3931:12;3967:30;;;:11;:30;;;;;:36;;;;;;:41;3959:156;;;;-1:-1:-1;;;3959:156:2;;17752:2:93;3959:156:2;;;17734:21:93;17791:3;17771:18;;;17764:31;17831:34;17811:18;;;17804:62;17902:34;17882:18;;;17875:62;17974:34;17953:19;;;17946:63;-1:-1:-1;;;18025:19:93;;;18018:37;18072:19;;3959:156:2;17724:373:93;3959:156:2;4154:10;4125:18;4146:19;;;:7;:19;;;;;;4183:25;;;;4175:101;;;;-1:-1:-1;;;4175:101:2;;21936:2:93;4175:101:2;;;21918:21:93;21975:2;21955:18;;;21948:30;22014:34;21994:18;;;21987:62;22085:33;22065:18;;;22058:61;22136:19;;4175:101:2;21908:253:93;4175:101:2;4308:24;4321:11;4308:10;:24;:::i;:::-;4294:10;4286:19;;;;:7;:19;;;;;:46;;;;4342:19;:34;;4365:11;;4286:19;4342:34;;4365:11;;4342:34;:::i;:::-;;;;-1:-1:-1;;4386:6:2;;:40;;-1:-1:-1;;;4386:40:2;;4402:10;4386:40;;;5886:51:93;5953:18;;;5946:34;;;-1:-1:-1;;;;;4386:6:2;;;;:15;;5859:18:93;;4386:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4466:39:2;;4446:4;;-1:-1:-1;4493:11:2;;4481:10;;4466:39;;;;;3854:658;;;;:::o;3280:568::-;3405:17;;;-1:-1:-1;;;3405:17:2;;;;3357:12;3393:30;;;:11;:30;;;;;:36;;;;;;:41;3385:156;;;;-1:-1:-1;;;3385:156:2;;20959:2:93;3385:156:2;;;20941:21:93;20998:3;20978:18;;;20971:31;21038:34;21018:18;;;21011:62;21109:34;21089:18;;;21082:62;21181:34;21160:19;;;21153:63;-1:-1:-1;;;21232:19:93;;;21225:37;21279:19;;3385:156:2;20931:373:93;3385:156:2;3559:6;;:59;;-1:-1:-1;;;3559:59:2;;3579:10;3559:59;;;5572:34:93;3599:4:2;5622:18:93;;;5615:43;5674:18;;;5667:34;;;-1:-1:-1;;;;;3559:6:2;;;;:19;;5507:18:93;;3559:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3551:123;;;;-1:-1:-1;;;3551:123:2;;22794:2:93;3551:123:2;;;22776:21:93;22833:2;22813:18;;;22806:30;22872:34;22852:18;;;22845:62;-1:-1:-1;;;22923:18:93;;;22916:49;22982:19;;3551:123:2;22766:241:93;3551:123:2;3692:10;3684:19;;;;:7;:19;;;;;:34;;3707:11;;3684:19;:34;;3707:11;;3684:34;:::i;:::-;;;;;;;;3751:11;3728:19;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;3802:39:2;;3782:4;;-1:-1:-1;3829:11:2;;3817:10;;3802:39;;;;;3280:568;;;:::o;5988:351::-;6101:22;6147:31;6139:110;;;;-1:-1:-1;;;6139:110:2;;24961:2:93;6139:110:2;;;24943:21:93;25000:2;24980:18;;;24973:30;-1:-1:-1;;;;;;;;;;;25019:18:93;;;25012:62;25110:34;25090:18;;;25083:62;-1:-1:-1;;;25161:19:93;;;25154:33;25204:19;;6139:110:2;24933:296:93;6139:110:2;6277:55;6295:17;6314;6277;:55::i;:::-;6259:73;5988:351;-1:-1:-1;;;5988:351:2:o;13389:448::-;13460:39;2408:4:7;13488:10:2;13460:7;:39::i;:::-;13452:106;;;;-1:-1:-1;;;13452:106:2;;7663:2:93;13452:106:2;;;7645:21:93;7702:2;7682:18;;;7675:30;7741:34;7721:18;;;7714:62;-1:-1:-1;;;7792:18:93;;;7785:52;7854:19;;13452:106:2;7635:244:93;13452:106:2;13593:17;;;-1:-1:-1;;;13593:17:2;;;;13568:22;13628:28;;;:11;:28;;;;;:34;;;13593:17;;13628:34;;;;:39;13620:113;;;;-1:-1:-1;;;13620:113:2;;7233:2:93;13620:113:2;;;7215:21:93;7272:2;7252:18;;;7245:30;7311:34;7291:18;;;7284:62;7382:31;7362:18;;;7355:59;7431:19;;13620:113:2;7205:251:93;13620:113:2;13743:28;;;;;;;:11;:28;;;;;;13780:1;13743:34;;;:38;;-1:-1:-1;;13743:38:2;;;;;;13797:33;;;13743:28;13797:33;13389:448;:::o;12857:526::-;13005:14;12987;:32;;12979:117;;;;-1:-1:-1;;;12979:117:2;;18779:2:93;12979:117:2;;;18761:21:93;18818:2;18798:18;;;18791:30;18857:34;18837:18;;;18830:62;18928:34;18908:18;;;18901:62;-1:-1:-1;;;18979:19:93;;;18972:39;19028:19;;12979:117:2;18751:302:93;12979:117:2;13114:28;;;;;;;:11;:28;;;;;:36;:54;;13106:128;;;;-1:-1:-1;;;13106:128:2;;19260:2:93;13106:128:2;;;19242:21:93;19299:2;19279:18;;;19272:30;19338:34;19318:18;;;19311:62;19409:31;19389:18;;;19382:59;19458:19;;13106:128:2;19232:251:93;13106:128:2;13244:28;;;;;;;:11;:28;;;;;;:53;;;13313:63;13283:14;;13345;;13244:28;;13313:63;;13244:28;13313:63;12857:526;;;:::o;6952:224:7:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:65;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;14251:788:2:-;14357:39;2408:4:7;14385:10:2;14357:7;:39::i;:::-;14349:104;;;;-1:-1:-1;;;14349:104:2;;15192:2:93;14349:104:2;;;15174:21:93;15231:2;15211:18;;;15204:30;15270:34;15250:18;;;15243:62;-1:-1:-1;;;15321:18:93;;;15314:50;15381:19;;14349:104:2;15164:242:93;14349:104:2;14489:14;14471;:32;;14463:117;;;;-1:-1:-1;;;14463:117:2;;12973:2:93;14463:117:2;;;12955:21:93;13012:2;12992:18;;;12985:30;13051:34;13031:18;;;13024:62;13122:34;13102:18;;;13095:62;-1:-1:-1;;;13173:19:93;;;13166:39;13222:19;;14463:117:2;12945:302:93;14463:117:2;14615:17;;-1:-1:-1;;;14615:17:2;;;;14590:22;14650:28;;;:11;:28;;;;;14688:1;14650:34;;;;;;:39;;14642:111;;;;-1:-1:-1;;;14642:111:2;;17324:2:93;14642:111:2;;;17306:21:93;17363:2;17343:18;;;17336:30;17402:34;17382:18;;;17375:62;17473:29;17453:18;;;17446:57;17520:19;;14642:111:2;17296:249:93;14642:111:2;14771:28;;;;;;;:11;:28;;;;;:36;;;:54;;14763:127;;;;-1:-1:-1;;;14763:127:2;;12544:2:93;14763:127:2;;;12526:21:93;12583:2;12563:18;;;12556:30;12622:34;12602:18;;;12595:62;12693:30;12673:18;;;12666:58;12741:19;;14763:127:2;12516:250:93;14763:127:2;14900:28;;;;;;;:11;:28;;;;;;:36;;:53;;;14969:63;14939:14;;15001;;14900:28;;14969:63;;14900:28;14969:63;14251:788;;;:::o;7182:225:7:-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:7;;;;;;;;;;:37;;-1:-1:-1;;7294:37:7;;;7350:40;665:10:65;;7294:12:7;;7350:40;;7326:5;7350:40;7182:225;;:::o;6345:920:2:-;6507:17;;;-1:-1:-1;;;6507:17:2;;;;6451:22;6542:28;;;:11;:28;;;;;:34;;;6507:17;;6542:34;;;;:39;6534:114;;;;-1:-1:-1;;;6534:114:2;;16474:2:93;6534:114:2;;;16456:21:93;16513:2;16493:18;;;16486:30;-1:-1:-1;;;;;;;;;;;16532:18:93;;;16525:62;16623:32;16603:18;;;16596:60;16673:19;;6534:114:2;16446:252:93;6534:114:2;6666:31;6658:101;;;;-1:-1:-1;;;6658:101:2;;14766:2:93;6658:101:2;;;14748:21:93;14805:2;14785:18;;;14778:30;-1:-1:-1;;;;;;;;;;;14824:18:93;;;14817:62;14915:27;14895:18;;;14888:55;14960:19;;6658:101:2;14738:247:93;6658:101:2;6798:17;6777;:38;;6769:126;;;;-1:-1:-1;;;6769:126:2;;23643:2:93;6769:126:2;;;23625:21:93;23682:2;23662:18;;;23655:30;-1:-1:-1;;;;;;;;;;;23701:18:93;;;23694:62;23792:34;23772:18;;;23765:62;-1:-1:-1;;;23843:19:93;;;23836:42;23895:19;;6769:126:2;23615:305:93;6769:126:2;6913:28;;;;;;;:11;:28;;;;;;;;6965:10;6913:63;;:51;;:63;;;;;;:84;;6905:179;;;;-1:-1:-1;;;6905:179:2;;18304:2:93;6905:179:2;;;18286:21:93;18343:2;18323:18;;;18316:30;-1:-1:-1;;;;;;;;;;;18362:18:93;;;18355:62;18453:34;18433:18;;;18426:62;-1:-1:-1;;;18504:19:93;;;18497:33;18547:19;;6905:179:2;18276:296:93;6905:179:2;7094:28;;;;;;;:11;:28;;;;;;;;7146:10;7094:63;;;:51;;;;:63;;;;;;:83;;;7193:65;7160:17;;7146:10;;7193:65;;;6345:920;;;;:::o;14:173:93:-;82:20;;-1:-1:-1;;;;;131:31:93;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:395::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:2;;344:8;334;327:26;286:2;-1:-1:-1;374:20:93;;417:18;406:30;;403:2;;;456:8;446;439:26;403:2;500:4;492:6;488:17;476:29;;560:3;553:4;543:6;540:1;536:14;528:6;524:27;520:38;517:47;514:2;;;577:1;574;567:12;514:2;276:311;;;;;:::o;592:163::-;659:20;;719:10;708:22;;698:33;;688:2;;745:1;742;735:12;760:196;819:6;872:2;860:9;851:7;847:23;843:32;840:2;;;893:6;885;878:22;840:2;921:29;940:9;921:29;:::i;961:264::-;1029:6;1037;1090:2;1078:9;1069:7;1065:23;1061:32;1058:2;;;1111:6;1103;1096:22;1058:2;1139:29;1158:9;1139:29;:::i;:::-;1129:39;1215:2;1200:18;;;;1187:32;;-1:-1:-1;;;1048:177:93:o;1230:803::-;1352:6;1360;1368;1376;1429:2;1417:9;1408:7;1404:23;1400:32;1397:2;;;1450:6;1442;1435:22;1397:2;1495:9;1482:23;1524:18;1565:2;1557:6;1554:14;1551:2;;;1586:6;1578;1571:22;1551:2;1630:70;1692:7;1683:6;1672:9;1668:22;1630:70;:::i;:::-;1719:8;;-1:-1:-1;1604:96:93;-1:-1:-1;1807:2:93;1792:18;;1779:32;;-1:-1:-1;1823:16:93;;;1820:2;;;1857:6;1849;1842:22;1820:2;;1901:72;1965:7;1954:8;1943:9;1939:24;1901:72;:::i;:::-;1387:646;;;;-1:-1:-1;1992:8:93;-1:-1:-1;;;;1387:646:93:o;2038:297::-;2105:6;2158:2;2146:9;2137:7;2133:23;2129:32;2126:2;;;2179:6;2171;2164:22;2126:2;2216:9;2210:16;2269:5;2262:13;2255:21;2248:5;2245:32;2235:2;;2296:6;2288;2281:22;2340:190;2399:6;2452:2;2440:9;2431:7;2427:23;2423:32;2420:2;;;2473:6;2465;2458:22;2420:2;-1:-1:-1;2501:23:93;;2410:120;-1:-1:-1;2410:120:93:o;2535:264::-;2603:6;2611;2664:2;2652:9;2643:7;2639:23;2635:32;2632:2;;;2685:6;2677;2670:22;2632:2;2726:9;2713:23;2703:33;;2755:38;2789:2;2778:9;2774:18;2755:38;:::i;:::-;2745:48;;2622:177;;;;;:::o;2804:258::-;2872:6;2880;2933:2;2921:9;2912:7;2908:23;2904:32;2901:2;;;2954:6;2946;2939:22;2901:2;-1:-1:-1;;2982:23:93;;;3052:2;3037:18;;;3024:32;;-1:-1:-1;2891:171:93:o;3067:306::-;3125:6;3178:2;3166:9;3157:7;3153:23;3149:32;3146:2;;;3199:6;3191;3184:22;3146:2;3230:23;;-1:-1:-1;;;;;;3282:32:93;;3272:43;;3262:2;;3334:6;3326;3319:22;3573:194;3643:6;3696:2;3684:9;3675:7;3671:23;3667:32;3664:2;;;3717:6;3709;3702:22;3664:2;-1:-1:-1;3745:16:93;;3654:113;-1:-1:-1;3654:113:93:o;3772:194::-;3830:6;3883:2;3871:9;3862:7;3858:23;3854:32;3851:2;;;3904:6;3896;3889:22;3851:2;3932:28;3950:9;3932:28;:::i;3971:268::-;4038:6;4046;4099:2;4087:9;4078:7;4074:23;4070:32;4067:2;;;4120:6;4112;4105:22;4067:2;4148:28;4166:9;4148:28;:::i;:::-;4138:38;;4195;4229:2;4218:9;4214:18;4195:38;:::i;4244:875::-;4374:6;4382;4390;4398;4406;4459:2;4447:9;4438:7;4434:23;4430:32;4427:2;;;4480:6;4472;4465:22;4427:2;4508:28;4526:9;4508:28;:::i;:::-;4498:38;;4587:2;4576:9;4572:18;4559:32;4610:18;4651:2;4643:6;4640:14;4637:2;;;4672:6;4664;4657:22;4637:2;4716:70;4778:7;4769:6;4758:9;4754:22;4716:70;:::i;:::-;4805:8;;-1:-1:-1;4690:96:93;-1:-1:-1;4893:2:93;4878:18;;4865:32;;-1:-1:-1;4909:16:93;;;4906:2;;;4943:6;4935;4928:22;4906:2;;4987:72;5051:7;5040:8;5029:9;5025:24;4987:72;:::i;:::-;4417:702;;;;-1:-1:-1;4417:702:93;;-1:-1:-1;5078:8:93;;4961:98;4417:702;-1:-1:-1;;;4417:702:93:o;5991:661::-;6162:2;6214:21;;;6284:13;;6187:18;;;6306:22;;;6133:4;;6162:2;6385:15;;;;6359:2;6344:18;;;6133:4;6431:195;6445:6;6442:1;6439:13;6431:195;;;6510:13;;-1:-1:-1;;;;;6506:39:93;6494:52;;6601:15;;;;6566:12;;;;6542:1;6460:9;6431:195;;;-1:-1:-1;6643:3:93;;6142:510;-1:-1:-1;;;;;;6142:510:93:o;25802:128::-;25842:3;25873:1;25869:6;25866:1;25863:13;25860:2;;;25879:18;;:::i;:::-;-1:-1:-1;25915:9:93;;25850:80::o;25935:217::-;25975:1;26001;25991:2;;-1:-1:-1;;;26026:31:93;;26080:4;26077:1;26070:15;26108:4;26033:1;26098:15;25991:2;-1:-1:-1;26137:9:93;;25981:171::o;26157:168::-;26197:7;26263:1;26259;26255:6;26251:14;26248:1;26245:21;26240:1;26233:9;26226:17;26222:45;26219:2;;;26270:18;;:::i;:::-;-1:-1:-1;26310:9:93;;26209:116::o;26330:125::-;26370:4;26398:1;26395;26392:8;26389:2;;;26403:18;;:::i;:::-;-1:-1:-1;26440:9:93;;26379:76::o;26460:135::-;26499:3;-1:-1:-1;;26520:17:93;;26517:2;;;26540:18;;:::i;:::-;-1:-1:-1;26587:1:93;26576:13;;26507:88::o;26600:201::-;26638:3;26666:10;26711:2;26704:5;26700:14;26738:2;26729:7;26726:15;26723:2;;;26744:18;;:::i;:::-;26793:1;26780:15;;26646:155;-1:-1:-1;;;26646:155:93:o;26806:127::-;26867:10;26862:3;26858:20;26855:1;26848:31;26898:4;26895:1;26888:15;26922:4;26919:1;26912:15",
  "language": "Solidity",
  "natspec": {
    "author": "Rocket Capital Investment Pte Ltd",
    "details": "This contract manages registration and reward payouts for the RCI Tournament.IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes) ",
    "kind": "dev",
    "methods": {
      "closeSubmission()": {
        "details": "Called only by authorized admin to stop allowing submissions for a particular challenge.*"
      },
      "decreaseStake(uint256)": {
        "details": "Called by anyone to decrease their stake.",
        "params": {
          "amountToken": "Number of tokens to withdraw."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "getCompetitionPool()": {
        "details": "Called by anyone to check amount pooled into this contract.",
        "returns": {
          "competitionPool": "Amount of tokens in the competition pool in wei.*"
        }
      },
      "getCurrentParticipationRewardsBudget()": {
        "details": "Called by anyone to check the participation rewards budget allocation for the current challenge.",
        "returns": {
          "currentParticipationRewardsBudget": "Budget for participation rewards in wei.*"
        }
      },
      "getCurrentPerformanceRewardsBudget()": {
        "details": "Called by anyone to check the performance rewards budget for the current challenge.",
        "returns": {
          "currentPerformanceRewardsBudget": "Budget for performance rewards payment in wei.*"
        }
      },
      "getCurrentTotalStaked()": {
        "details": "Called by anyone to check the current total amount staked.",
        "returns": {
          "currentTotalStaked": "Amount of tokens currently staked in wei.*"
        }
      },
      "getDatasetHash(uint32)": {
        "details": "Called by anyone to obtain the dataset hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the dataset hash of."
        },
        "returns": {
          "dataset": "IPFS hash where the dataset of this particular challenge is stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getLatestChallengeNumber()": {
        "details": "Called by anyone to get the number of the latest challenge.As the challenge number begins from 1, this is also the total number of challenges created in this competition.",
        "returns": {
          "latestChallengeNumber": "Latest challenge created.*"
        }
      },
      "getPhase(uint32)": {
        "details": "Called by anyone to obtain the phase number for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the phase of."
        },
        "returns": {
          "phase": "The phase that this challenge is in.*"
        }
      },
      "getResultsHash(uint32)": {
        "details": "Called by anyone to obtain the results hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the results hash of."
        },
        "returns": {
          "results": "IPFS hash where results of this particular challenge are stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getStake(address)": {
        "details": "Called by anyone to obtain the stake amount in wei of a particular address.",
        "params": {
          "participant": "Address to query token balance of."
        },
        "returns": {
          "stake": "Token balance of given address in wei.*"
        }
      },
      "getStakeThreshold()": {
        "details": "Called by anyone to obtain the minimum amount of stake required to participate in the competition.",
        "returns": {
          "stakeThreshold": "Minimum stake amount in wei.*"
        }
      },
      "getSubmission(uint32,address)": {
        "details": "Called by anyone to get submission hash of a participant for a challenge.",
        "params": {
          "challengeNumber": "Challenge index to check on.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "submissionHash": "IPFS reference hash of participant's prediction submission for this challenge. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getSubmissionCounter(uint32)": {
        "details": "Called by anyone to obtain the number of submissions made for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the submission counter of."
        },
        "returns": {
          "submissionCounter": "Number of submissions made.*"
        }
      },
      "getSubmitters(uint32)": {
        "details": "Called by anyone to obtain the list of submitters for this particular challenge.Submitters refer to participants that have made submissions for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the submitters list of."
        },
        "returns": {
          "submitters": "List of submitter addresses.*"
        }
      },
      "getTokenAddress()": {
        "details": "Called by anyone to obtain the smart contract address of the ERC20 token used in this competition.",
        "returns": {
          "tokenAddress": "ERC20 Token smart contract address.*"
        }
      },
      "getTotalStakesLockedForChallenge(uint32)": {
        "details": "Called by anyone to check the total stakes locked for a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the total stakes locked of."
        },
        "returns": {
          "totalStakedForChallenge": "Total amount of tokens locked for this challenge.*"
        }
      },
      "getVaultAddress()": {
        "details": "Called by anyone to obtain the address of the vault contract.",
        "returns": {
          "vaultAddress": "Vault contract address.*"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseStake(uint256)": {
        "details": "Called by anyone to increase their stake.This performs an ERC20 transfer so the msg sender will need to grant approval to this contract before calling this function.",
        "params": {
          "amountToken": "The amount to add to their stake."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "openStaking(bytes32)": {
        "details": "Called only by authorized admin to start allowing staking for a new challenge.",
        "params": {
          "datasetHash": "IPFS reference hash where dataset for this challenge is stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "openSubmission()": {
        "details": "Called only by authorized admin to lock stakes and start allowing submissions for a particular challenge.*"
      },
      "payPerformanceRewards(address[],uint256[])": {
        "details": "Called only by authorized admin to move rewards from the competition pool to the winners' competition internal balances based on results from the current challenge.Note that the size of the array parameters passed in to this function is limited by the block gas limit.This function allows for the payout to be split into chunks by calling it repeatedly.",
        "params": {
          "rewards": "Array of corresponding amount of tokens in wei won by each winner.",
          "winners": "Array of winners' addresses."
        },
        "returns": {
          "success": "True if operation completes successfully.*"
        }
      },
      "payPerformanceRewards(uint32,address[],uint256[])": {
        "details": "Provides the same function as above but allows for challenge number to be specified.Note that the size of the array parameters passed in to this function is limited by the block gas limit.This function allows for the payout to be split into chunks by calling it repeatedly.",
        "params": {
          "challengeNumber": "Challenge to make rewards payment for.",
          "rewards": "Array of corresponding amount of tokens in wei won by each winner.",
          "winners": "Array of winners' addresses."
        },
        "returns": {
          "success": "True if operation completes successfully.*"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setStake(uint256)": {
        "details": "Called by anyone to set their stake to a particular value explicitly.Internally calls the increaseStake or decreaseStake function.This performs an ERC20 transfer so the msg sender may need to grant approval to this contract before calling this function.",
        "params": {
          "amountToken": "The explicit value to set their stake to."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "sponsor(uint256)": {
        "details": "Called by a sponsor to send tokens to the contract's competition pool. This pool is used for payouts to challenge winners.This performs an ERC20 transfer so the msg sender will need to grant approval to this contract before calling this function.",
        "params": {
          "amountToken": "The amount to send to the the competition pool."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "submitNewPredictions(bytes32)": {
        "details": "Called by participant to make a new prediction submission for the current challenge.Will be successful if the participant's stake is above the staking threshold.",
        "params": {
          "submissionHash": "IPFS reference hash of submission. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "challengeNumber": "Challenge that this submission was made for.*"
        }
      },
      "submitResults(bytes32)": {
        "details": "Called only by authorized admin to submit the IPFS reference for the results of a particular challenge.",
        "params": {
          "resultsHash": "IPFS reference hash where results for this challenge are stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferStake(address,uint256)": {
        "details": "Called by anyone to make transfers from their competition stake to the competition stake of another address.",
        "params": {
          "amountToken": "The amount to transfer.",
          "recipient": "Address of recipient."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateResults(bytes32,bytes32)": {
        "details": "Called only by authorized admin to update the IPFS reference for the results of the current challenge.",
        "params": {
          "newResultsHash": "IPFS reference hash where new results for this challenge are stored. This is the IPFS CID less the 1220 prefix.*",
          "oldResultsHash": "IPFS reference hash where previous results for this challenge are stored. This is the IPFS CID less the 1220 prefix."
        }
      },
      "updateStakeThreshold(uint256)": {
        "details": "Called only by authorized admin to update the minimum stake amount required to take part in the competition.",
        "params": {
          "newStakeThreshold": "New stake threshold amount in wei.*"
        }
      },
      "updateSubmission(bytes32,bytes32)": {
        "details": "Called by participant to modify prediction submission for the current challenge.",
        "params": {
          "newSubmissionHash": "IPFS reference hash of new submission. This is the IPFS CID less the 1220 prefix.",
          "oldSubmissionHash": "IPFS reference hash of previous submission. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "challengeNumber": "Challenge that this submission was made for.*"
        }
      },
      "updateVaultAddress(address)": {
        "details": "Called only by authorized admin to update the address of the vault this competition is linked to.",
        "params": {
          "newVaultAddress": "New vault address.*"
        }
      }
    },
    "title": "RCI Tournament Contract",
    "version": 1
  },
  "offset": [
    559,
    16578
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xD2DE2F85 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xEECFC33F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEECFC33F EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xEEDAD66B EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xF789B4E9 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xF7FB373D EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xFFC6FF1E EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD2DE2F85 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xD4F4B806 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xDEA1B2CE EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xE8B96DE1 EQ PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAF4D2212 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xAF4D2212 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xAF976FEC EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xB6CCE5E2 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC55E86B1 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xC8F971DF EQ PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x934D9012 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x9F2492A2 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA28F8847 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39E28777 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x60CDB6CC GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x60CDB6CC EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x65CACAA4 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x736D8C91 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x7A766460 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x9044265A EQ PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39E28777 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x3F230915 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x4BFDE7F8 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x58E2F50E EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x5EF53329 EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x315C455E EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x343CB6BE EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x35D9DB53 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x2313ED3E EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x25B06746 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x289B JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x293F JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x107F JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2916 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x282 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST PUSH2 0x260 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x405 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x2D2 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x168E JUMP JUMPDEST PUSH2 0x50C PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x260 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x53F CALLDATASIZE PUSH1 0x4 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x278C JUMP JUMPDEST PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x28FC JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x5ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2858 JUMP JUMPDEST PUSH2 0x1BFE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x405 PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x646 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206F70656E5374616B696E673A2043616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x391034B9903AB730BABA3437B934BD32B217 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206F70656E5374616B696E673A205072657669 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F757320706861736520697320696E636F6D706C6574652E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 PUSH2 0x767 DUP2 PUSH2 0x2A93 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 MUL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP3 POP PUSH2 0x7B9 SWAP2 POP DUP3 SWAP1 DUP5 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEECAE21 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xEECAE21 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x869 SWAP2 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND SWAP1 PUSH32 0xDB78430D4256F71134803E3F9A309D288726D0A5AEE4A19A67A4E381DDFDE2F1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8DB SWAP1 JUMPDEST CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0x216D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x958 PUSH1 0x0 DUP3 PUSH2 0x21F1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 EQ ISZERO PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207365745374616B653A20596F757220737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B6520697320616C72656164792073657420746F207468697320616D6F756E74 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA00 PUSH2 0x5ED DUP3 DUP6 PUSH2 0x2A61 JUMP JUMPDEST PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207365745374616B653A20436F756C64206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3A1034B731B932B0B9B29039BA30B5B297 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST PUSH2 0xA78 PUSH2 0x5B1 DUP5 DUP4 PUSH2 0x2A61 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207365745374616B653A20436F756C64206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3A103232B1B932B0B9B29039BA30B5B297 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xB6C PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616C PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3632B91034B9903AB730BABA3437B934BD32B217 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A20436861 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x363632B733B29034B99031B637B9B2B217 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP3 PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A204D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x742068617665207072652D6578697374696E6720646174617365742E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xCE2 DUP2 DUP5 DUP5 PUSH2 0x2013 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 DUP2 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7264733A2043616C6C657220697320756E617574686F72697A65642E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND LT ISZERO PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7264733A204368616C6C656E676520697320696E20756E657870656374656420 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x39BA30BA3297 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST DUP4 DUP3 EQ PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7264733A204E756D626572206F662077696E6E65727320616E64207265776172 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x32399030B932903234B33332B932B73A17 PUSH1 0x79 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF8E JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xEC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xEEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xF30 SWAP1 DUP5 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF40 SWAP1 POP DUP3 DUP6 PUSH2 0x2A0A JUMP JUMPDEST SWAP4 POP DUP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC993FAE8B061033559278198EA3F4595BC21AFD187DB8384DDC0A40E2C7D6C13 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP DUP1 DUP1 PUSH2 0xF86 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE99 JUMP JUMPDEST POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207061796F75742073756D206D6F7265207468616E20636F6D7065 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3A34BA34B7B7103837B7B617 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1021 SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP3 POP POP PUSH4 0xFFFFFFFF DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0xC0578E95E81728B40769C9F26794792CB548B910E25DBACA95D16F2AD71E4CFF SWAP2 LOG3 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x108A PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x10F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206F70656E5375626D697373696F6E3A204361 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x363632B91034B9903AB730BABA3437B934BD32B217 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x118F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206F70656E5375626D697373696F6E3A204368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C656E676520697320696E20756E65787065637465642073746174652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD SWAP2 ADD SSTORE MLOAD PUSH32 0x173D82E68025325BF392A6C9B38FDE6A6A4ECDA962FB17A14DAF81B4B561ED2E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x11F0 PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x1262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174655374616B655468726573686F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C643A2043616C6C657220697320756E617574686F72697A65642E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 SWAP1 PUSH32 0xC3DAD8D972694B8A948B4205B1BB45CBB2C73729F86630689E1E41C36A2965FA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12E3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1342 DUP2 DUP4 PUSH2 0x24C5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 LT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207375626D69744E657750726564696374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E733A205374616B652069732062656C6F77207468726573686F6C642E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP2 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x1421 SWAP1 DUP5 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x2A22 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x144F SWAP1 POP DUP2 DUP4 PUSH2 0x2A0A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1474 SWAP1 DUP5 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH32 0x35D3BB8BAA4B2735A9B7BCD0D44B2B974EBBD7F04C135714D0EC9EBDD800674F SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x157F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207472616E736665725374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617365207761697420666F7220746865207374616B696E6720706572696F6420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x39BA30B5B297 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x6BA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207472616E736665725374616B653A20496E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x3AB33334B1B4B2B73A103130B630B731B297 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1619 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1646 SWAP1 DUP5 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP3 POP DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x1E07278DAF12D879E91EA076CF43032A70D56CB1D6E8BC91534DCD17F61E18F3 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x16AE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP7 DUP7 DUP7 DUP7 PUSH2 0xCE7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x170A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x171E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x17A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F75726E616D656E74202D2073706F6E736F723A20546F6B656E207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x39B332B9103330B4B632B217 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x17B0 DUP4 DUP3 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 SWAP2 POP PUSH2 0x17C1 DUP4 DUP3 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLER SWAP1 PUSH32 0x64939930C3FD0A1FE9E7FB9810272DB7730A0F02B900972787BCB79FB6FD3D2D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x1867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A204D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x742068617665207072652D6578697374696E6720726573756C74732E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x949 DUP3 DUP3 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x187C PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x18EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174655661756C7441646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3A2043616C6C657220697320756E617574686F72697A65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5E74F6697AE9D8E4ED8C4E8CB2F44ACC9909529CE81812AAB23103B3DE223F66 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1953 SWAP1 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617365207761697420666F7220746865207374616B696E6720706572696F6420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x39BA30B5B297 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x6BA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP4 GT ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20496E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756666696369656E742066756E647320666F72207769746864726177616C2E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1B18 DUP4 DUP3 PUSH2 0x2A61 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1B3D SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BC6 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP3 POP DUP4 SWAP1 CALLER SWAP1 PUSH32 0x700865370FFB2A65A2B0242E6A64B21AC907ED5ECD46C9CFFC729C177B2B1C69 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1CCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617365207761697420666F7220746865207374616B696E6720706572696F6420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x39BA30B5B297 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D58 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x1DC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20546F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x32B7102A3930B739B332B9103330B4B632B217 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1DDF SWAP1 DUP5 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DF8 SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP2 POP DUP3 SWAP1 CALLER SWAP1 PUSH32 0x8B0ED825817A2E696C9A931715AF4609FC60E1701F09C89EE7645130E937EB2D SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665207072652D6578697374696E67207375626D697373696F PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1EAB DUP4 DUP4 PUSH2 0x24C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EBD PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x1F28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x30B63632B91034B9903AB730BABA3437B934BD32B217 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616C6C656E676520696E20756E65787065637465642073746174652E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH32 0xAA5EBDC7900B87A79257AABBAB219AF255ADA0BE7148632CE5AFCD622DF7A88B SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 DUP3 EQ ISZERO PUSH2 0x209A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74207570646174652077697468207468652073616D652068617368206173 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x103132B337B93297 PUSH1 0xC1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0x2124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A20496E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7272656374206F6C642064617461736574207265666572656E63652E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 PUSH32 0xB4AD7E2453C3C06A28C5CFE29A3067C6EDDE6EB03BE4DF2A461F9D806CB747E SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x2177 DUP3 DUP3 PUSH2 0x130D JUMP JUMPDEST PUSH2 0x949 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x21AD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x21FC PUSH1 0x0 CALLER PUSH2 0x130D JUMP JUMPDEST PUSH2 0x2265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616C PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3632B91034B9903AB730BABA3437B934BD32B217 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP1 DUP3 EQ ISZERO PUSH2 0x22EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74207570646174652077697468207468652073616D652068617368206173 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x103132B337B93297 PUSH1 0xC1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND LT ISZERO PUSH2 0x2387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C656E676520696E20756E65787065637465642073746174652E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 EQ PUSH2 0x2414 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x736820696E206578697374696E6720726573756C747320686173682E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP6 SWAP1 SSTORE MLOAD DUP5 SWAP3 DUP7 SWAP3 SWAP1 SWAP2 PUSH32 0xFB7D772905D44C5FDD59D4AB87C7F40281E09F93E2E189D03737C6D82B154EA SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x246A DUP3 DUP3 PUSH2 0x130D JUMP JUMPDEST ISZERO PUSH2 0x949 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x2550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E6F7420617661696C61626C6520666F72207375626D697373696F6E732E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP2 PUSH2 0x25B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207375626D697420656D70747920686173682E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6BA JUMP JUMPDEST DUP2 DUP4 EQ ISZERO PUSH2 0x2629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570646174652077697468207468652073616D652068617368 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x1030B9903132B337B93297 PUSH1 0xA9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x4 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x26BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ACE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x436C61736820696E206578697374696E67207375626D697373696F6E20686173 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x3417 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6BA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP4 SWAP2 SWAP3 PUSH32 0x953E3B79BB71898776BB2EF8BB919748C883B8B27C42E334DE1ECDBF79D472BB SWAP2 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x273F JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2756 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x279D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1EAB DUP3 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x27C1 DUP4 PUSH2 0x2712 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x27FB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2807 DUP9 DUP4 DUP10 ADD PUSH2 0x272E JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x281F JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x282C DUP8 DUP3 DUP9 ADD PUSH2 0x272E JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2849 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EAB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2869 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2882 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2892 PUSH1 0x20 DUP5 ADD PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28AD JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1EAB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F5 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1EAB DUP3 PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2928 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2931 DUP4 PUSH2 0x2778 JUMP JUMPDEST SWAP2 POP PUSH2 0x2892 PUSH1 0x20 DUP5 ADD PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2956 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x295F DUP7 PUSH2 0x2778 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x297B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2987 DUP10 DUP4 DUP11 ADD PUSH2 0x272E JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x299F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x29AC DUP9 DUP3 DUP10 ADD PUSH2 0x272E JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29FE JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29D9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2A1D JUMPI PUSH2 0x2A1D PUSH2 0x2AB7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A5C JUMPI PUSH2 0x2A5C PUSH2 0x2AB7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A73 JUMPI PUSH2 0x2A73 PUSH2 0x2AB7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A8C JUMPI PUSH2 0x2A8C PUSH2 0x2AB7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x2AAD JUMPI PUSH2 0x2AAD PUSH2 0x2AB7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID NUMBER PUSH16 0x6D7065746974696F6E202D2075706461 PUSH21 0x655375626D697373696F6E3A20A264697066735822 SLT KECCAK256 0xB3 0xBF 0xD7 SWAP7 0x26 0xFC COINBASE 0xE7 RETURN MSIZE 0xD 0xCE 0xE9 SWAP10 PC EXTCODECOPY 0x24 SWAP1 0xCE 0x27 SAR 0x4F 0x21 CREATE PUSH11 0xFAC863E4AF60B664736F6C PUSH4 0x43000804 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x248"
    },
    "25": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91D14854"
    },
    "38": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B"
    },
    "42": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD2DE2F85"
    },
    "49": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEECFC33F"
    },
    "60": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEECFC33F"
    },
    "71": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B6"
    },
    "75": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEEDAD66B"
    },
    "82": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DF"
    },
    "86": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF789B4E9"
    },
    "93": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F2"
    },
    "97": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF7FB373D"
    },
    "104": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FA"
    },
    "108": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFC6FF1E"
    },
    "115": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "116": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60D"
    },
    "119": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD2DE2F85"
    },
    "131": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56D"
    },
    "135": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD4F4B806"
    },
    "142": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x580"
    },
    "146": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD547741F"
    },
    "153": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x588"
    },
    "157": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDEA1B2CE"
    },
    "164": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59B"
    },
    "168": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE8B96DE1"
    },
    "175": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "176": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A3"
    },
    "179": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "180": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF4D2212"
    },
    "191": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF4D2212"
    },
    "202": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CD"
    },
    "206": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF976FEC"
    },
    "213": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "214": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E0"
    },
    "217": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "218": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB6CCE5E2"
    },
    "224": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "225": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51E"
    },
    "228": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "229": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC55E86B1"
    },
    "235": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "236": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x531"
    },
    "239": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "240": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8F971DF"
    },
    "246": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "247": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x544"
    },
    "250": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "251": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "257": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91D14854"
    },
    "262": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x463"
    },
    "266": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "267": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x934D9012"
    },
    "273": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "274": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x476"
    },
    "277": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "278": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9F2492A2"
    },
    "284": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "285": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49F"
    },
    "288": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "289": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA217FDDF"
    },
    "295": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "296": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B2"
    },
    "299": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "300": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "301": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA28F8847"
    },
    "306": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "307": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA"
    },
    "310": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "311": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39E28777"
    },
    "322": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C9"
    },
    "326": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "328": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x60CDB6CC"
    },
    "333": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "337": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "338": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "339": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x60CDB6CC"
    },
    "344": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "345": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A3"
    },
    "348": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "349": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x65CACAA4"
    },
    "355": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "356": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E3"
    },
    "359": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "360": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x736D8C91"
    },
    "366": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "367": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "370": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "371": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7A766460"
    },
    "377": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41A"
    },
    "381": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "382": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9044265A"
    },
    "388": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x443"
    },
    "392": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "393": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "395": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "399": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39E28777"
    },
    "404": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "405": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33C"
    },
    "408": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "409": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "410": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3F230915"
    },
    "415": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "416": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x362"
    },
    "419": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "420": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "421": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4BFDE7F8"
    },
    "426": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "427": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375"
    },
    "430": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "431": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "432": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x58E2F50E"
    },
    "437": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "438": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x388"
    },
    "441": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "442": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "443": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5EF53329"
    },
    "448": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "449": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x390"
    },
    "452": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "453": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "456": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "457": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "458": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "459": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F2FF15D"
    },
    "464": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "GT",
      "path": "2"
    },
    "465": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x210"
    },
    "468": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "469": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "470": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F2FF15D"
    },
    "475": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "476": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "479": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "480": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "481": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x315C455E"
    },
    "486": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "487": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB"
    },
    "490": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "491": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "492": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x343CB6BE"
    },
    "497": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "498": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E"
    },
    "501": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "502": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "503": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x35D9DB53"
    },
    "508": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "509": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316"
    },
    "512": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "513": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "514": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x36568ABE"
    },
    "519": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "520": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x329"
    },
    "523": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "524": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "526": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "527": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "528": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "529": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "530": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "535": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "536": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D"
    },
    "539": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "540": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "541": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10FE9AE8"
    },
    "546": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "547": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x275"
    },
    "550": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "551": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "552": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2313ED3E"
    },
    "557": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "558": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A"
    },
    "561": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "562": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "563": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x248A9CA3"
    },
    "568": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "569": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "572": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "573": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "574": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x25B06746"
    },
    "579": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "EQ",
      "path": "2"
    },
    "580": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "583": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "584": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "585": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "587": {
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "DUP1",
      "path": "2"
    },
    "588": {
      "first_revert": true,
      "fn": null,
      "offset": [
        559,
        16578
      ],
      "op": "REVERT",
      "path": "2"
    },
    "589": {
      "op": "JUMPDEST"
    },
    "590": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "593": {
      "op": "PUSH2",
      "value": "0x25B"
    },
    "596": {
      "op": "CALLDATASIZE"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "599": {
      "op": "PUSH2",
      "value": "0x28BC"
    },
    "602": {
      "jump": "i",
      "op": "JUMP"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "op": "PUSH2",
      "value": "0x615"
    },
    "607": {
      "jump": "i",
      "op": "JUMP"
    },
    "608": {
      "op": "JUMPDEST"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "611": {
      "op": "MLOAD"
    },
    "612": {
      "op": "SWAP1"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "DUP2"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "JUMPDEST"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "623": {
      "op": "MLOAD"
    },
    "624": {
      "op": "DUP1"
    },
    "625": {
      "op": "SWAP2"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "op": "SWAP1"
    },
    "628": {
      "op": "RETURN"
    },
    "629": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9445,
        9585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "630": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9571,
        9577
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x1"
    },
    "632": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9571,
        9577
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9571,
        9577
      ],
      "op": "AND",
      "path": "2"
    },
    "642": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9445,
        9585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "643": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9445,
        9585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "645": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9445,
        9585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "op": "SWAP1"
    },
    "655": {
      "op": "SWAP2"
    },
    "656": {
      "op": "AND"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        9445,
        9585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C"
    },
    "665": {
      "op": "JUMP"
    },
    "666": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "670": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "673": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "674": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "676": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "679": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "680": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "681": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64C"
    },
    "684": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "685": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "STOP",
      "path": "2"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "PUSH2",
      "value": "0x2D2"
    },
    "691": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "694": {
      "op": "CALLDATASIZE"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "697": {
      "op": "PUSH2",
      "value": "0x2858"
    },
    "700": {
      "jump": "i",
      "op": "JUMP"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "704": {
      "op": "SWAP1"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "op": "DUP2"
    },
    "710": {
      "op": "SWAP1"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "op": "KECCAK256"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "SLOAD"
    },
    "720": {
      "op": "SWAP1"
    },
    "721": {
      "op": "JUMP"
    },
    "722": {
      "op": "JUMPDEST"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "725": {
      "op": "MLOAD"
    },
    "726": {
      "op": "SWAP1"
    },
    "727": {
      "op": "DUP2"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x26C"
    },
    "735": {
      "op": "JUMP"
    },
    "736": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        7427,
        7589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        7563,
        7582
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x5"
    },
    "739": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        7563,
        7582
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "740": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        7427,
        7589
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "743": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        7427,
        7589
      ],
      "op": "JUMP",
      "path": "2"
    },
    "744": {
      "op": "JUMPDEST"
    },
    "745": {
      "op": "PUSH2",
      "value": "0x2AD"
    },
    "748": {
      "op": "PUSH2",
      "value": "0x2F6"
    },
    "751": {
      "op": "CALLDATASIZE"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "754": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "757": {
      "jump": "i",
      "op": "JUMP"
    },
    "758": {
      "op": "JUMPDEST"
    },
    "759": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "762": {
      "jump": "i",
      "op": "JUMP"
    },
    "763": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "764": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "767": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "770": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "771": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "773": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "776": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMP",
      "path": "2"
    },
    "777": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "778": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x94D"
    },
    "781": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMP",
      "path": "2"
    },
    "782": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        9144,
        9290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "783": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        9268,
        9283
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x3"
    },
    "785": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        9268,
        9283
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "786": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        9144,
        9290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "789": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        9144,
        9290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "790": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "791": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "794": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x324"
    },
    "797": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "798": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "800": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "803": {
      "fn": "Competition.setStake",
      "jump": "i",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "804": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "805": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95B"
    },
    "808": {
      "fn": "Competition.setStake",
      "jump": "i",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "809": {
      "op": "JUMPDEST"
    },
    "810": {
      "op": "PUSH2",
      "value": "0x2AD"
    },
    "813": {
      "op": "PUSH2",
      "value": "0x337"
    },
    "816": {
      "op": "CALLDATASIZE"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "819": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "822": {
      "jump": "i",
      "op": "JUMP"
    },
    "823": {
      "op": "JUMPDEST"
    },
    "824": {
      "op": "PUSH2",
      "value": "0xAE7"
    },
    "827": {
      "jump": "i",
      "op": "JUMP"
    },
    "828": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "829": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "832": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A"
    },
    "835": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "836": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "838": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "841": {
      "fn": "Competition.getDatasetHash",
      "jump": "i",
      "offset": [
        8215,
        8387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "842": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "843": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 3,
      "value": "0xFFFFFFFF"
    },
    "848": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "AND",
      "path": "2"
    },
    "849": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8303,
        8318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "851": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "852": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "DUP2",
      "path": "2"
    },
    "853": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "854": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "856": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "858": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "859": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "861": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "862": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8372
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "863": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "864": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8344,
        8380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "865": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        8215,
        8387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "866": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "867": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "870": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x370"
    },
    "873": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "874": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "876": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289B"
    },
    "879": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "880": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "881": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB61"
    },
    "884": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "885": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "886": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "889": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x383"
    },
    "892": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "893": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "895": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x293F"
    },
    "898": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "899": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "900": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE7"
    },
    "903": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "904": {
      "fn": "Competition.openSubmission",
      "offset": [
        11747,
        12280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "905": {
      "fn": "Competition.openSubmission",
      "offset": [
        11747,
        12280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "908": {
      "fn": "Competition.openSubmission",
      "offset": [
        11747,
        12280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x107F"
    },
    "911": {
      "fn": "Competition.openSubmission",
      "jump": "i",
      "offset": [
        11747,
        12280
      ],
      "op": "JUMP",
      "path": "2"
    },
    "912": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "913": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "916": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E"
    },
    "919": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "920": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "922": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "925": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "926": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "927": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E5"
    },
    "930": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "931": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "932": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "935": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B1"
    },
    "938": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "939": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "941": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2916"
    },
    "944": {
      "fn": "Competition.getSubmission",
      "jump": "i",
      "offset": [
        9737,
        9971
      ],
      "op": "JUMP",
      "path": "2"
    },
    "945": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "946": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 4,
      "value": "0xFFFFFFFF"
    },
    "951": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "952": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "953": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "AND",
      "path": "2"
    },
    "954": {
      "fn": "Competition.getSubmission",
      "offset": [
        9845,
        9867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "956": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "957": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "958": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "959": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "961": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "963": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "964": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "965": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "966": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "968": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "DUP1",
      "path": "2"
    },
    "969": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "DUP4",
      "path": "2"
    },
    "970": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9928
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "980": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "981": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "AND",
      "path": "2"
    },
    "982": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "DUP4",
      "path": "2"
    },
    "983": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "984": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "986": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "987": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9951
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "988": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9951
      ],
      "op": "ADD",
      "path": "2"
    },
    "989": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "990": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "991": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "992": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "993": {
      "fn": "Competition.getSubmission",
      "offset": [
        9900,
        9964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "994": {
      "fn": "Competition.getSubmission",
      "offset": [
        9737,
        9971
      ],
      "op": "JUMP",
      "path": "2"
    },
    "995": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9591,
        9731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "996": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9717,
        9723
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x2"
    },
    "998": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9717,
        9723
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9717,
        9723
      ],
      "op": "AND",
      "path": "2"
    },
    "1008": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9591,
        9731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x282"
    },
    "1011": {
      "fn": "Competition.getVaultAddress",
      "offset": [
        9591,
        9731
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1012": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8043,
        8209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x2"
    },
    "1015": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1022": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "DIV",
      "path": "2"
    },
    "1023": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1028": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8185,
        8202
      ],
      "op": "AND",
      "path": "2"
    },
    "1029": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8043,
        8209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1030": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8043,
        8209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1032": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8043,
        8209
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1033": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1038": {
      "op": "SWAP1"
    },
    "1039": {
      "op": "SWAP2"
    },
    "1040": {
      "op": "AND"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        8043,
        8209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C"
    },
    "1049": {
      "op": "JUMP"
    },
    "1050": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1051": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1054": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x428"
    },
    "1057": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1058": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1060": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278C"
    },
    "1063": {
      "fn": "Competition.getStake",
      "jump": "i",
      "offset": [
        9296,
        9439
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1064": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "SUB"
    },
    "1073": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "AND",
      "path": "2",
      "statement": 7
    },
    "1074": {
      "fn": "Competition.getStake",
      "offset": [
        9375,
        9388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1076": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1077": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1078": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1079": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9419
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1081": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1083": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1084": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1086": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1087": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1088": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1089": {
      "fn": "Competition.getStake",
      "offset": [
        9412,
        9432
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1090": {
      "fn": "Competition.getStake",
      "offset": [
        9296,
        9439
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1091": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1092": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x456"
    },
    "1095": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451"
    },
    "1098": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1099": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1101": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "1104": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1105": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1106": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1297"
    },
    "1109": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1110": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1111": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1113": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1114": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C"
    },
    "1117": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1118": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1119": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BD"
    },
    "1122": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1123": {
      "op": "JUMPDEST"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x471"
    },
    "1130": {
      "op": "CALLDATASIZE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "1136": {
      "jump": "i",
      "op": "JUMP"
    },
    "1137": {
      "op": "JUMPDEST"
    },
    "1138": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "1141": {
      "jump": "i",
      "op": "JUMP"
    },
    "1142": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1143": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1146": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x484"
    },
    "1149": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1150": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1152": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "1155": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "jump": "i",
      "offset": [
        9977,
        10215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1156": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1157": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 8,
      "value": "0xFFFFFFFF"
    },
    "1162": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "AND",
      "path": "2"
    },
    "1163": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10083,
        10114
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1165": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1166": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1167": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1168": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1170": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1172": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1173": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1175": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1176": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10184
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1177": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1179": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10208
      ],
      "op": "ADD",
      "path": "2"
    },
    "1180": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1181": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        10156,
        10208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1182": {
      "fn": "Competition.getTotalStakesLockedForChallenge",
      "offset": [
        9977,
        10215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1183": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1184": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x405"
    },
    "1187": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AD"
    },
    "1190": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1191": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1193": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "1196": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1197": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1198": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1336"
    },
    "1201": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1202": {
      "op": "JUMPDEST"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x2D2"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "JUMP"
    },
    "1210": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1211": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "1214": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C8"
    },
    "1217": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1218": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1220": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A6"
    },
    "1223": {
      "fn": "Competition.transferStake",
      "jump": "i",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1224": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1225": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14AF"
    },
    "1228": {
      "fn": "Competition.transferStake",
      "jump": "i",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1229": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1230": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "1233": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB"
    },
    "1236": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1237": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1239": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27CF"
    },
    "1242": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1244": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168E"
    },
    "1247": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1248": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1249": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50C"
    },
    "1252": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EE"
    },
    "1255": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1256": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1258": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "1261": {
      "fn": "Competition.getPhase",
      "jump": "i",
      "offset": [
        8980,
        9138
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1262": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1263": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 9,
      "value": "0xFFFFFFFF"
    },
    "1268": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "AND",
      "path": "2"
    },
    "1269": {
      "fn": "Competition.getPhase",
      "offset": [
        9062,
        9073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1271": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1272": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1273": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1274": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1276": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1278": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1279": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1281": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1282": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1283": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1285": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "ADD",
      "path": "2"
    },
    "1286": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1287": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1289": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "AND",
      "path": "2"
    },
    "1290": {
      "fn": "Competition.getPhase",
      "offset": [
        9097,
        9131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1291": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1292": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1293": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1295": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "SWAP2"
    },
    "1300": {
      "op": "AND"
    },
    "1301": {
      "op": "DUP2"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "fn": "Competition.getPhase",
      "offset": [
        8980,
        9138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C"
    },
    "1309": {
      "op": "JUMP"
    },
    "1310": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1311": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "1314": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52C"
    },
    "1317": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1318": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1320": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "1323": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1324": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1325": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B7"
    },
    "1328": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1329": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1330": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "1333": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53F"
    },
    "1336": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1337": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1339": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289B"
    },
    "1342": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        13975,
        14245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1343": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1344": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F4"
    },
    "1347": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        13975,
        14245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1348": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1349": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1352": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x552"
    },
    "1355": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1356": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1358": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "1361": {
      "fn": "Competition.getSubmissionCounter",
      "jump": "i",
      "offset": [
        8571,
        8779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1362": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1363": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 10,
      "value": "0xFFFFFFFF"
    },
    "1368": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "AND",
      "path": "2"
    },
    "1369": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8665,
        8690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1371": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1372": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1373": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1374": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1376": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1378": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1379": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1381": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1382": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8754
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1383": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1385": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8765
      ],
      "op": "ADD",
      "path": "2"
    },
    "1386": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8772
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1387": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8726,
        8772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1388": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        8571,
        8779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1389": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1390": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "1393": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57B"
    },
    "1396": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1397": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1399": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278C"
    },
    "1402": {
      "fn": "Competition.updateVaultAddress",
      "jump": "i",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1403": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1404": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1871"
    },
    "1407": {
      "fn": "Competition.updateVaultAddress",
      "jump": "i",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1408": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        7271,
        7421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1409": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        7398,
        7414
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x4"
    },
    "1411": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        7398,
        7414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1412": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        7271,
        7421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1415": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        7271,
        7421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1416": {
      "op": "JUMPDEST"
    },
    "1417": {
      "op": "PUSH2",
      "value": "0x2AD"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "1423": {
      "op": "CALLDATASIZE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1426": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "1429": {
      "jump": "i",
      "op": "JUMP"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x1938"
    },
    "1434": {
      "jump": "i",
      "op": "JUMP"
    },
    "1435": {
      "fn": "Competition.getCurrentPerformanceRewardsBudget",
      "offset": [
        7823,
        8037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1436": {
      "fn": "Competition.getCurrentPerformanceRewardsBudget",
      "offset": [
        7998,
        8030
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x7"
    },
    "1438": {
      "fn": "Competition.getCurrentPerformanceRewardsBudget",
      "offset": [
        7998,
        8030
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1439": {
      "fn": "Competition.getCurrentPerformanceRewardsBudget",
      "offset": [
        7823,
        8037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1442": {
      "fn": "Competition.getCurrentPerformanceRewardsBudget",
      "offset": [
        7823,
        8037
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1443": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1444": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "1447": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B1"
    },
    "1450": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1451": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1453": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "1456": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1457": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1458": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B8"
    },
    "1461": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1462": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1463": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1466": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C4"
    },
    "1469": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1470": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1472": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FC"
    },
    "1475": {
      "fn": "Competition.getResultsHash",
      "jump": "i",
      "offset": [
        8393,
        8565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1476": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1477": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 13,
      "value": "0xFFFFFFFF"
    },
    "1482": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "AND",
      "path": "2"
    },
    "1483": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8481,
        8496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1485": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1486": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1487": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1488": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1490": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1492": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1493": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1495": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1496": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8550
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1497": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1499": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8558
      ],
      "op": "ADD",
      "path": "2"
    },
    "1500": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8558
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1501": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8522,
        8558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1502": {
      "fn": "Competition.getResultsHash",
      "offset": [
        8393,
        8565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1503": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1504": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "1507": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5ED"
    },
    "1510": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1511": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1513": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2858"
    },
    "1516": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1517": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1518": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BFE"
    },
    "1521": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1522": {
      "fn": "Competition.getCurrentParticipationRewardsBudget",
      "offset": [
        7595,
        7817
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1523": {
      "fn": "Competition.getCurrentParticipationRewardsBudget",
      "offset": [
        7776,
        7810
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x6"
    },
    "1525": {
      "fn": "Competition.getCurrentParticipationRewardsBudget",
      "offset": [
        7776,
        7810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1526": {
      "fn": "Competition.getCurrentParticipationRewardsBudget",
      "offset": [
        7595,
        7817
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "1529": {
      "fn": "Competition.getCurrentParticipationRewardsBudget",
      "offset": [
        7595,
        7817
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1530": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1531": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x405"
    },
    "1534": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x608"
    },
    "1537": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1538": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1540": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289B"
    },
    "1543": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1544": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1545": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E33"
    },
    "1548": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1549": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13389,
        13837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1550": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13389,
        13837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "1553": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13389,
        13837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB2"
    },
    "1556": {
      "fn": "Competition.closeSubmission",
      "jump": "i",
      "offset": [
        13389,
        13837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1557": {
      "op": "JUMPDEST"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1566": {
      "op": "SHL"
    },
    "1567": {
      "op": "SUB"
    },
    "1568": {
      "op": "NOT"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "AND"
    },
    "1571": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "EQ"
    },
    "1580": {
      "op": "DUP1"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x646"
    },
    "1584": {
      "op": "JUMPI"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "op": "NOT"
    },
    "1603": {
      "op": "DUP4"
    },
    "1604": {
      "op": "AND"
    },
    "1605": {
      "op": "EQ"
    },
    "1606": {
      "op": "JUMPDEST"
    },
    "1607": {
      "op": "SWAP3"
    },
    "1608": {
      "op": "SWAP2"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "jump": "o",
      "op": "JUMP"
    },
    "1612": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1613": {
      "fn": "Competition.openStaking",
      "offset": [
        10942,
        10981
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x657"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "fn": "Competition.openStaking",
      "offset": [
        10970,
        10980
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1619": {
      "fn": "Competition.openStaking",
      "offset": [
        10942,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "1622": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        10942,
        10981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1623": {
      "branch": 115,
      "fn": "Competition.openStaking",
      "offset": [
        10942,
        10981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1624": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C3"
    },
    "1627": {
      "branch": 115,
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1628": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1630": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1639": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1642": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1644": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1645": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "ADD",
      "path": "2"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206F70656E5374616B696E673A2043616C6C65"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH18",
      "value": "0x391034B9903AB730BABA3437B934BD32B217"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1716": {
      "op": "DUP3"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "MSTORE"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1723": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1725": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1726": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1727": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1728": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "SUB",
      "path": "2"
    },
    "1729": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1730": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1731": {
      "fn": "Competition.openStaking",
      "offset": [
        10934,
        11036
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1732": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1734": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1741": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "DIV",
      "path": "2"
    },
    "1742": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1747": {
      "fn": "Competition.openStaking",
      "offset": [
        11071,
        11088
      ],
      "op": "AND",
      "path": "2"
    },
    "1748": {
      "fn": "Competition.openStaking",
      "offset": [
        11046,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1750": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 16
    },
    "1751": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1752": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1753": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1755": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1757": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1758": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1760": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1761": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1762": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1764": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11140
      ],
      "op": "ADD",
      "path": "2"
    },
    "1765": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1766": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1768": {
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11140
      ],
      "op": "AND",
      "path": "2"
    },
    "1769": {
      "fn": "Competition.openStaking",
      "offset": [
        11144,
        11145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1771": {
      "branch": 116,
      "fn": "Competition.openStaking",
      "offset": [
        11106,
        11145
      ],
      "op": "EQ",
      "path": "2"
    },
    "1772": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75D"
    },
    "1775": {
      "branch": 116,
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1776": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1778": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1787": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1790": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1792": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1793": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "ADD",
      "path": "2"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1799": {
      "op": "DUP3"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "MSTORE"
    },
    "1802": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206F70656E5374616B696E673A205072657669"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1837": {
      "op": "DUP3"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "MSTORE"
    },
    "1840": {
      "op": "PUSH32",
      "value": "0x6F757320706861736520697320696E636F6D706C6574652E0000000000000000"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1875": {
      "op": "DUP3"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "1884": {
      "op": "JUMP"
    },
    "1885": {
      "fn": "Competition.openStaking",
      "offset": [
        11098,
        11206
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1886": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 17
    },
    "1887": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x767"
    },
    "1890": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1891": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A93"
    },
    "1894": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11217,
        11234
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1895": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1896": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 18,
      "value": "0xFFFFFFFF"
    },
    "1901": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1902": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "AND",
      "path": "2"
    },
    "1903": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1905": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1906": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1907": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1908": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1910": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1912": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1913": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1915": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1916": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11273
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1917": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1919": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11279
      ],
      "op": "ADD",
      "path": "2"
    },
    "1920": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1921": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1924": {
      "op": "NOT"
    },
    "1925": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "AND",
      "path": "2"
    },
    "1926": {
      "fn": "Competition.openStaking",
      "offset": [
        11282,
        11283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1928": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "OR",
      "path": "2"
    },
    "1929": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1930": {
      "fn": "Competition.openStaking",
      "offset": [
        11245,
        11283
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1931": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11310
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x2"
    },
    "1933": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1934": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1941": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1942": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "MUL",
      "path": "2"
    },
    "1943": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "op": "NOT"
    },
    "1952": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1953": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1954": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "AND",
      "path": "2"
    },
    "1955": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1956": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1957": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1958": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "OR",
      "path": "2"
    },
    "1959": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1960": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1961": {
      "fn": "Competition.openStaking",
      "offset": [
        11293,
        11328
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1962": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "Competition.openStaking",
      "offset": [
        11339,
        11395
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0x7B9"
    },
    "1968": {
      "fn": "Competition.openStaking",
      "offset": [
        11339,
        11395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1971": {
      "fn": "Competition.openStaking",
      "offset": [
        11217,
        11234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1972": {
      "fn": "Competition.openStaking",
      "offset": [
        11383,
        11394
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1973": {
      "fn": "Competition.openStaking",
      "offset": [
        11339,
        11353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2013"
    },
    "1976": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11339,
        11395
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1977": {
      "fn": "Competition.openStaking",
      "offset": [
        11339,
        11395
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1978": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1980": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11433
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1981": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1983": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1984": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1985": {
      "op": "PUSH4",
      "value": "0xEECAE21"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1994": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1995": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1996": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1997": {
      "fn": "Competition.openStaking",
      "offset": [
        11406,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1999": {
      "fn": "Competition.openStaking",
      "offset": [
        11406,
        11424
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "op": "SUB"
    },
    "2008": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11433
      ],
      "op": "AND",
      "path": "2"
    },
    "2009": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2010": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11438
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEECAE21"
    },
    "2015": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2016": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2018": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2019": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2020": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ADD",
      "path": "2"
    },
    "2021": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2022": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2024": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2025": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2026": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2027": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2028": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2029": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SUB",
      "path": "2"
    },
    "2030": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ADD",
      "path": "2"
    },
    "2031": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2032": {
      "fn": "Competition.openStaking",
      "offset": [
        11406,
        11424
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2033": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11433
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2034": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2035": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2036": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2037": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2038": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2039": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FF"
    },
    "2042": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2043": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2045": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2046": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2047": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2048": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2049": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "GAS",
      "path": "2"
    },
    "2050": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "CALL",
      "path": "2"
    },
    "2051": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2052": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2053": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2054": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x813"
    },
    "2057": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2058": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2059": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2061": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2062": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2063": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2064": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2066": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2067": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2068": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2069": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2070": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2071": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2072": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2074": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2075": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2076": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2078": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "NOT",
      "path": "2"
    },
    "2079": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2081": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2082": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ADD",
      "path": "2"
    },
    "2083": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "AND",
      "path": "2"
    },
    "2084": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2085": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ADD",
      "path": "2"
    },
    "2086": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2087": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2089": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2090": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2091": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2092": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "ADD",
      "path": "2"
    },
    "2093": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2094": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x837"
    },
    "2097": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2098": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2099": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E4"
    },
    "2102": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2103": {
      "fn": "Competition.openStaking",
      "offset": [
        11427,
        11440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2104": {
      "fn": "Competition.openStaking",
      "offset": [
        11406,
        11440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2105": {
      "fn": "Competition.openStaking",
      "offset": [
        11406,
        11440
      ],
      "op": "POP",
      "path": "2"
    },
    "2106": {
      "fn": "Competition.openStaking",
      "offset": [
        11470,
        11480
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 21
    },
    "2107": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2109": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2111": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2112": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2113": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2114": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84B"
    },
    "2117": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2118": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2119": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "2122": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11450,
        11480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2123": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2124": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2125": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2126": {
      "fn": "Competition.openStaking",
      "offset": [
        11450,
        11480
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "fn": "Competition.openStaking",
      "offset": [
        11545,
        11579
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x8"
    },
    "2131": {
      "fn": "Competition.openStaking",
      "offset": [
        11545,
        11579
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2132": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2134": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11542
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2135": {
      "fn": "Competition.openStaking",
      "offset": [
        11581,
        11585
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "2144": {
      "fn": "Competition.openStaking",
      "offset": [
        11581,
        11585
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2145": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11579
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x869"
    },
    "2148": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11579
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2149": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11579
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A42"
    },
    "2152": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11526,
        11579
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2153": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11579
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2154": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x873"
    },
    "2157": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11586
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2158": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2159": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A22"
    },
    "2162": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11526,
        11586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2163": {
      "fn": "Competition.openStaking",
      "offset": [
        11526,
        11586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2164": {
      "fn": "Competition.openStaking",
      "offset": [
        11491,
        11523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2166": {
      "fn": "Competition.openStaking",
      "offset": [
        11491,
        11586
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2167": {
      "fn": "Competition.openStaking",
      "offset": [
        11491,
        11586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2168": {
      "fn": "Competition.openStaking",
      "offset": [
        11491,
        11586
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2169": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11649
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x4"
    },
    "2171": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11649
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2172": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x885"
    },
    "2175": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11684
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2176": {
      "fn": "Competition.openStaking",
      "offset": [
        11491,
        11586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2177": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "2180": {
      "fn": "Competition.openStaking",
      "jump": "i",
      "offset": [
        11633,
        11684
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2181": {
      "fn": "Competition.openStaking",
      "offset": [
        11633,
        11684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2182": {
      "fn": "Competition.openStaking",
      "offset": [
        11596,
        11630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2184": {
      "fn": "Competition.openStaking",
      "offset": [
        11596,
        11684
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2185": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x40"
    },
    "2187": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2188": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2193": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2194": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "AND",
      "path": "2"
    },
    "2195": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2196": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDB78430D4256F71134803E3F9A309D288726D0A5AEE4A19A67A4E381DDFDE2F1"
    },
    "2229": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2230": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2232": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2233": {
      "fn": "Competition.openStaking",
      "offset": [
        11700,
        11730
      ],
      "op": "LOG2",
      "path": "2"
    },
    "2234": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "POP",
      "path": "2"
    },
    "2235": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "POP",
      "path": "2"
    },
    "2236": {
      "fn": "Competition.openStaking",
      "offset": [
        10856,
        11737
      ],
      "op": "POP",
      "path": "2"
    },
    "2237": {
      "fn": "Competition.openStaking",
      "jump": "o",
      "offset": [
        10856,
        11737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2238": {
      "op": "JUMPDEST"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "DUP2"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "op": "DUP2"
    },
    "2247": {
      "op": "SWAP1"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2251": {
      "op": "SWAP1"
    },
    "2252": {
      "op": "KECCAK256"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "op": "SLOAD"
    },
    "2257": {
      "op": "PUSH2",
      "value": "0x8DB"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "JUMPDEST"
    },
    "2262": {
      "op": "CALLER"
    },
    "2263": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "2266": {
      "jump": "i",
      "op": "JUMP"
    },
    "2267": {
      "op": "JUMPDEST"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x93F"
    },
    "2271": {
      "op": "JUMPI"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2274": {
      "op": "MLOAD"
    },
    "2275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2281": {
      "op": "SHL"
    },
    "2282": {
      "op": "DUP2"
    },
    "2283": {
      "op": "MSTORE"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2288": {
      "op": "DUP3"
    },
    "2289": {
      "op": "ADD"
    },
    "2290": {
      "op": "MSTORE"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2357": {
      "op": "DUP3"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "MSTORE"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "2366": {
      "op": "JUMP"
    },
    "2367": {
      "op": "JUMPDEST"
    },
    "2368": {
      "op": "PUSH2",
      "value": "0x949"
    },
    "2371": {
      "op": "DUP3"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x216D"
    },
    "2376": {
      "jump": "i",
      "op": "JUMP"
    },
    "2377": {
      "op": "JUMPDEST"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "op": "POP"
    },
    "2380": {
      "jump": "o",
      "op": "JUMP"
    },
    "2381": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2382": {
      "fn": "Competition.submitResults",
      "offset": [
        13923,
        13962
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 25,
      "value": "0x958"
    },
    "2385": {
      "fn": "Competition.submitResults",
      "offset": [
        13946,
        13947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2387": {
      "fn": "Competition.submitResults",
      "offset": [
        13950,
        13961
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2388": {
      "fn": "Competition.submitResults",
      "offset": [
        13923,
        13937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F1"
    },
    "2391": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        13923,
        13962
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2392": {
      "fn": "Competition.submitResults",
      "offset": [
        13923,
        13962
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2393": {
      "fn": "Competition.submitResults",
      "offset": [
        13843,
        13969
      ],
      "op": "POP",
      "path": "2"
    },
    "2394": {
      "fn": "Competition.submitResults",
      "jump": "o",
      "offset": [
        13843,
        13969
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2395": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2396": {
      "fn": "Competition.setStake",
      "offset": [
        2816,
        2826
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2397": {
      "fn": "Competition.setStake",
      "offset": [
        2757,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2399": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2400": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2401": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2402": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2404": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2406": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2407": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2409": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2410": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2411": {
      "fn": "Competition.setStake",
      "offset": [
        2808,
        2827
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2412": {
      "fn": "Competition.setStake",
      "offset": [
        2845,
        2872
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 26
    },
    "2413": {
      "fn": "Competition.setStake",
      "offset": [
        2845,
        2872
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2414": {
      "fn": "Competition.setStake",
      "offset": [
        2845,
        2872
      ],
      "op": "EQ",
      "path": "2"
    },
    "2415": {
      "branch": 117,
      "fn": "Competition.setStake",
      "offset": [
        2845,
        2872
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2416": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9EB"
    },
    "2419": {
      "branch": 117,
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2420": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2422": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2431": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2436": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2437": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "ADD",
      "path": "2"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207365745374616B653A20596F757220737461"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2481": {
      "op": "DUP3"
    },
    "2482": {
      "op": "ADD"
    },
    "2483": {
      "op": "MSTORE"
    },
    "2484": {
      "op": "PUSH32",
      "value": "0x6B6520697320616C72656164792073657420746F207468697320616D6F756E74"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2519": {
      "op": "DUP3"
    },
    "2520": {
      "op": "ADD"
    },
    "2521": {
      "op": "MSTORE"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2529": {
      "op": "DUP3"
    },
    "2530": {
      "op": "ADD"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "2538": {
      "op": "JUMP"
    },
    "2539": {
      "fn": "Competition.setStake",
      "offset": [
        2837,
        2942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2540": {
      "fn": "Competition.setStake",
      "offset": [
        2970,
        2982
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2541": {
      "fn": "Competition.setStake",
      "offset": [
        2956,
        2967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2542": {
      "branch": 118,
      "fn": "Competition.setStake",
      "offset": [
        2956,
        2982
      ],
      "op": "GT",
      "path": "2"
    },
    "2543": {
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2544": {
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6B"
    },
    "2547": {
      "branch": 118,
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2548": {
      "fn": "Competition.setStake",
      "offset": [
        3005,
        3046
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0xA00"
    },
    "2551": {
      "fn": "Competition.setStake",
      "offset": [
        3019,
        3045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5ED"
    },
    "2554": {
      "fn": "Competition.setStake",
      "offset": [
        3033,
        3045
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2555": {
      "fn": "Competition.setStake",
      "offset": [
        3019,
        3030
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2556": {
      "fn": "Competition.setStake",
      "offset": [
        3019,
        3045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "2559": {
      "fn": "Competition.setStake",
      "jump": "i",
      "offset": [
        3019,
        3045
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2560": {
      "branch": 119,
      "fn": "Competition.setStake",
      "offset": [
        3005,
        3046
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2561": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA66"
    },
    "2564": {
      "branch": 119,
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2565": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2567": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2576": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2579": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2581": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2582": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "ADD",
      "path": "2"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207365745374616B653A20436F756C64206E6F"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2626": {
      "op": "DUP3"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "op": "MSTORE"
    },
    "2629": {
      "op": "PUSH17",
      "value": "0x3A1034B731B932B0B9B29039BA30B5B297"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "2661": {
      "op": "JUMP"
    },
    "2662": {
      "fn": "Competition.setStake",
      "offset": [
        2997,
        3100
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2663": {
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADE"
    },
    "2666": {
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2667": {
      "fn": "Competition.setStake",
      "offset": [
        2952,
        3244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2668": {
      "fn": "Competition.setStake",
      "offset": [
        3138,
        3179
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0xA78"
    },
    "2671": {
      "fn": "Competition.setStake",
      "offset": [
        3152,
        3178
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B1"
    },
    "2674": {
      "fn": "Competition.setStake",
      "offset": [
        3167,
        3178
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2675": {
      "fn": "Competition.setStake",
      "offset": [
        3152,
        3164
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2676": {
      "fn": "Competition.setStake",
      "offset": [
        3152,
        3178
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "2679": {
      "fn": "Competition.setStake",
      "jump": "i",
      "offset": [
        3152,
        3178
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2680": {
      "branch": 120,
      "fn": "Competition.setStake",
      "offset": [
        3138,
        3179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2681": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADE"
    },
    "2684": {
      "branch": 120,
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2685": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2687": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2696": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2699": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2701": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2702": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "ADD",
      "path": "2"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "op": "MSTORE"
    },
    "2711": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207365745374616B653A20436F756C64206E6F"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2746": {
      "op": "DUP3"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "PUSH17",
      "value": "0x3A103232B1B932B0B9B29039BA30B5B297"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2769": {
      "op": "SHL"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2772": {
      "op": "DUP3"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "MSTORE"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2777": {
      "op": "ADD"
    },
    "2778": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "2781": {
      "op": "JUMP"
    },
    "2782": {
      "fn": "Competition.setStake",
      "offset": [
        3130,
        3233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "fn": "Competition.setStake",
      "offset": [
        3263,
        3267
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x1"
    },
    "2786": {
      "fn": "Competition.setStake",
      "offset": [
        3263,
        3267
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2787": {
      "fn": "Competition.setStake",
      "offset": [
        2683,
        3274
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "fn": "Competition.setStake",
      "jump": "o",
      "offset": [
        2683,
        3274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2791": {
      "op": "JUMPDEST"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "op": "DUP2"
    },
    "2801": {
      "op": "AND"
    },
    "2802": {
      "op": "CALLER"
    },
    "2803": {
      "op": "EQ"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xB57"
    },
    "2807": {
      "op": "JUMPI"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2810": {
      "op": "MLOAD"
    },
    "2811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "op": "DUP2"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2824": {
      "op": "DUP3"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2831": {
      "op": "DUP3"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "MSTORE"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2898": {
      "op": "ADD"
    },
    "2899": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "2902": {
      "op": "JUMP"
    },
    "2903": {
      "op": "JUMPDEST"
    },
    "2904": {
      "op": "PUSH2",
      "value": "0x949"
    },
    "2907": {
      "op": "DUP3"
    },
    "2908": {
      "op": "DUP3"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0x2460"
    },
    "2912": {
      "jump": "i",
      "op": "JUMP"
    },
    "2913": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2914": {
      "fn": "Competition.updateDataset",
      "offset": [
        12401,
        12440
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0xB6C"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2919": {
      "fn": "Competition.updateDataset",
      "offset": [
        12429,
        12439
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2920": {
      "fn": "Competition.updateDataset",
      "offset": [
        12401,
        12408
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "2923": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        12401,
        12440
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2924": {
      "branch": 121,
      "fn": "Competition.updateDataset",
      "offset": [
        12401,
        12440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2925": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD5"
    },
    "2928": {
      "branch": 121,
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2929": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2931": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2940": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2945": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2946": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "ADD",
      "path": "2"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2952": {
      "op": "DUP3"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "MSTORE"
    },
    "2955": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616C"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2990": {
      "op": "DUP3"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "MSTORE"
    },
    "2993": {
      "op": "PUSH20",
      "value": "0x3632B91034B9903AB730BABA3437B934BD32B217"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3019": {
      "op": "DUP3"
    },
    "3020": {
      "op": "ADD"
    },
    "3021": {
      "op": "MSTORE"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3028": {
      "op": "JUMP"
    },
    "3029": {
      "fn": "Competition.updateDataset",
      "offset": [
        12393,
        12497
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3030": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3032": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3033": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3044": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3045": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "DIV",
      "path": "2"
    },
    "3046": {
      "fn": "Competition.updateDataset",
      "offset": [
        12532,
        12549
      ],
      "op": "AND",
      "path": "2"
    },
    "3047": {
      "fn": "Competition.updateDataset",
      "offset": [
        12507,
        12529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3049": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 31
    },
    "3050": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3051": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3052": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3054": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3056": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3057": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3059": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12595
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3061": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3063": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "ADD",
      "path": "2"
    },
    "3064": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3065": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3067": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "AND",
      "path": "2"
    },
    "3068": {
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3070": {
      "branch": 122,
      "fn": "Competition.updateDataset",
      "offset": [
        12567,
        12606
      ],
      "op": "EQ",
      "path": "2"
    },
    "3071": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC64"
    },
    "3074": {
      "branch": 122,
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3075": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3077": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3086": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3089": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3091": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3092": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "ADD",
      "path": "2"
    },
    "3093": {
      "op": "MSTORE"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3098": {
      "op": "DUP3"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "MSTORE"
    },
    "3101": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A20436861"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3136": {
      "op": "DUP3"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "MSTORE"
    },
    "3139": {
      "op": "PUSH17",
      "value": "0x363632B733B29034B99031B637B9B2B217"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "MSTORE"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3171": {
      "op": "JUMP"
    },
    "3172": {
      "fn": "Competition.updateDataset",
      "offset": [
        12559,
        12660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3173": {
      "branch": 123,
      "fn": "Competition.updateDataset",
      "offset": [
        12678,
        12706
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 32
    },
    "3174": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD7"
    },
    "3177": {
      "branch": 123,
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3178": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3180": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3187": {
      "op": "SHL"
    },
    "3188": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3189": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3192": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3194": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3195": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "ADD",
      "path": "2"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3201": {
      "op": "DUP3"
    },
    "3202": {
      "op": "ADD"
    },
    "3203": {
      "op": "MSTORE"
    },
    "3204": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A204D7573"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3239": {
      "op": "DUP3"
    },
    "3240": {
      "op": "ADD"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "op": "PUSH32",
      "value": "0x742068617665207072652D6578697374696E6720646174617365742E00000000"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3277": {
      "op": "DUP3"
    },
    "3278": {
      "op": "ADD"
    },
    "3279": {
      "op": "MSTORE"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3286": {
      "op": "JUMP"
    },
    "3287": {
      "fn": "Competition.updateDataset",
      "offset": [
        12670,
        12771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3288": {
      "fn": "Competition.updateDataset",
      "offset": [
        12781,
        12844
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0xCE2"
    },
    "3291": {
      "fn": "Competition.updateDataset",
      "offset": [
        12796,
        12811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3292": {
      "fn": "Competition.updateDataset",
      "offset": [
        12813,
        12827
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3293": {
      "fn": "Competition.updateDataset",
      "offset": [
        12829,
        12843
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3294": {
      "fn": "Competition.updateDataset",
      "offset": [
        12781,
        12795
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2013"
    },
    "3297": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        12781,
        12844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3298": {
      "fn": "Competition.updateDataset",
      "offset": [
        12781,
        12844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3299": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "POP",
      "path": "2"
    },
    "3300": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "POP",
      "path": "2"
    },
    "3301": {
      "fn": "Competition.updateDataset",
      "offset": [
        12286,
        12851
      ],
      "op": "POP",
      "path": "2"
    },
    "3302": {
      "fn": "Competition.updateDataset",
      "jump": "o",
      "offset": [
        12286,
        12851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3303": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3304": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15420,
        15432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3306": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15456,
        15495
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 34,
      "value": "0xCF3"
    },
    "3309": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15420,
        15432
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3310": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15484,
        15494
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3311": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15456,
        15463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "3314": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15456,
        15495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3315": {
      "branch": 124,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15456,
        15495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3316": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD65"
    },
    "3319": {
      "branch": 124,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3320": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3322": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3331": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3334": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3336": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3337": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "ADD",
      "path": "2"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3381": {
      "op": "DUP3"
    },
    "3382": {
      "op": "ADD"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH32",
      "value": "0x7264733A2043616C6C657220697320756E617574686F72697A65642E00000000"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "MSTORE"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3428": {
      "op": "JUMP"
    },
    "3429": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15448,
        15560
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3430": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 35,
      "value": "0xFFFFFFFF"
    },
    "3435": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3436": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "AND",
      "path": "2"
    },
    "3437": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3439": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3440": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3441": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3442": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3444": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3446": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3447": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3449": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3450": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15606
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3451": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15616,
        15617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3453": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3454": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3455": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "ADD",
      "path": "2"
    },
    "3456": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3457": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3459": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15612
      ],
      "op": "AND",
      "path": "2"
    },
    "3460": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15617
      ],
      "op": "LT",
      "path": "2"
    },
    "3461": {
      "branch": 125,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15578,
        15617
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3462": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE06"
    },
    "3465": {
      "branch": 125,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3466": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3468": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3477": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3480": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3482": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3483": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "ADD",
      "path": "2"
    },
    "3484": {
      "op": "MSTORE"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3527": {
      "op": "DUP3"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "MSTORE"
    },
    "3530": {
      "op": "PUSH32",
      "value": "0x7264733A204368616C6C656E676520697320696E20756E657870656374656420"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "ADD"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "op": "PUSH6",
      "value": "0x39BA30BA3297"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3580": {
      "op": "DUP3"
    },
    "3581": {
      "op": "ADD"
    },
    "3582": {
      "op": "MSTORE"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3585": {
      "op": "ADD"
    },
    "3586": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3589": {
      "op": "JUMP"
    },
    "3590": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15570,
        15692
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3591": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15710,
        15742
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 36
    },
    "3592": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15710,
        15742
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3593": {
      "branch": 126,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15710,
        15742
      ],
      "op": "EQ",
      "path": "2"
    },
    "3594": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE95"
    },
    "3597": {
      "branch": 126,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3598": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3600": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3607": {
      "op": "SHL"
    },
    "3608": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3609": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3612": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3614": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3615": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "ADD",
      "path": "2"
    },
    "3616": {
      "op": "MSTORE"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20706179506572666F726D616E636552657761"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3659": {
      "op": "DUP3"
    },
    "3660": {
      "op": "ADD"
    },
    "3661": {
      "op": "MSTORE"
    },
    "3662": {
      "op": "PUSH32",
      "value": "0x7264733A204E756D626572206F662077696E6E65727320616E64207265776172"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3697": {
      "op": "DUP3"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "MSTORE"
    },
    "3700": {
      "op": "PUSH17",
      "value": "0x32399030B932903234B33332B932B73A17"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3723": {
      "op": "DUP3"
    },
    "3724": {
      "op": "ADD"
    },
    "3725": {
      "op": "MSTORE"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3728": {
      "op": "ADD"
    },
    "3729": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "3732": {
      "op": "JUMP"
    },
    "3733": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15702,
        15828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3734": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15838,
        15857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3736": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15838,
        15857
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3737": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3738": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15884,
        15902
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3739": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15884,
        15902
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3740": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15884,
        15902
      ],
      "op": "LT",
      "path": "2"
    },
    "3741": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3742": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8E"
    },
    "3745": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3746": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15931,
        15951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3748": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15961
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3749": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15961
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3750": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15962,
        15963
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3751": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3752": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3753": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "LT",
      "path": "2"
    },
    "3754": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEC3"
    },
    "3757": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3758": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3768": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3769": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "3771": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3773": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3774": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3776": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3778": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3779": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3780": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3781": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "POP",
      "path": "2"
    },
    "3782": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3784": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "MUL",
      "path": "2"
    },
    "3785": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "ADD",
      "path": "2"
    },
    "3786": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15954,
        15964
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "3787": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15931,
        15964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3788": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15931,
        15964
      ],
      "op": "POP",
      "path": "2"
    },
    "3789": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15978,
        15992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3791": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16002
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3792": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16002
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3793": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16003,
        16004
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3794": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3795": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3796": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "LT",
      "path": "2"
    },
    "3797": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEE"
    },
    "3800": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3801": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3811": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3812": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "3814": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3816": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3817": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3819": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3821": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3822": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3823": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3824": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "POP",
      "path": "2"
    },
    "3825": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3827": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "MUL",
      "path": "2"
    },
    "3828": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "ADD",
      "path": "2"
    },
    "3829": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3831": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3832": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "ADD",
      "path": "2"
    },
    "3833": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3834": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF03"
    },
    "3837": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3838": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3839": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278C"
    },
    "3842": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15995,
        16005
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3843": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15995,
        16005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 37
    },
    "3853": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "AND",
      "path": "2"
    },
    "3854": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3856": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3857": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3858": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3859": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3861": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3863": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3864": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3866": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3867": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3868": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3869": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3870": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15978,
        16005
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3871": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15978,
        16005
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16038,
        16050
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3874": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16038,
        16050
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3875": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3876": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3877": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3878": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF30"
    },
    "3881": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3882": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16038,
        16050
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3883": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16038,
        16050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3884": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "3887": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        16019,
        16050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3888": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3889": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3890": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3891": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16019,
        16050
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0xF40"
    },
    "3896": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16079,
        16091
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3899": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3900": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "3903": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        16064,
        16091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3904": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3905": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3906": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16064,
        16091
      ],
      "op": "POP",
      "path": "2"
    },
    "3907": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16144,
        16156
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 39
    },
    "3908": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16136,
        16142
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3915": {
      "op": "SHL"
    },
    "3916": {
      "op": "SUB"
    },
    "3917": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "AND",
      "path": "2"
    },
    "3918": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC993FAE8B061033559278198EA3F4595BC21AFD187DB8384DDC0A40E2C7D6C13"
    },
    "3951": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3953": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3954": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3956": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3957": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3958": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3959": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "SUB",
      "path": "2"
    },
    "3960": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3961": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16110,
        16157
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3962": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "POP",
      "path": "2"
    },
    "3963": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "POP",
      "path": "2"
    },
    "3964": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 40
    },
    "3965": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3966": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF86"
    },
    "3969": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3970": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A78"
    },
    "3973": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15904,
        15907
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3974": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3975": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3976": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "POP",
      "path": "2"
    },
    "3977": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15904,
        15907
      ],
      "op": "POP",
      "path": "2"
    },
    "3978": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE99"
    },
    "3981": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3982": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3983": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15867,
        16168
      ],
      "op": "POP",
      "path": "2"
    },
    "3984": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16195,
        16227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3986": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16195,
        16227
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3987": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16181,
        16192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3988": {
      "branch": 127,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16181,
        16227
      ],
      "op": "GT",
      "path": "2"
    },
    "3989": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16177,
        16454
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3990": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16177,
        16454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF6"
    },
    "3993": {
      "branch": 127,
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16177,
        16454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3994": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x40"
    },
    "3996": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4003": {
      "op": "SHL"
    },
    "4004": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4005": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4008": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4010": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4011": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "ADD",
      "path": "2"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4017": {
      "op": "DUP3"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "MSTORE"
    },
    "4020": {
      "op": "PUSH32",
      "value": "0x546F74616C207061796F75742073756D206D6F7265207468616E20636F6D7065"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH12",
      "value": "0x3A34BA34B7B7103837B7B617"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "4073": {
      "op": "SHL"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "ADD"
    },
    "4078": {
      "op": "MSTORE"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16243,
        16297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "4085": {
      "op": "JUMP"
    },
    "4086": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16177,
        16454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4087": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16356,
        16367
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 42
    },
    "4088": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4090": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4092": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4093": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4094": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4095": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1008"
    },
    "4098": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4099": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4100": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "4103": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        16336,
        16367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4104": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4105": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4106": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "POP",
      "path": "2"
    },
    "4107": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "POP",
      "path": "2"
    },
    "4108": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4109": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4110": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4111": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16336,
        16367
      ],
      "op": "POP",
      "path": "2"
    },
    "4112": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16404,
        16415
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 43
    },
    "4113": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4115": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4117": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4118": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4119": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4120": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1021"
    },
    "4123": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4124": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4125": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "4128": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        16381,
        16415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4129": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4130": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4131": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4132": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16381,
        16415
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16439,
        16443
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x1"
    },
    "4136": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16439,
        16443
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 45,
      "value": "0xFFFFFFFF"
    },
    "4144": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4145": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "AND",
      "path": "2"
    },
    "4146": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4148": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4149": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4150": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4151": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4153": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4155": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4156": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4158": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4159": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4160": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4161": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4163": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16497
      ],
      "op": "ADD",
      "path": "2"
    },
    "4164": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4165": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4168": {
      "op": "NOT"
    },
    "4169": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "AND",
      "path": "2"
    },
    "4170": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16500,
        16501
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4172": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "OR",
      "path": "2"
    },
    "4173": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4174": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16501
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4175": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16517,
        16569
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 46
    },
    "4176": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16557,
        16568
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4177": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16557,
        16568
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4178": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16463,
        16491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4179": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16517,
        16569
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC0578E95E81728B40769C9F26794792CB548B910E25DBACA95D16F2AD71E4CFF"
    },
    "4212": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16517,
        16569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4213": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        16517,
        16569
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4214": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4215": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4216": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4217": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4218": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4219": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4220": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4221": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15276,
        16576
      ],
      "op": "POP",
      "path": "2"
    },
    "4222": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "o",
      "offset": [
        15276,
        16576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4223": {
      "fn": "Competition.openSubmission",
      "offset": [
        11747,
        12280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4224": {
      "fn": "Competition.openSubmission",
      "offset": [
        11817,
        11856
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 47,
      "value": "0x108A"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "fn": "Competition.openSubmission",
      "offset": [
        11845,
        11855
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4230": {
      "fn": "Competition.openSubmission",
      "offset": [
        11817,
        11824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "4233": {
      "fn": "Competition.openSubmission",
      "jump": "i",
      "offset": [
        11817,
        11856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4234": {
      "branch": 128,
      "fn": "Competition.openSubmission",
      "offset": [
        11817,
        11856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4235": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F4"
    },
    "4238": {
      "branch": 128,
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4239": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4241": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4250": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4253": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4255": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4256": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "ADD",
      "path": "2"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206F70656E5375626D697373696F6E3A204361"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4300": {
      "op": "DUP3"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "op": "MSTORE"
    },
    "4303": {
      "op": "PUSH21",
      "value": "0x363632B91034B9903AB730BABA3437B934BD32B217"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4327": {
      "op": "SHL"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4330": {
      "op": "DUP3"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "MSTORE"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4335": {
      "op": "ADD"
    },
    "4336": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "4339": {
      "op": "JUMP"
    },
    "4340": {
      "fn": "Competition.openSubmission",
      "offset": [
        11809,
        11914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4341": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4343": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4344": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4355": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4356": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "DIV",
      "path": "2"
    },
    "4357": {
      "fn": "Competition.openSubmission",
      "offset": [
        11949,
        11966
      ],
      "op": "AND",
      "path": "2"
    },
    "4358": {
      "fn": "Competition.openSubmission",
      "offset": [
        11924,
        11946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4360": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "4361": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4362": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4363": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        11995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4365": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4367": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4368": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4370": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4371": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12012
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4372": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4374": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "ADD",
      "path": "2"
    },
    "4375": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4376": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4378": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "AND",
      "path": "2"
    },
    "4379": {
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4381": {
      "branch": 129,
      "fn": "Competition.openSubmission",
      "offset": [
        11984,
        12023
      ],
      "op": "EQ",
      "path": "2"
    },
    "4382": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118F"
    },
    "4385": {
      "branch": 129,
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4386": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4388": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4397": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4402": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4403": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "ADD",
      "path": "2"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206F70656E5375626D697373696F6E3A204368"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH32",
      "value": "0x616C6C656E676520697320696E20756E65787065637465642073746174652E00"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "MSTORE"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "4494": {
      "op": "JUMP"
    },
    "4495": {
      "fn": "Competition.openSubmission",
      "offset": [
        11976,
        12091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4496": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 49,
      "value": "0xFFFFFFFF"
    },
    "4501": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4502": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "AND",
      "path": "2"
    },
    "4503": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4505": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4506": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4507": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4508": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4510": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4512": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4513": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4515": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4516": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4517": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4518": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4520": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4521": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12136
      ],
      "op": "ADD",
      "path": "2"
    },
    "4522": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4523": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4526": {
      "op": "NOT"
    },
    "4527": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "AND",
      "path": "2"
    },
    "4528": {
      "fn": "Competition.openSubmission",
      "offset": [
        12139,
        12140
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4530": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4531": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4532": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "OR",
      "path": "2"
    },
    "4533": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4534": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4535": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12140
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4536": {
      "fn": "Competition.openSubmission",
      "offset": [
        12205,
        12224
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x5"
    },
    "4538": {
      "fn": "Competition.openSubmission",
      "offset": [
        12205,
        12224
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4539": {
      "fn": "Competition.openSubmission",
      "offset": [
        12150,
        12202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4540": {
      "fn": "Competition.openSubmission",
      "offset": [
        12150,
        12202
      ],
      "op": "ADD",
      "path": "2"
    },
    "4541": {
      "fn": "Competition.openSubmission",
      "offset": [
        12150,
        12224
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4542": {
      "fn": "Competition.openSubmission",
      "offset": [
        12240,
        12273
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 51
    },
    "4543": {
      "fn": "Competition.openSubmission",
      "offset": [
        12240,
        12273
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x173D82E68025325BF392A6C9B38FDE6A6A4ECDA962FB17A14DAF81B4B561ED2E"
    },
    "4576": {
      "fn": "Competition.openSubmission",
      "offset": [
        12240,
        12273
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4577": {
      "fn": "Competition.openSubmission",
      "offset": [
        12102,
        12130
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4578": {
      "fn": "Competition.openSubmission",
      "offset": [
        12240,
        12273
      ],
      "op": "LOG2",
      "path": "2"
    },
    "4579": {
      "fn": "Competition.openSubmission",
      "offset": [
        11747,
        12280
      ],
      "op": "POP",
      "path": "2"
    },
    "4580": {
      "fn": "Competition.openSubmission",
      "jump": "o",
      "offset": [
        11747,
        12280
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4581": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4582": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10627,
        10666
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 52,
      "value": "0x11F0"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10655,
        10665
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4588": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10627,
        10634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "4591": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        10627,
        10666
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4592": {
      "branch": 130,
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10627,
        10666
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4593": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1262"
    },
    "4596": {
      "branch": 130,
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4597": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4599": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4606": {
      "op": "SHL"
    },
    "4607": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4608": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4613": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4614": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "ADD",
      "path": "2"
    },
    "4615": {
      "op": "MSTORE"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174655374616B655468726573686F"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4658": {
      "op": "DUP3"
    },
    "4659": {
      "op": "ADD"
    },
    "4660": {
      "op": "MSTORE"
    },
    "4661": {
      "op": "PUSH32",
      "value": "0x6C643A2043616C6C657220697320756E617574686F72697A65642E0000000000"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4696": {
      "op": "DUP3"
    },
    "4697": {
      "op": "ADD"
    },
    "4698": {
      "op": "MSTORE"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4701": {
      "op": "ADD"
    },
    "4702": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "4705": {
      "op": "JUMP"
    },
    "4706": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10619,
        10730
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4707": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10740,
        10755
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x3"
    },
    "4709": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10740,
        10775
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4710": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10740,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4711": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10740,
        10775
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4712": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x40"
    },
    "4714": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4715": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10832,
        10842
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4716": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10832,
        10842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4717": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10758,
        10775
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4718": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10758,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4719": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3DAD8D972694B8A948B4205B1BB45CBB2C73729F86630689E1E41C36A2965FA"
    },
    "4752": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4753": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4755": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4756": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10791,
        10843
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4757": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        10526,
        10850
      ],
      "op": "POP",
      "path": "2"
    },
    "4758": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "o",
      "offset": [
        10526,
        10850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4759": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4760": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 55,
      "value": "0xFFFFFFFF"
    },
    "4765": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4766": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "AND",
      "path": "2"
    },
    "4767": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4769": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4770": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4771": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4772": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4774": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4776": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4777": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4778": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4779": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4781": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4782": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4783": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4784": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8956
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4785": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4787": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4788": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4789": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4790": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4791": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4792": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4793": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4794": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MUL",
      "path": "2"
    },
    "4795": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4796": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4797": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4798": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4799": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4800": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4801": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4802": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4803": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4804": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4805": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8872,
        8899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4807": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8872,
        8899
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4808": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4809": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4810": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4811": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8928,
        8967
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4812": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4813": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4814": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4815": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1301"
    },
    "4818": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4819": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4821": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MUL",
      "path": "2"
    },
    "4822": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4823": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4824": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4825": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4826": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4828": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4829": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4831": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4833": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4834": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4835": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4836": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4837": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4844": {
      "op": "SHL"
    },
    "4845": {
      "op": "SUB"
    },
    "4846": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "AND",
      "path": "2"
    },
    "4847": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4848": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4849": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4851": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4852": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4853": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4854": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4855": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4857": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "ADD",
      "path": "2"
    },
    "4858": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4859": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4860": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "GT",
      "path": "2"
    },
    "4861": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E3"
    },
    "4864": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4865": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4866": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4867": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4868": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4869": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4870": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4871": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4872": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8915,
        8967
      ],
      "op": "POP",
      "path": "2"
    },
    "4873": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4874": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4875": {
      "fn": "Competition.getSubmitters",
      "offset": [
        8785,
        8974
      ],
      "op": "POP",
      "path": "2"
    },
    "4876": {
      "fn": "Competition.getSubmitters",
      "jump": "o",
      "offset": [
        8785,
        8974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4877": {
      "op": "JUMPDEST"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4880": {
      "op": "SWAP2"
    },
    "4881": {
      "op": "DUP3"
    },
    "4882": {
      "op": "MSTORE"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4885": {
      "op": "DUP3"
    },
    "4886": {
      "op": "DUP2"
    },
    "4887": {
      "op": "MSTORE"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4890": {
      "op": "DUP1"
    },
    "4891": {
      "op": "DUP5"
    },
    "4892": {
      "op": "KECCAK256"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4899": {
      "op": "SHL"
    },
    "4900": {
      "op": "SUB"
    },
    "4901": {
      "op": "SWAP4"
    },
    "4902": {
      "op": "SWAP1"
    },
    "4903": {
      "op": "SWAP4"
    },
    "4904": {
      "op": "AND"
    },
    "4905": {
      "op": "DUP5"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "SWAP2"
    },
    "4908": {
      "op": "SWAP1"
    },
    "4909": {
      "op": "MSTORE"
    },
    "4910": {
      "op": "SWAP1"
    },
    "4911": {
      "op": "KECCAK256"
    },
    "4912": {
      "op": "SLOAD"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4915": {
      "op": "AND"
    },
    "4916": {
      "op": "SWAP1"
    },
    "4917": {
      "jump": "o",
      "op": "JUMP"
    },
    "4918": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4919": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5229,
        5251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4921": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5287,
        5332
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 56,
      "value": "0x1342"
    },
    "4924": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5229,
        5251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4925": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5317,
        5331
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4926": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5287,
        5304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C5"
    },
    "4929": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5287,
        5332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4930": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5287,
        5332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4931": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5373,
        5383
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4932": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5342,
        5362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4934": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4935": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4936": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4937": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4939": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4941": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4942": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4944": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4945": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4946": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4947": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5418,
        5433
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x3"
    },
    "4949": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5418,
        5433
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4950": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5269,
        5332
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4951": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5269,
        5332
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5365,
        5384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4954": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5402,
        5433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4955": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5402,
        5433
      ],
      "op": "LT",
      "path": "2"
    },
    "4956": {
      "branch": 131,
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5402,
        5433
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4957": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13CE"
    },
    "4960": {
      "branch": 131,
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4961": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4963": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4970": {
      "op": "SHL"
    },
    "4971": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4972": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4975": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4977": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4978": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "ADD",
      "path": "2"
    },
    "4979": {
      "op": "MSTORE"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4984": {
      "op": "DUP3"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "MSTORE"
    },
    "4987": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207375626D69744E657750726564696374696F"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5022": {
      "op": "DUP3"
    },
    "5023": {
      "op": "ADD"
    },
    "5024": {
      "op": "MSTORE"
    },
    "5025": {
      "op": "PUSH32",
      "value": "0x6E733A205374616B652069732062656C6F77207468726573686F6C642E000000"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5060": {
      "op": "DUP3"
    },
    "5061": {
      "op": "ADD"
    },
    "5062": {
      "op": "MSTORE"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5065": {
      "op": "ADD"
    },
    "5066": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "5069": {
      "op": "JUMP"
    },
    "5070": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5394,
        5499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5071": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 58,
      "value": "0xFFFFFFFF"
    },
    "5076": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5077": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "AND",
      "path": "2"
    },
    "5078": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5080": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5081": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5082": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5083": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5085": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5087": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5088": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5089": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5090": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5092": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5093": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5537
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5094": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5096": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5097": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5548
      ],
      "op": "ADD",
      "path": "2"
    },
    "5098": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5099": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5100": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5102": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5103": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "ADD",
      "path": "2"
    },
    "5104": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5105": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5106": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5107": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5108": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5109": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5110": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5111": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5112": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5113": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5114": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "ADD",
      "path": "2"
    },
    "5115": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5116": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5123": {
      "op": "SHL"
    },
    "5124": {
      "op": "SUB"
    },
    "5125": {
      "op": "NOT"
    },
    "5126": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "AND",
      "path": "2"
    },
    "5127": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5554,
        5564
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5128": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "OR",
      "path": "2"
    },
    "5129": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5130": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5509,
        5565
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5131": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5687
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5132": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5687
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5133": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5687
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5134": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5136": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5137": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5711
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5138": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5711
      ],
      "op": "ADD",
      "path": "2"
    },
    "5139": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5659,
        5711
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5140": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5641
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5142": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5641
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5143": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1421"
    },
    "5146": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5147": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5644,
        5656
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5148": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5644,
        5656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5149": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A42"
    },
    "5152": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5607,
        5656
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5153": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5656
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5154": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x142B"
    },
    "5157": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5711
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5158": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5159": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A22"
    },
    "5162": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5607,
        5711
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5163": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5607,
        5711
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5164": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5576,
        5711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5165": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5576,
        5711
      ],
      "op": "POP",
      "path": "2"
    },
    "5166": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5742,
        5762
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 59
    },
    "5167": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5169": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5171": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5172": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5173": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5174": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143F"
    },
    "5177": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5178": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5179": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "5182": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5722,
        5762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5183": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5184": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5185": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5186": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5722,
        5762
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5187": {
      "op": "POP"
    },
    "5188": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5794,
        5829
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 60,
      "value": "0x144F"
    },
    "5191": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5794,
        5829
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5192": {
      "op": "POP"
    },
    "5193": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5809,
        5829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5194": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5794,
        5806
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5195": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5794,
        5829
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "5198": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5794,
        5829
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5199": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5794,
        5829
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5200": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5780,
        5790
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5201": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5203": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5204": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5205": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5206": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5779
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5208": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5210": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5211": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5213": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5214": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5215": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5829
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5216": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5829
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5217": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5829
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5218": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5829
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5219": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5858
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x5"
    },
    "5221": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5222": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5223": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5862,
        5882
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5224": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5862,
        5882
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5225": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5772,
        5791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5226": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1474"
    },
    "5229": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5230": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5862,
        5882
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5231": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5862,
        5882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5232": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "5235": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        5839,
        5882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5236": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5237": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5238": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5239": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5839,
        5882
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x40"
    },
    "5244": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5245": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5954,
        5974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5246": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5954,
        5974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5247": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5940,
        5952
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5248": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5940,
        5952
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5249": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5928,
        5938
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5250": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5928,
        5938
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5251": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x35D3BB8BAA4B2735A9B7BCD0D44B2B974EBBD7F04C135714D0EC9EBDD800674F"
    },
    "5284": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5285": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5287": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5288": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5898,
        5975
      ],
      "op": "LOG4",
      "path": "2"
    },
    "5289": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "POP",
      "path": "2"
    },
    "5290": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "POP",
      "path": "2"
    },
    "5291": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5292": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5293": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        5140,
        5982
      ],
      "op": "POP",
      "path": "2"
    },
    "5294": {
      "fn": "Competition.submitNewPredictions",
      "jump": "o",
      "offset": [
        5140,
        5982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5295": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5296": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x2"
    },
    "5298": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5299": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5308": {
      "op": "SHL"
    },
    "5309": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5310": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5311": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "DIV",
      "path": "2"
    },
    "5312": {
      "fn": "Competition.transferStake",
      "offset": [
        4664,
        4681
      ],
      "op": "AND",
      "path": "2"
    },
    "5313": {
      "fn": "Competition.transferStake",
      "offset": [
        4616,
        4628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5315": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5316": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5317": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5318": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5320": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5322": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5323": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5325": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5326": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4682
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5327": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5329": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "ADD",
      "path": "2"
    },
    "5330": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5331": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5333": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "AND",
      "path": "2"
    },
    "5334": {
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5336": {
      "branch": 132,
      "fn": "Competition.transferStake",
      "offset": [
        4652,
        4693
      ],
      "op": "EQ",
      "path": "2"
    },
    "5337": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157F"
    },
    "5340": {
      "branch": 132,
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5341": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5343": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5350": {
      "op": "SHL"
    },
    "5351": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5352": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5355": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5357": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5358": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "ADD",
      "path": "2"
    },
    "5359": {
      "op": "MSTORE"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5364": {
      "op": "DUP3"
    },
    "5365": {
      "op": "ADD"
    },
    "5366": {
      "op": "MSTORE"
    },
    "5367": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207472616E736665725374616B653A20506C65"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5402": {
      "op": "DUP3"
    },
    "5403": {
      "op": "ADD"
    },
    "5404": {
      "op": "MSTORE"
    },
    "5405": {
      "op": "PUSH32",
      "value": "0x617365207761697420666F7220746865207374616B696E6720706572696F6420"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5440": {
      "op": "DUP3"
    },
    "5441": {
      "op": "ADD"
    },
    "5442": {
      "op": "MSTORE"
    },
    "5443": {
      "op": "PUSH32",
      "value": "0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5478": {
      "op": "DUP3"
    },
    "5479": {
      "op": "ADD"
    },
    "5480": {
      "op": "MSTORE"
    },
    "5481": {
      "op": "PUSH6",
      "value": "0x39BA30B5B297"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "5490": {
      "op": "SHL"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5493": {
      "op": "DUP3"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "op": "MSTORE"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5498": {
      "op": "ADD"
    },
    "5499": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "5502": {
      "op": "JUMP"
    },
    "5503": {
      "fn": "Competition.transferStake",
      "offset": [
        4644,
        4800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5504": {
      "fn": "Competition.transferStake",
      "offset": [
        4839,
        4849
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5505": {
      "fn": "Competition.transferStake",
      "offset": [
        4810,
        4828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5507": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5508": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5509": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5510": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5512": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5514": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5515": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5517": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5518": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5519": {
      "fn": "Competition.transferStake",
      "offset": [
        4831,
        4850
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5520": {
      "fn": "Competition.transferStake",
      "offset": [
        4868,
        4893
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 64
    },
    "5521": {
      "fn": "Competition.transferStake",
      "offset": [
        4868,
        4893
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5522": {
      "fn": "Competition.transferStake",
      "offset": [
        4868,
        4893
      ],
      "op": "GT",
      "path": "2"
    },
    "5523": {
      "branch": 133,
      "fn": "Competition.transferStake",
      "offset": [
        4868,
        4893
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5524": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FA"
    },
    "5527": {
      "branch": 133,
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5528": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5530": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5537": {
      "op": "SHL"
    },
    "5538": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5539": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5542": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5544": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5545": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "ADD",
      "path": "2"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5551": {
      "op": "DUP3"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207472616E736665725374616B653A20496E73"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5589": {
      "op": "DUP3"
    },
    "5590": {
      "op": "ADD"
    },
    "5591": {
      "op": "MSTORE"
    },
    "5592": {
      "op": "PUSH18",
      "value": "0x3AB33334B1B4B2B73A103130B630B731B297"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5613": {
      "op": "SHL"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5616": {
      "op": "DUP3"
    },
    "5617": {
      "op": "ADD"
    },
    "5618": {
      "op": "MSTORE"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "5625": {
      "op": "JUMP"
    },
    "5626": {
      "fn": "Competition.transferStake",
      "offset": [
        4860,
        4948
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5627": {
      "fn": "Competition.transferStake",
      "offset": [
        4966,
        4976
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 65
    },
    "5628": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5630": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5631": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5632": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5633": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5635": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5637": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5638": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5640": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5641": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5642": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5643": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5644": {
      "fn": "Competition.transferStake",
      "offset": [
        4981,
        4992
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5645": {
      "fn": "Competition.transferStake",
      "offset": [
        4981,
        4992
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5646": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5647": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1619"
    },
    "5650": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5651": {
      "fn": "Competition.transferStake",
      "offset": [
        4981,
        4992
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5652": {
      "fn": "Competition.transferStake",
      "offset": [
        4981,
        4992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5653": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "5656": {
      "fn": "Competition.transferStake",
      "jump": "i",
      "offset": [
        4958,
        4992
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5657": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5658": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5659": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5660": {
      "fn": "Competition.transferStake",
      "offset": [
        4958,
        4992
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5661": {
      "op": "POP"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5669": {
      "op": "SHL"
    },
    "5670": {
      "op": "SUB"
    },
    "5671": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 66
    },
    "5672": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "AND",
      "path": "2"
    },
    "5673": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5675": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5676": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5677": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5678": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5680": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5682": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5683": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5685": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5686": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5687": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5688": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5689": {
      "fn": "Competition.transferStake",
      "offset": [
        5024,
        5035
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5690": {
      "fn": "Competition.transferStake",
      "offset": [
        5024,
        5035
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5691": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5692": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1646"
    },
    "5695": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5696": {
      "fn": "Competition.transferStake",
      "offset": [
        5024,
        5035
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5697": {
      "fn": "Competition.transferStake",
      "offset": [
        5024,
        5035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5698": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "5701": {
      "fn": "Competition.transferStake",
      "jump": "i",
      "offset": [
        5002,
        5035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5702": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5703": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5704": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5705": {
      "fn": "Competition.transferStake",
      "offset": [
        5002,
        5035
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x40"
    },
    "5710": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5711": {
      "fn": "Competition.transferStake",
      "offset": [
        5055,
        5059
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x1"
    },
    "5713": {
      "fn": "Competition.transferStake",
      "offset": [
        5055,
        5059
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "fn": "Competition.transferStake",
      "offset": [
        5115,
        5126
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5716": {
      "fn": "Competition.transferStake",
      "offset": [
        5115,
        5126
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5726": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "AND",
      "path": "2"
    },
    "5727": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5728": {
      "fn": "Competition.transferStake",
      "offset": [
        5092,
        5102
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5729": {
      "fn": "Competition.transferStake",
      "offset": [
        5092,
        5102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5730": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x1E07278DAF12D879E91EA076CF43032A70D56CB1D6E8BC91534DCD17F61E18F3"
    },
    "5763": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5764": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5766": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5767": {
      "fn": "Competition.transferStake",
      "offset": [
        5075,
        5127
      ],
      "op": "LOG4",
      "path": "2"
    },
    "5768": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "POP",
      "path": "2"
    },
    "5769": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5770": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5771": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "POP",
      "path": "2"
    },
    "5772": {
      "fn": "Competition.transferStake",
      "offset": [
        4518,
        5134
      ],
      "op": "POP",
      "path": "2"
    },
    "5773": {
      "fn": "Competition.transferStake",
      "jump": "o",
      "offset": [
        4518,
        5134
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5774": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5775": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x2"
    },
    "5777": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5778": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15167,
        15179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5780": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15167,
        15179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5781": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15205,
        15263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16AE"
    },
    "5784": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15205,
        15263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5789": {
      "op": "SHL"
    },
    "5790": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5791": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "DIV",
      "path": "2"
    },
    "5792": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5797": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15227,
        15244
      ],
      "op": "AND",
      "path": "2"
    },
    "5798": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15246,
        15253
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5799": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15246,
        15253
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5800": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15255,
        15262
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5801": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15255,
        15262
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5802": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15205,
        15226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE7"
    },
    "5805": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "i",
      "offset": [
        15205,
        15263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5806": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15205,
        15263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5807": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15195,
        15263
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5808": {
      "fn": "Competition.payPerformanceRewards",
      "offset": [
        15045,
        15270
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "POP"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "op": "POP"
    },
    "5814": {
      "fn": "Competition.payPerformanceRewards",
      "jump": "o",
      "offset": [
        15045,
        15270
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5815": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5816": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2346
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "5818": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2346
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5819": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5821": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5822": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5829": {
      "op": "SHL"
    },
    "5830": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5831": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5832": {
      "fn": "Competition.sponsor",
      "offset": [
        2360,
        2370
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5833": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5835": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5836": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ADD",
      "path": "2"
    },
    "5837": {
      "op": "MSTORE"
    },
    "5838": {
      "fn": "Competition.sponsor",
      "offset": [
        2380,
        2384
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5841": {
      "op": "DUP3"
    },
    "5842": {
      "op": "ADD"
    },
    "5843": {
      "op": "MSTORE"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5846": {
      "op": "DUP2"
    },
    "5847": {
      "op": "ADD"
    },
    "5848": {
      "op": "DUP4"
    },
    "5849": {
      "op": "SWAP1"
    },
    "5850": {
      "op": "MSTORE"
    },
    "5851": {
      "fn": "Competition.sponsor",
      "offset": [
        2249,
        2261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5853": {
      "fn": "Competition.sponsor",
      "offset": [
        2249,
        2261
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2346
      ],
      "op": "AND",
      "path": "2"
    },
    "5863": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2346
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5864": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2359
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "5869": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2359
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5872": {
      "op": "ADD"
    },
    "5873": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5875": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5877": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5878": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5879": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5880": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "SUB",
      "path": "2"
    },
    "5881": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5882": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5884": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5885": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5886": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5887": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5888": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5889": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5890": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170A"
    },
    "5893": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5894": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5896": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5897": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5898": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5899": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5900": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "GAS",
      "path": "2"
    },
    "5901": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "CALL",
      "path": "2"
    },
    "5902": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5903": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5904": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5905": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171E"
    },
    "5908": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5909": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5910": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5912": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5913": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5914": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5915": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5917": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5918": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5919": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5920": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5921": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5922": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5923": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5925": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5926": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5927": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5929": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "NOT",
      "path": "2"
    },
    "5930": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5932": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5933": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ADD",
      "path": "2"
    },
    "5934": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "AND",
      "path": "2"
    },
    "5935": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5936": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ADD",
      "path": "2"
    },
    "5937": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5938": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5940": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5941": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "POP",
      "path": "2"
    },
    "5942": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5943": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "ADD",
      "path": "2"
    },
    "5944": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5945": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1742"
    },
    "5948": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5949": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5950": {
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2838"
    },
    "5953": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5954": {
      "branch": 134,
      "fn": "Competition.sponsor",
      "offset": [
        2340,
        2399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5955": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A3"
    },
    "5958": {
      "branch": 134,
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5959": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5961": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5968": {
      "op": "SHL"
    },
    "5969": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5970": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5973": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5975": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5976": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "ADD",
      "path": "2"
    },
    "5977": {
      "op": "MSTORE"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH32",
      "value": "0x546F75726E616D656E74202D2073706F6E736F723A20546F6B656E207472616E"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6020": {
      "op": "DUP3"
    },
    "6021": {
      "op": "ADD"
    },
    "6022": {
      "op": "MSTORE"
    },
    "6023": {
      "op": "PUSH12",
      "value": "0x39B332B9103330B4B632B217"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "6038": {
      "op": "SHL"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6041": {
      "op": "DUP3"
    },
    "6042": {
      "op": "ADD"
    },
    "6043": {
      "op": "MSTORE"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6046": {
      "op": "ADD"
    },
    "6047": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "6050": {
      "op": "JUMP"
    },
    "6051": {
      "fn": "Competition.sponsor",
      "offset": [
        2332,
        2448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6052": {
      "fn": "Competition.sponsor",
      "offset": [
        2487,
        2503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6054": {
      "fn": "Competition.sponsor",
      "offset": [
        2487,
        2503
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6055": {
      "fn": "Competition.sponsor",
      "offset": [
        2532,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 71,
      "value": "0x17B0"
    },
    "6058": {
      "fn": "Competition.sponsor",
      "offset": [
        2553,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6059": {
      "fn": "Competition.sponsor",
      "offset": [
        2487,
        2503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6060": {
      "fn": "Competition.sponsor",
      "offset": [
        2532,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "6063": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        2532,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6064": {
      "fn": "Competition.sponsor",
      "offset": [
        2532,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6065": {
      "fn": "Competition.sponsor",
      "offset": [
        2513,
        2529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6067": {
      "fn": "Competition.sponsor",
      "offset": [
        2513,
        2564
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6068": {
      "fn": "Competition.sponsor",
      "offset": [
        2584,
        2588
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x1"
    },
    "6070": {
      "fn": "Competition.sponsor",
      "offset": [
        2584,
        2588
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6071": {
      "op": "POP"
    },
    "6072": {
      "fn": "Competition.sponsor",
      "offset": [
        2637,
        2669
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 73,
      "value": "0x17C1"
    },
    "6075": {
      "fn": "Competition.sponsor",
      "offset": [
        2658,
        2669
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6076": {
      "fn": "Competition.sponsor",
      "offset": [
        2637,
        2655
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6077": {
      "fn": "Competition.sponsor",
      "offset": [
        2637,
        2669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "6080": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        2637,
        2669
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6081": {
      "fn": "Competition.sponsor",
      "offset": [
        2637,
        2669
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6082": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6084": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6085": {
      "fn": "Competition.sponsor",
      "offset": [
        2624,
        2635
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6086": {
      "fn": "Competition.sponsor",
      "offset": [
        2624,
        2635
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6087": {
      "fn": "Competition.sponsor",
      "offset": [
        2612,
        2622
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6088": {
      "fn": "Competition.sponsor",
      "offset": [
        2612,
        2622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6089": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x64939930C3FD0A1FE9E7FB9810272DB7730A0F02B900972787BCB79FB6FD3D2D"
    },
    "6122": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6123": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6125": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6126": {
      "fn": "Competition.sponsor",
      "offset": [
        2604,
        2670
      ],
      "op": "LOG4",
      "path": "2"
    },
    "6127": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "POP",
      "path": "2"
    },
    "6128": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6129": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6130": {
      "fn": "Competition.sponsor",
      "offset": [
        2176,
        2677
      ],
      "op": "POP",
      "path": "2"
    },
    "6131": {
      "fn": "Competition.sponsor",
      "jump": "o",
      "offset": [
        2176,
        2677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6132": {
      "fn": "Competition.updateResults",
      "offset": [
        13975,
        14245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6133": {
      "branch": 135,
      "fn": "Competition.updateResults",
      "offset": [
        14089,
        14117
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 74
    },
    "6134": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1867"
    },
    "6137": {
      "branch": 135,
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6138": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6140": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6147": {
      "op": "SHL"
    },
    "6148": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6149": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6152": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6154": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6155": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "ADD",
      "path": "2"
    },
    "6156": {
      "op": "MSTORE"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6161": {
      "op": "DUP3"
    },
    "6162": {
      "op": "ADD"
    },
    "6163": {
      "op": "MSTORE"
    },
    "6164": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A204D7573"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6199": {
      "op": "DUP3"
    },
    "6200": {
      "op": "ADD"
    },
    "6201": {
      "op": "MSTORE"
    },
    "6202": {
      "op": "PUSH32",
      "value": "0x742068617665207072652D6578697374696E6720726573756C74732E00000000"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6237": {
      "op": "DUP3"
    },
    "6238": {
      "op": "ADD"
    },
    "6239": {
      "op": "MSTORE"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6242": {
      "op": "ADD"
    },
    "6243": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "6246": {
      "op": "JUMP"
    },
    "6247": {
      "fn": "Competition.updateResults",
      "offset": [
        14081,
        14182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6248": {
      "fn": "Competition.updateResults",
      "offset": [
        14192,
        14238
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0x949"
    },
    "6251": {
      "fn": "Competition.updateResults",
      "offset": [
        14207,
        14221
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6252": {
      "fn": "Competition.updateResults",
      "offset": [
        14223,
        14237
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6253": {
      "fn": "Competition.updateResults",
      "offset": [
        14192,
        14206
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F1"
    },
    "6256": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        14192,
        14238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6257": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6258": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10318,
        10357
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0x187C"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6263": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10346,
        10356
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6264": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10318,
        10325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "6267": {
      "fn": "Competition.updateVaultAddress",
      "jump": "i",
      "offset": [
        10318,
        10357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6268": {
      "branch": 136,
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10318,
        10357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6269": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EE"
    },
    "6272": {
      "branch": 136,
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6273": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6275": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6284": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6287": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6289": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6290": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "ADD",
      "path": "2"
    },
    "6291": {
      "op": "MSTORE"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6296": {
      "op": "DUP3"
    },
    "6297": {
      "op": "ADD"
    },
    "6298": {
      "op": "MSTORE"
    },
    "6299": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174655661756C7441646472657373"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6334": {
      "op": "DUP3"
    },
    "6335": {
      "op": "ADD"
    },
    "6336": {
      "op": "MSTORE"
    },
    "6337": {
      "op": "PUSH32",
      "value": "0x3A2043616C6C657220697320756E617574686F72697A65642E00000000000000"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6372": {
      "op": "DUP3"
    },
    "6373": {
      "op": "ADD"
    },
    "6374": {
      "op": "MSTORE"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6377": {
      "op": "ADD"
    },
    "6378": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "6381": {
      "op": "JUMP"
    },
    "6382": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10310,
        10419
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6383": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10435
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x2"
    },
    "6385": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6386": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6393": {
      "op": "SHL"
    },
    "6394": {
      "op": "SUB"
    },
    "6395": {
      "op": "NOT"
    },
    "6396": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "AND",
      "path": "2"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6403": {
      "op": "SHL"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6406": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "AND",
      "path": "2"
    },
    "6407": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6408": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6409": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "OR",
      "path": "2"
    },
    "6410": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6411": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6412": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10429,
        10461
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6413": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10477,
        10513
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x40"
    },
    "6415": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10477,
        10513
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6416": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10477,
        10513
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5E74F6697AE9D8E4ED8C4E8CB2F44ACC9909529CE81812AAB23103B3DE223F66"
    },
    "6449": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10477,
        10513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6452": {
      "op": "SWAP1"
    },
    "6453": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10477,
        10513
      ],
      "op": "LOG2",
      "path": "2"
    },
    "6454": {
      "fn": "Competition.updateVaultAddress",
      "offset": [
        10221,
        10520
      ],
      "op": "POP",
      "path": "2"
    },
    "6455": {
      "fn": "Competition.updateVaultAddress",
      "jump": "o",
      "offset": [
        10221,
        10520
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6456": {
      "op": "JUMPDEST"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6459": {
      "op": "DUP3"
    },
    "6460": {
      "op": "DUP2"
    },
    "6461": {
      "op": "MSTORE"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6464": {
      "op": "DUP2"
    },
    "6465": {
      "op": "SWAP1"
    },
    "6466": {
      "op": "MSTORE"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6469": {
      "op": "SWAP1"
    },
    "6470": {
      "op": "KECCAK256"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "ADD"
    },
    "6474": {
      "op": "SLOAD"
    },
    "6475": {
      "op": "PUSH2",
      "value": "0x1953"
    },
    "6478": {
      "op": "SWAP1"
    },
    "6479": {
      "op": "PUSH2",
      "value": "0x8D5"
    },
    "6482": {
      "op": "JUMP"
    },
    "6483": {
      "op": "JUMPDEST"
    },
    "6484": {
      "op": "PUSH2",
      "value": "0xB57"
    },
    "6487": {
      "op": "JUMPI"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6490": {
      "op": "MLOAD"
    },
    "6491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6497": {
      "op": "SHL"
    },
    "6498": {
      "op": "DUP2"
    },
    "6499": {
      "op": "MSTORE"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6504": {
      "op": "DUP3"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "MSTORE"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6511": {
      "op": "DUP3"
    },
    "6512": {
      "op": "ADD"
    },
    "6513": {
      "op": "MSTORE"
    },
    "6514": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6549": {
      "op": "DUP3"
    },
    "6550": {
      "op": "ADD"
    },
    "6551": {
      "op": "MSTORE"
    },
    "6552": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6574": {
      "op": "DUP3"
    },
    "6575": {
      "op": "ADD"
    },
    "6576": {
      "op": "MSTORE"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "6583": {
      "op": "JUMP"
    },
    "6584": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6585": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x2"
    },
    "6587": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6588": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6597": {
      "op": "SHL"
    },
    "6598": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6599": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6600": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "DIV",
      "path": "2"
    },
    "6601": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3979,
        3996
      ],
      "op": "AND",
      "path": "2"
    },
    "6602": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3931,
        3943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6604": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6605": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6606": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6607": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "6609": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6611": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6612": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6614": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6615": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        3997
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6616": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6618": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "ADD",
      "path": "2"
    },
    "6619": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6620": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6622": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "AND",
      "path": "2"
    },
    "6623": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6625": {
      "branch": 137,
      "fn": "Competition.decreaseStake",
      "offset": [
        3967,
        4008
      ],
      "op": "EQ",
      "path": "2"
    },
    "6626": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A88"
    },
    "6629": {
      "branch": 137,
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6630": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6632": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6633": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6639": {
      "op": "SHL"
    },
    "6640": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6641": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6644": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6646": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6647": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "ADD",
      "path": "2"
    },
    "6648": {
      "op": "MSTORE"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6653": {
      "op": "DUP3"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "op": "MSTORE"
    },
    "6656": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6691": {
      "op": "DUP3"
    },
    "6692": {
      "op": "ADD"
    },
    "6693": {
      "op": "MSTORE"
    },
    "6694": {
      "op": "PUSH32",
      "value": "0x617365207761697420666F7220746865207374616B696E6720706572696F6420"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "ADD"
    },
    "6731": {
      "op": "MSTORE"
    },
    "6732": {
      "op": "PUSH32",
      "value": "0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6767": {
      "op": "DUP3"
    },
    "6768": {
      "op": "ADD"
    },
    "6769": {
      "op": "MSTORE"
    },
    "6770": {
      "op": "PUSH6",
      "value": "0x39BA30B5B297"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "6779": {
      "op": "SHL"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6782": {
      "op": "DUP3"
    },
    "6783": {
      "op": "ADD"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "6787": {
      "op": "ADD"
    },
    "6788": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "6791": {
      "op": "JUMP"
    },
    "6792": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3959,
        4115
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6793": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4154,
        4164
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6794": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4125,
        4143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6796": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6797": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6798": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6799": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6801": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6803": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6804": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6806": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6807": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6808": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4146,
        4165
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6809": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4183,
        4208
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 80
    },
    "6810": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4183,
        4208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6811": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4183,
        4208
      ],
      "op": "GT",
      "path": "2"
    },
    "6812": {
      "branch": 138,
      "fn": "Competition.decreaseStake",
      "offset": [
        4183,
        4208
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6813": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0E"
    },
    "6816": {
      "branch": 138,
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6817": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6819": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6826": {
      "op": "SHL"
    },
    "6827": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6828": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6831": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6833": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6834": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "ADD",
      "path": "2"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6840": {
      "op": "DUP3"
    },
    "6841": {
      "op": "ADD"
    },
    "6842": {
      "op": "MSTORE"
    },
    "6843": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20496E73"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH32",
      "value": "0x756666696369656E742066756E647320666F72207769746864726177616C2E00"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6916": {
      "op": "DUP3"
    },
    "6917": {
      "op": "ADD"
    },
    "6918": {
      "op": "MSTORE"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6921": {
      "op": "ADD"
    },
    "6922": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "6925": {
      "op": "JUMP"
    },
    "6926": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4175,
        4276
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6927": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4308,
        4332
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 81,
      "value": "0x1B18"
    },
    "6930": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4321,
        4332
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6931": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4308,
        4318
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6932": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4308,
        4332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "6935": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        4308,
        4332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6936": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4308,
        4332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6937": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4294,
        4304
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6938": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6940": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6941": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6942": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6943": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6945": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6947": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6948": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6950": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6951": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6952": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4332
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6953": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6954": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4332
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6955": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4332
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6956": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4361
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0x5"
    },
    "6958": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6959": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6960": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4365,
        4376
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6961": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4365,
        4376
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6962": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4286,
        4305
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6963": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3D"
    },
    "6966": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6967": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4365,
        4376
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6968": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4365,
        4376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6969": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A61"
    },
    "6972": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        4342,
        4376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6973": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6974": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6975": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6976": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4342,
        4376
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6977": {
      "op": "POP"
    },
    "6978": {
      "op": "POP"
    },
    "6979": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x1"
    },
    "6981": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6982": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6984": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6985": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6992": {
      "op": "SHL"
    },
    "6993": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6994": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6995": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4402,
        4412
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6996": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6998": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6999": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ADD",
      "path": "2"
    },
    "7000": {
      "op": "MSTORE"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7003": {
      "op": "DUP2"
    },
    "7004": {
      "op": "ADD"
    },
    "7005": {
      "op": "DUP6"
    },
    "7006": {
      "op": "SWAP1"
    },
    "7007": {
      "op": "MSTORE"
    },
    "7008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7014": {
      "op": "SHL"
    },
    "7015": {
      "op": "SUB"
    },
    "7016": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7017": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7018": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "AND",
      "path": "2"
    },
    "7019": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7020": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4401
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "7025": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7031": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7033": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7034": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7035": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7036": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "SUB",
      "path": "2"
    },
    "7037": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7038": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7040": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7041": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7042": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7043": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7044": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7045": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7046": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8E"
    },
    "7049": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7050": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7052": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7053": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7054": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7055": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7056": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "GAS",
      "path": "2"
    },
    "7057": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "CALL",
      "path": "2"
    },
    "7058": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7059": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7060": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7061": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA2"
    },
    "7064": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7065": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7066": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7068": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7069": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7070": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7071": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7073": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7074": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7075": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7076": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7077": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7078": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7079": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7081": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7082": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7083": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7085": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "NOT",
      "path": "2"
    },
    "7086": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7088": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7089": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ADD",
      "path": "2"
    },
    "7090": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "AND",
      "path": "2"
    },
    "7091": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7092": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ADD",
      "path": "2"
    },
    "7093": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7094": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7096": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7097": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "POP",
      "path": "2"
    },
    "7098": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7099": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "ADD",
      "path": "2"
    },
    "7100": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7101": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC6"
    },
    "7104": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7105": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7106": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2838"
    },
    "7109": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7110": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4386,
        4426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x40"
    },
    "7114": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7115": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4446,
        4450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x1"
    },
    "7117": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4446,
        4450
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4493,
        4504
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7120": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4493,
        4504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7121": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4481,
        4491
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7122": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4481,
        4491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7123": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x700865370FFB2A65A2B0242E6A64B21AC907ED5ECD46C9CFFC729C177B2B1C69"
    },
    "7156": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7157": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7159": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7160": {
      "fn": "Competition.decreaseStake",
      "offset": [
        4466,
        4505
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7161": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "POP",
      "path": "2"
    },
    "7162": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7163": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7164": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3854,
        4512
      ],
      "op": "POP",
      "path": "2"
    },
    "7165": {
      "fn": "Competition.decreaseStake",
      "jump": "o",
      "offset": [
        3854,
        4512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7166": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7167": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x2"
    },
    "7169": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7170": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7181": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7182": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "DIV",
      "path": "2"
    },
    "7183": {
      "fn": "Competition.increaseStake",
      "offset": [
        3405,
        3422
      ],
      "op": "AND",
      "path": "2"
    },
    "7184": {
      "fn": "Competition.increaseStake",
      "offset": [
        3357,
        3369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7186": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7187": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7188": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7189": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7191": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7193": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7194": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7196": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7197": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3423
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7198": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7200": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "ADD",
      "path": "2"
    },
    "7201": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7202": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7204": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "AND",
      "path": "2"
    },
    "7205": {
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7207": {
      "branch": 139,
      "fn": "Competition.increaseStake",
      "offset": [
        3393,
        3434
      ],
      "op": "EQ",
      "path": "2"
    },
    "7208": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCE"
    },
    "7211": {
      "branch": 139,
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7212": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7214": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7223": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7226": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7228": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7229": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "ADD",
      "path": "2"
    },
    "7230": {
      "op": "MSTORE"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7235": {
      "op": "DUP3"
    },
    "7236": {
      "op": "ADD"
    },
    "7237": {
      "op": "MSTORE"
    },
    "7238": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7273": {
      "op": "DUP3"
    },
    "7274": {
      "op": "ADD"
    },
    "7275": {
      "op": "MSTORE"
    },
    "7276": {
      "op": "PUSH32",
      "value": "0x617365207761697420666F7220746865207374616B696E6720706572696F6420"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7311": {
      "op": "DUP3"
    },
    "7312": {
      "op": "ADD"
    },
    "7313": {
      "op": "MSTORE"
    },
    "7314": {
      "op": "PUSH32",
      "value": "0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220"
    },
    "7347": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7349": {
      "op": "DUP3"
    },
    "7350": {
      "op": "ADD"
    },
    "7351": {
      "op": "MSTORE"
    },
    "7352": {
      "op": "PUSH6",
      "value": "0x39BA30B5B297"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "7361": {
      "op": "SHL"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "7364": {
      "op": "DUP3"
    },
    "7365": {
      "op": "ADD"
    },
    "7366": {
      "op": "MSTORE"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "7369": {
      "op": "ADD"
    },
    "7370": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "7373": {
      "op": "JUMP"
    },
    "7374": {
      "fn": "Competition.increaseStake",
      "offset": [
        3385,
        3541
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7375": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x1"
    },
    "7377": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7378": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7380": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7381": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7388": {
      "op": "SHL"
    },
    "7389": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7390": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7391": {
      "fn": "Competition.increaseStake",
      "offset": [
        3579,
        3589
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7392": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7394": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7395": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ADD",
      "path": "2"
    },
    "7396": {
      "op": "MSTORE"
    },
    "7397": {
      "fn": "Competition.increaseStake",
      "offset": [
        3599,
        3603
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7400": {
      "op": "DUP3"
    },
    "7401": {
      "op": "ADD"
    },
    "7402": {
      "op": "MSTORE"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7405": {
      "op": "DUP2"
    },
    "7406": {
      "op": "ADD"
    },
    "7407": {
      "op": "DUP5"
    },
    "7408": {
      "op": "SWAP1"
    },
    "7409": {
      "op": "MSTORE"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7416": {
      "op": "SHL"
    },
    "7417": {
      "op": "SUB"
    },
    "7418": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7419": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7420": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "AND",
      "path": "2"
    },
    "7421": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7422": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3578
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "7427": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7433": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7435": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7436": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7437": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7438": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "SUB",
      "path": "2"
    },
    "7439": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7440": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7442": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7443": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7444": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7445": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7446": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7447": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7448": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D20"
    },
    "7451": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7452": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7454": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7455": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7456": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7457": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7458": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "GAS",
      "path": "2"
    },
    "7459": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "CALL",
      "path": "2"
    },
    "7460": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7461": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7462": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7463": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D34"
    },
    "7466": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7467": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7468": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7470": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7471": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7472": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7473": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7475": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7476": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7477": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7478": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7479": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7480": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7481": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7483": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7484": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7485": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7487": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "NOT",
      "path": "2"
    },
    "7488": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7490": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7491": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ADD",
      "path": "2"
    },
    "7492": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "AND",
      "path": "2"
    },
    "7493": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7494": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ADD",
      "path": "2"
    },
    "7495": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7496": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7498": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7499": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "POP",
      "path": "2"
    },
    "7500": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7501": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "ADD",
      "path": "2"
    },
    "7502": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7503": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D58"
    },
    "7506": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7507": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7508": {
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2838"
    },
    "7511": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7512": {
      "branch": 140,
      "fn": "Competition.increaseStake",
      "offset": [
        3559,
        3618
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7513": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC0"
    },
    "7516": {
      "branch": 140,
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7517": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7519": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7526": {
      "op": "SHL"
    },
    "7527": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7528": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7531": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7533": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7534": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "ADD",
      "path": "2"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7540": {
      "op": "DUP3"
    },
    "7541": {
      "op": "ADD"
    },
    "7542": {
      "op": "MSTORE"
    },
    "7543": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20546F6B"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7578": {
      "op": "DUP3"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "MSTORE"
    },
    "7581": {
      "op": "PUSH19",
      "value": "0x32B7102A3930B739B332B9103330B4B632B217"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "7603": {
      "op": "SHL"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7606": {
      "op": "DUP3"
    },
    "7607": {
      "op": "ADD"
    },
    "7608": {
      "op": "MSTORE"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7611": {
      "op": "ADD"
    },
    "7612": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "7615": {
      "op": "JUMP"
    },
    "7616": {
      "fn": "Competition.increaseStake",
      "offset": [
        3551,
        3674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7617": {
      "fn": "Competition.increaseStake",
      "offset": [
        3692,
        3702
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 88
    },
    "7618": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7620": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7621": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7622": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7623": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7625": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7627": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7628": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7630": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7631": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7632": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7633": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7634": {
      "fn": "Competition.increaseStake",
      "offset": [
        3707,
        3718
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7635": {
      "fn": "Competition.increaseStake",
      "offset": [
        3707,
        3718
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7636": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7637": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DDF"
    },
    "7640": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7641": {
      "fn": "Competition.increaseStake",
      "offset": [
        3707,
        3718
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7642": {
      "fn": "Competition.increaseStake",
      "offset": [
        3707,
        3718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7643": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "7646": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        3684,
        3718
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7647": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7648": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7649": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "POP",
      "path": "2"
    },
    "7650": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "POP",
      "path": "2"
    },
    "7651": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7652": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7653": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7654": {
      "fn": "Competition.increaseStake",
      "offset": [
        3684,
        3718
      ],
      "op": "POP",
      "path": "2"
    },
    "7655": {
      "fn": "Competition.increaseStake",
      "offset": [
        3751,
        3762
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 89
    },
    "7656": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7658": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7660": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7661": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7662": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7663": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF8"
    },
    "7666": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7667": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7668": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0A"
    },
    "7671": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        3728,
        3762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7672": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7673": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7674": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7675": {
      "fn": "Competition.increaseStake",
      "offset": [
        3728,
        3762
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7676": {
      "op": "POP"
    },
    "7677": {
      "op": "POP"
    },
    "7678": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x40"
    },
    "7680": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7681": {
      "fn": "Competition.increaseStake",
      "offset": [
        3782,
        3786
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 91,
      "value": "0x1"
    },
    "7683": {
      "fn": "Competition.increaseStake",
      "offset": [
        3782,
        3786
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7684": {
      "op": "POP"
    },
    "7685": {
      "fn": "Competition.increaseStake",
      "offset": [
        3829,
        3840
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7686": {
      "fn": "Competition.increaseStake",
      "offset": [
        3829,
        3840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7687": {
      "fn": "Competition.increaseStake",
      "offset": [
        3817,
        3827
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7688": {
      "fn": "Competition.increaseStake",
      "offset": [
        3817,
        3827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7689": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8B0ED825817A2E696C9A931715AF4609FC60E1701F09C89EE7645130E937EB2D"
    },
    "7722": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7723": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7725": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7726": {
      "fn": "Competition.increaseStake",
      "offset": [
        3802,
        3841
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7727": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7728": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7729": {
      "fn": "Competition.increaseStake",
      "offset": [
        3280,
        3848
      ],
      "op": "POP",
      "path": "2"
    },
    "7730": {
      "fn": "Competition.increaseStake",
      "jump": "o",
      "offset": [
        3280,
        3848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7731": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7732": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6101,
        6123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7734": {
      "branch": 141,
      "fn": "Competition.updateSubmission",
      "offset": [
        6147,
        6178
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 92
    },
    "7735": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA1"
    },
    "7738": {
      "branch": 141,
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7739": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7741": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7748": {
      "op": "SHL"
    },
    "7749": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7750": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7753": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7755": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7756": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "ADD",
      "path": "2"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7762": {
      "op": "DUP3"
    },
    "7763": {
      "op": "ADD"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7767": {
      "op": "DUP1"
    },
    "7768": {
      "op": "MLOAD"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7771": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "7774": {
      "op": "DUP4"
    },
    "7775": {
      "op": "CODECOPY"
    },
    "7776": {
      "op": "DUP2"
    },
    "7777": {
      "op": "MLOAD"
    },
    "7778": {
      "op": "SWAP2"
    },
    "7779": {
      "op": "MSTORE"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7782": {
      "op": "DUP3"
    },
    "7783": {
      "op": "ADD"
    },
    "7784": {
      "op": "MSTORE"
    },
    "7785": {
      "op": "PUSH32",
      "value": "0x4D7573742068617665207072652D6578697374696E67207375626D697373696F"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7820": {
      "op": "DUP3"
    },
    "7821": {
      "op": "ADD"
    },
    "7822": {
      "op": "MSTORE"
    },
    "7823": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7828": {
      "op": "SHL"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7831": {
      "op": "DUP3"
    },
    "7832": {
      "op": "ADD"
    },
    "7833": {
      "op": "MSTORE"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "7836": {
      "op": "ADD"
    },
    "7837": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "7840": {
      "op": "JUMP"
    },
    "7841": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6139,
        6249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7842": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6277,
        6332
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 93,
      "value": "0x1EAB"
    },
    "7845": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6295,
        6312
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7846": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6314,
        6331
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7847": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6277,
        6294
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C5"
    },
    "7850": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        6277,
        6332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7851": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6277,
        6332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7852": {
      "fn": "Competition.updateSubmission",
      "offset": [
        6259,
        6332
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7853": {
      "fn": "Competition.updateSubmission",
      "offset": [
        5988,
        6339
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7854": {
      "op": "POP"
    },
    "7855": {
      "op": "POP"
    },
    "7856": {
      "op": "POP"
    },
    "7857": {
      "fn": "Competition.updateSubmission",
      "jump": "o",
      "offset": [
        5988,
        6339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7858": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13389,
        13837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7859": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13460,
        13499
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 94,
      "value": "0x1EBD"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7864": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13488,
        13498
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7865": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13460,
        13467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "7868": {
      "fn": "Competition.closeSubmission",
      "jump": "i",
      "offset": [
        13460,
        13499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7869": {
      "branch": 142,
      "fn": "Competition.closeSubmission",
      "offset": [
        13460,
        13499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7870": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F28"
    },
    "7873": {
      "branch": 142,
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7874": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7876": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7883": {
      "op": "SHL"
    },
    "7884": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7885": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7888": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7890": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7891": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "ADD",
      "path": "2"
    },
    "7892": {
      "op": "MSTORE"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7897": {
      "op": "DUP3"
    },
    "7898": {
      "op": "ADD"
    },
    "7899": {
      "op": "MSTORE"
    },
    "7900": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7935": {
      "op": "DUP3"
    },
    "7936": {
      "op": "ADD"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "PUSH22",
      "value": "0x30B63632B91034B9903AB730BABA3437B934BD32B217"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "7963": {
      "op": "SHL"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7966": {
      "op": "DUP3"
    },
    "7967": {
      "op": "ADD"
    },
    "7968": {
      "op": "MSTORE"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7971": {
      "op": "ADD"
    },
    "7972": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "7975": {
      "op": "JUMP"
    },
    "7976": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13452,
        13558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7977": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7979": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7980": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7985": {
      "op": "SHL"
    },
    "7986": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7987": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "DIV",
      "path": "2"
    },
    "7988": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7993": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "AND",
      "path": "2"
    },
    "7994": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13568,
        13590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7996": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 95
    },
    "7997": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7998": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7999": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8001": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8003": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8004": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8006": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8007": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13656
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8008": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8010": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "ADD",
      "path": "2"
    },
    "8011": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8012": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8013": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13593,
        13610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8014": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8016": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8017": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8018": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13662
      ],
      "op": "AND",
      "path": "2"
    },
    "8019": {
      "branch": 143,
      "fn": "Competition.closeSubmission",
      "offset": [
        13628,
        13667
      ],
      "op": "EQ",
      "path": "2"
    },
    "8020": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC5"
    },
    "8023": {
      "branch": 143,
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8024": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8026": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8033": {
      "op": "SHL"
    },
    "8034": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8035": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8038": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8040": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8041": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "ADD",
      "path": "2"
    },
    "8042": {
      "op": "MSTORE"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "8045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8047": {
      "op": "DUP3"
    },
    "8048": {
      "op": "ADD"
    },
    "8049": {
      "op": "MSTORE"
    },
    "8050": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8085": {
      "op": "DUP3"
    },
    "8086": {
      "op": "ADD"
    },
    "8087": {
      "op": "MSTORE"
    },
    "8088": {
      "op": "PUSH32",
      "value": "0x68616C6C656E676520696E20756E65787065637465642073746174652E000000"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8123": {
      "op": "DUP3"
    },
    "8124": {
      "op": "ADD"
    },
    "8125": {
      "op": "MSTORE"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8128": {
      "op": "ADD"
    },
    "8129": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "8132": {
      "op": "JUMP"
    },
    "8133": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13620,
        13733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8134": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 96,
      "value": "0xFFFFFFFF"
    },
    "8139": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8140": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "AND",
      "path": "2"
    },
    "8141": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8143": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8144": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8145": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8146": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8148": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8150": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8151": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8153": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8154": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8155": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8156": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13780,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8158": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8159": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8160": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13777
      ],
      "op": "ADD",
      "path": "2"
    },
    "8161": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8162": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8165": {
      "op": "NOT"
    },
    "8166": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "AND",
      "path": "2"
    },
    "8167": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8168": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8169": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "OR",
      "path": "2"
    },
    "8170": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8171": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13781
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8172": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13797,
        13830
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 97
    },
    "8173": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13797,
        13830
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xAA5EBDC7900B87A79257AABBAB219AF255ADA0BE7148632CE5AFCD622DF7A88B"
    },
    "8206": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13797,
        13830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8207": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13743,
        13771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8208": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13797,
        13830
      ],
      "op": "LOG2",
      "path": "2"
    },
    "8209": {
      "fn": "Competition.closeSubmission",
      "offset": [
        13389,
        13837
      ],
      "op": "POP",
      "path": "2"
    },
    "8210": {
      "fn": "Competition.closeSubmission",
      "jump": "o",
      "offset": [
        13389,
        13837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8211": {
      "fn": "Competition._updateDataset",
      "offset": [
        12857,
        13383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8212": {
      "fn": "Competition._updateDataset",
      "offset": [
        13005,
        13019
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 98
    },
    "8213": {
      "fn": "Competition._updateDataset",
      "offset": [
        12987,
        13001
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8214": {
      "fn": "Competition._updateDataset",
      "offset": [
        12987,
        13019
      ],
      "op": "EQ",
      "path": "2"
    },
    "8215": {
      "branch": 144,
      "fn": "Competition._updateDataset",
      "offset": [
        12987,
        13019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8216": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209A"
    },
    "8219": {
      "branch": 144,
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8220": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8222": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8229": {
      "op": "SHL"
    },
    "8230": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8231": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8234": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8236": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8237": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "ADD",
      "path": "2"
    },
    "8238": {
      "op": "MSTORE"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8243": {
      "op": "DUP3"
    },
    "8244": {
      "op": "ADD"
    },
    "8245": {
      "op": "MSTORE"
    },
    "8246": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616E"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8281": {
      "op": "DUP3"
    },
    "8282": {
      "op": "ADD"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "op": "PUSH32",
      "value": "0x6E6F74207570646174652077697468207468652073616D652068617368206173"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8319": {
      "op": "DUP3"
    },
    "8320": {
      "op": "ADD"
    },
    "8321": {
      "op": "MSTORE"
    },
    "8322": {
      "op": "PUSH8",
      "value": "0x103132B337B93297"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "8333": {
      "op": "SHL"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8336": {
      "op": "DUP3"
    },
    "8337": {
      "op": "ADD"
    },
    "8338": {
      "op": "MSTORE"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "8341": {
      "op": "ADD"
    },
    "8342": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "8345": {
      "op": "JUMP"
    },
    "8346": {
      "fn": "Competition._updateDataset",
      "offset": [
        12979,
        13096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8347": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 99,
      "value": "0xFFFFFFFF"
    },
    "8352": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8353": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "AND",
      "path": "2"
    },
    "8354": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8356": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8357": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8358": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8359": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8361": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8363": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8364": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8366": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8367": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13142
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8368": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13150
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8369": {
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13168
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8370": {
      "branch": 145,
      "fn": "Competition._updateDataset",
      "offset": [
        13114,
        13168
      ],
      "op": "EQ",
      "path": "2"
    },
    "8371": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2124"
    },
    "8374": {
      "branch": 145,
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8375": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8377": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8386": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8389": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8391": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8392": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "ADD",
      "path": "2"
    },
    "8393": {
      "op": "MSTORE"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "MSTORE"
    },
    "8401": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A20496E63"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8436": {
      "op": "DUP3"
    },
    "8437": {
      "op": "ADD"
    },
    "8438": {
      "op": "MSTORE"
    },
    "8439": {
      "op": "PUSH32",
      "value": "0x6F7272656374206F6C642064617461736574207265666572656E63652E000000"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8474": {
      "op": "DUP3"
    },
    "8475": {
      "op": "ADD"
    },
    "8476": {
      "op": "MSTORE"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8479": {
      "op": "ADD"
    },
    "8480": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "8483": {
      "op": "JUMP"
    },
    "8484": {
      "fn": "Competition._updateDataset",
      "offset": [
        13106,
        13234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8485": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 100,
      "value": "0xFFFFFFFF"
    },
    "8490": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8491": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "AND",
      "path": "2"
    },
    "8492": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8494": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8495": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8496": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8497": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8499": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8501": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8502": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8504": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8505": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8506": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8507": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13297
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8508": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8509": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13297
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8510": {
      "fn": "Competition._updateDataset",
      "offset": [
        13313,
        13376
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 101
    },
    "8511": {
      "fn": "Competition._updateDataset",
      "offset": [
        13283,
        13297
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8512": {
      "fn": "Competition._updateDataset",
      "offset": [
        13283,
        13297
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8513": {
      "fn": "Competition._updateDataset",
      "offset": [
        13345,
        13359
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8514": {
      "fn": "Competition._updateDataset",
      "offset": [
        13345,
        13359
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8515": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8516": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8517": {
      "fn": "Competition._updateDataset",
      "offset": [
        13313,
        13376
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB4AD7E2453C3C06A28C5CFE29A3067C6EDDE6EB03BE4DF2A461F9D806CB747E"
    },
    "8550": {
      "fn": "Competition._updateDataset",
      "offset": [
        13313,
        13376
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8551": {
      "fn": "Competition._updateDataset",
      "offset": [
        13244,
        13272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8552": {
      "fn": "Competition._updateDataset",
      "offset": [
        13313,
        13376
      ],
      "op": "LOG4",
      "path": "2"
    },
    "8553": {
      "fn": "Competition._updateDataset",
      "offset": [
        12857,
        13383
      ],
      "op": "POP",
      "path": "2"
    },
    "8554": {
      "fn": "Competition._updateDataset",
      "offset": [
        12857,
        13383
      ],
      "op": "POP",
      "path": "2"
    },
    "8555": {
      "fn": "Competition._updateDataset",
      "offset": [
        12857,
        13383
      ],
      "op": "POP",
      "path": "2"
    },
    "8556": {
      "fn": "Competition._updateDataset",
      "jump": "o",
      "offset": [
        12857,
        13383
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8557": {
      "op": "JUMPDEST"
    },
    "8558": {
      "op": "PUSH2",
      "value": "0x2177"
    },
    "8561": {
      "op": "DUP3"
    },
    "8562": {
      "op": "DUP3"
    },
    "8563": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "8566": {
      "jump": "i",
      "op": "JUMP"
    },
    "8567": {
      "op": "JUMPDEST"
    },
    "8568": {
      "op": "PUSH2",
      "value": "0x949"
    },
    "8571": {
      "op": "JUMPI"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8574": {
      "op": "DUP3"
    },
    "8575": {
      "op": "DUP2"
    },
    "8576": {
      "op": "MSTORE"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8579": {
      "op": "DUP2"
    },
    "8580": {
      "op": "DUP2"
    },
    "8581": {
      "op": "MSTORE"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8584": {
      "op": "DUP1"
    },
    "8585": {
      "op": "DUP4"
    },
    "8586": {
      "op": "KECCAK256"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8593": {
      "op": "SHL"
    },
    "8594": {
      "op": "SUB"
    },
    "8595": {
      "op": "DUP6"
    },
    "8596": {
      "op": "AND"
    },
    "8597": {
      "op": "DUP5"
    },
    "8598": {
      "op": "MSTORE"
    },
    "8599": {
      "op": "SWAP1"
    },
    "8600": {
      "op": "SWAP2"
    },
    "8601": {
      "op": "MSTORE"
    },
    "8602": {
      "op": "SWAP1"
    },
    "8603": {
      "op": "KECCAK256"
    },
    "8604": {
      "op": "DUP1"
    },
    "8605": {
      "op": "SLOAD"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8608": {
      "op": "NOT"
    },
    "8609": {
      "op": "AND"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8612": {
      "op": "OR"
    },
    "8613": {
      "op": "SWAP1"
    },
    "8614": {
      "op": "SSTORE"
    },
    "8615": {
      "op": "PUSH2",
      "value": "0x21AD"
    },
    "8618": {
      "op": "CALLER"
    },
    "8619": {
      "op": "SWAP1"
    },
    "8620": {
      "op": "JUMP"
    },
    "8621": {
      "op": "JUMPDEST"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8628": {
      "op": "SHL"
    },
    "8629": {
      "op": "SUB"
    },
    "8630": {
      "op": "AND"
    },
    "8631": {
      "op": "DUP2"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8638": {
      "op": "SHL"
    },
    "8639": {
      "op": "SUB"
    },
    "8640": {
      "op": "AND"
    },
    "8641": {
      "op": "DUP4"
    },
    "8642": {
      "op": "PUSH32",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8677": {
      "op": "MLOAD"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8680": {
      "op": "MLOAD"
    },
    "8681": {
      "op": "DUP1"
    },
    "8682": {
      "op": "SWAP2"
    },
    "8683": {
      "op": "SUB"
    },
    "8684": {
      "op": "SWAP1"
    },
    "8685": {
      "op": "LOG4"
    },
    "8686": {
      "op": "POP"
    },
    "8687": {
      "op": "POP"
    },
    "8688": {
      "jump": "o",
      "op": "JUMP"
    },
    "8689": {
      "fn": "Competition._updateResults",
      "offset": [
        14251,
        15039
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8690": {
      "fn": "Competition._updateResults",
      "offset": [
        14357,
        14396
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 102,
      "value": "0x21FC"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8695": {
      "fn": "Competition._updateResults",
      "offset": [
        14385,
        14395
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8696": {
      "fn": "Competition._updateResults",
      "offset": [
        14357,
        14364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130D"
    },
    "8699": {
      "fn": "Competition._updateResults",
      "jump": "i",
      "offset": [
        14357,
        14396
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8700": {
      "branch": 146,
      "fn": "Competition._updateResults",
      "offset": [
        14357,
        14396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8701": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2265"
    },
    "8704": {
      "branch": 146,
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8705": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8707": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8714": {
      "op": "SHL"
    },
    "8715": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8716": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8719": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8721": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8722": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "ADD",
      "path": "2"
    },
    "8723": {
      "op": "MSTORE"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8728": {
      "op": "DUP3"
    },
    "8729": {
      "op": "ADD"
    },
    "8730": {
      "op": "MSTORE"
    },
    "8731": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616C"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8766": {
      "op": "DUP3"
    },
    "8767": {
      "op": "ADD"
    },
    "8768": {
      "op": "MSTORE"
    },
    "8769": {
      "op": "PUSH20",
      "value": "0x3632B91034B9903AB730BABA3437B934BD32B217"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8792": {
      "op": "SHL"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8795": {
      "op": "DUP3"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "op": "MSTORE"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8800": {
      "op": "ADD"
    },
    "8801": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "8804": {
      "op": "JUMP"
    },
    "8805": {
      "fn": "Competition._updateResults",
      "offset": [
        14349,
        14453
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8806": {
      "fn": "Competition._updateResults",
      "offset": [
        14489,
        14503
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 103
    },
    "8807": {
      "fn": "Competition._updateResults",
      "offset": [
        14471,
        14485
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8808": {
      "fn": "Competition._updateResults",
      "offset": [
        14471,
        14503
      ],
      "op": "EQ",
      "path": "2"
    },
    "8809": {
      "branch": 147,
      "fn": "Competition._updateResults",
      "offset": [
        14471,
        14503
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8810": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "8813": {
      "branch": 147,
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8814": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8816": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8823": {
      "op": "SHL"
    },
    "8824": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8825": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8828": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8830": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8831": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "ADD",
      "path": "2"
    },
    "8832": {
      "op": "MSTORE"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8837": {
      "op": "DUP3"
    },
    "8838": {
      "op": "ADD"
    },
    "8839": {
      "op": "MSTORE"
    },
    "8840": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616E"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8875": {
      "op": "DUP3"
    },
    "8876": {
      "op": "ADD"
    },
    "8877": {
      "op": "MSTORE"
    },
    "8878": {
      "op": "PUSH32",
      "value": "0x6E6F74207570646174652077697468207468652073616D652068617368206173"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8913": {
      "op": "DUP3"
    },
    "8914": {
      "op": "ADD"
    },
    "8915": {
      "op": "MSTORE"
    },
    "8916": {
      "op": "PUSH8",
      "value": "0x103132B337B93297"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "8927": {
      "op": "SHL"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8930": {
      "op": "DUP3"
    },
    "8931": {
      "op": "ADD"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "8935": {
      "op": "ADD"
    },
    "8936": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "8939": {
      "op": "JUMP"
    },
    "8940": {
      "fn": "Competition._updateResults",
      "offset": [
        14463,
        14580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8941": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8943": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8948": {
      "op": "SHL"
    },
    "8949": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8950": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "DIV",
      "path": "2"
    },
    "8951": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "8956": {
      "fn": "Competition._updateResults",
      "offset": [
        14615,
        14632
      ],
      "op": "AND",
      "path": "2"
    },
    "8957": {
      "fn": "Competition._updateResults",
      "offset": [
        14590,
        14612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8959": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 104
    },
    "8960": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8961": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8962": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8964": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8966": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8967": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8969": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8970": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14678
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8971": {
      "fn": "Competition._updateResults",
      "offset": [
        14688,
        14689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8973": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8974": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8975": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "ADD",
      "path": "2"
    },
    "8976": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8977": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8979": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14684
      ],
      "op": "AND",
      "path": "2"
    },
    "8980": {
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14689
      ],
      "op": "LT",
      "path": "2"
    },
    "8981": {
      "branch": 148,
      "fn": "Competition._updateResults",
      "offset": [
        14650,
        14689
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8982": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2387"
    },
    "8985": {
      "branch": 148,
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8986": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8988": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8995": {
      "op": "SHL"
    },
    "8996": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8997": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9000": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9002": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9003": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9004": {
      "op": "MSTORE"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9009": {
      "op": "DUP3"
    },
    "9010": {
      "op": "ADD"
    },
    "9011": {
      "op": "MSTORE"
    },
    "9012": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436861"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9047": {
      "op": "DUP3"
    },
    "9048": {
      "op": "ADD"
    },
    "9049": {
      "op": "MSTORE"
    },
    "9050": {
      "op": "PUSH32",
      "value": "0x6C6C656E676520696E20756E65787065637465642073746174652E0000000000"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9085": {
      "op": "DUP3"
    },
    "9086": {
      "op": "ADD"
    },
    "9087": {
      "op": "MSTORE"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9090": {
      "op": "ADD"
    },
    "9091": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9094": {
      "op": "JUMP"
    },
    "9095": {
      "fn": "Competition._updateResults",
      "offset": [
        14642,
        14753
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9096": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 105,
      "value": "0xFFFFFFFF"
    },
    "9101": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9102": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "AND",
      "path": "2"
    },
    "9103": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9105": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9106": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9107": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9108": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9110": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9112": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9113": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9115": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9116": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14799
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9117": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9119": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14807
      ],
      "op": "ADD",
      "path": "2"
    },
    "9120": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14807
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9121": {
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14825
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9122": {
      "branch": 149,
      "fn": "Competition._updateResults",
      "offset": [
        14771,
        14825
      ],
      "op": "EQ",
      "path": "2"
    },
    "9123": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2414"
    },
    "9126": {
      "branch": 149,
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9127": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9129": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9136": {
      "op": "SHL"
    },
    "9137": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9138": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9141": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9143": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9144": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "ADD",
      "path": "2"
    },
    "9145": {
      "op": "MSTORE"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9150": {
      "op": "DUP3"
    },
    "9151": {
      "op": "ADD"
    },
    "9152": {
      "op": "MSTORE"
    },
    "9153": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436C61"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9188": {
      "op": "DUP3"
    },
    "9189": {
      "op": "ADD"
    },
    "9190": {
      "op": "MSTORE"
    },
    "9191": {
      "op": "PUSH32",
      "value": "0x736820696E206578697374696E6720726573756C747320686173682E00000000"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9226": {
      "op": "DUP3"
    },
    "9227": {
      "op": "ADD"
    },
    "9228": {
      "op": "MSTORE"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9231": {
      "op": "ADD"
    },
    "9232": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9235": {
      "op": "JUMP"
    },
    "9236": {
      "fn": "Competition._updateResults",
      "offset": [
        14763,
        14890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9237": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 106,
      "value": "0xFFFFFFFF"
    },
    "9242": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9243": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "AND",
      "path": "2"
    },
    "9244": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9246": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9247": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9248": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9249": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9251": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9253": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9254": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9256": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9257": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9258": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9259": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9261": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14936
      ],
      "op": "ADD",
      "path": "2"
    },
    "9262": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14953
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9263": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14953
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9264": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14953
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9265": {
      "fn": "Competition._updateResults",
      "offset": [
        14969,
        15032
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 107
    },
    "9266": {
      "fn": "Competition._updateResults",
      "offset": [
        14939,
        14953
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9267": {
      "fn": "Competition._updateResults",
      "offset": [
        14939,
        14953
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9268": {
      "fn": "Competition._updateResults",
      "offset": [
        15001,
        15015
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9269": {
      "fn": "Competition._updateResults",
      "offset": [
        15001,
        15015
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9270": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9271": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9272": {
      "fn": "Competition._updateResults",
      "offset": [
        14969,
        15032
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xFB7D772905D44C5FDD59D4AB87C7F40281E09F93E2E189D03737C6D82B154EA"
    },
    "9305": {
      "fn": "Competition._updateResults",
      "offset": [
        14969,
        15032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9306": {
      "fn": "Competition._updateResults",
      "offset": [
        14900,
        14928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9307": {
      "fn": "Competition._updateResults",
      "offset": [
        14969,
        15032
      ],
      "op": "LOG4",
      "path": "2"
    },
    "9308": {
      "fn": "Competition._updateResults",
      "offset": [
        14251,
        15039
      ],
      "op": "POP",
      "path": "2"
    },
    "9309": {
      "fn": "Competition._updateResults",
      "offset": [
        14251,
        15039
      ],
      "op": "POP",
      "path": "2"
    },
    "9310": {
      "fn": "Competition._updateResults",
      "offset": [
        14251,
        15039
      ],
      "op": "POP",
      "path": "2"
    },
    "9311": {
      "fn": "Competition._updateResults",
      "jump": "o",
      "offset": [
        14251,
        15039
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9312": {
      "op": "JUMPDEST"
    },
    "9313": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9316": {
      "op": "DUP3"
    },
    "9317": {
      "op": "DUP3"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x130D"
    },
    "9321": {
      "jump": "i",
      "op": "JUMP"
    },
    "9322": {
      "op": "JUMPDEST"
    },
    "9323": {
      "op": "ISZERO"
    },
    "9324": {
      "op": "PUSH2",
      "value": "0x949"
    },
    "9327": {
      "op": "JUMPI"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9330": {
      "op": "DUP3"
    },
    "9331": {
      "op": "DUP2"
    },
    "9332": {
      "op": "MSTORE"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9335": {
      "op": "DUP2"
    },
    "9336": {
      "op": "DUP2"
    },
    "9337": {
      "op": "MSTORE"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9340": {
      "op": "DUP1"
    },
    "9341": {
      "op": "DUP4"
    },
    "9342": {
      "op": "KECCAK256"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "op": "SUB"
    },
    "9351": {
      "op": "DUP6"
    },
    "9352": {
      "op": "AND"
    },
    "9353": {
      "op": "DUP1"
    },
    "9354": {
      "op": "DUP6"
    },
    "9355": {
      "op": "MSTORE"
    },
    "9356": {
      "op": "SWAP3"
    },
    "9357": {
      "op": "MSTORE"
    },
    "9358": {
      "op": "DUP1"
    },
    "9359": {
      "op": "DUP4"
    },
    "9360": {
      "op": "KECCAK256"
    },
    "9361": {
      "op": "DUP1"
    },
    "9362": {
      "op": "SLOAD"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9365": {
      "op": "NOT"
    },
    "9366": {
      "op": "AND"
    },
    "9367": {
      "op": "SWAP1"
    },
    "9368": {
      "op": "SSTORE"
    },
    "9369": {
      "op": "MLOAD"
    },
    "9370": {
      "op": "CALLER"
    },
    "9371": {
      "op": "SWAP3"
    },
    "9372": {
      "op": "DUP6"
    },
    "9373": {
      "op": "SWAP2"
    },
    "9374": {
      "op": "PUSH32",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "9407": {
      "op": "SWAP2"
    },
    "9408": {
      "op": "SWAP1"
    },
    "9409": {
      "op": "LOG4"
    },
    "9410": {
      "op": "POP"
    },
    "9411": {
      "op": "POP"
    },
    "9412": {
      "jump": "o",
      "op": "JUMP"
    },
    "9413": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6345,
        7265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9414": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 108,
      "value": "0x2"
    },
    "9416": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9417": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9422": {
      "op": "SHL"
    },
    "9423": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9424": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "DIV",
      "path": "2"
    },
    "9425": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "9430": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "AND",
      "path": "2"
    },
    "9431": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6451,
        6473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9433": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 109
    },
    "9434": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9435": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9436": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9438": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9440": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9441": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9443": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9444": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6570
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9445": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9447": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "ADD",
      "path": "2"
    },
    "9448": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9449": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9450": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6507,
        6524
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9451": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9453": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9454": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9455": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6576
      ],
      "op": "AND",
      "path": "2"
    },
    "9456": {
      "branch": 150,
      "fn": "Competition._updateSubmission",
      "offset": [
        6542,
        6581
      ],
      "op": "EQ",
      "path": "2"
    },
    "9457": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2550"
    },
    "9460": {
      "branch": 150,
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9461": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9463": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9470": {
      "op": "SHL"
    },
    "9471": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9472": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9475": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9477": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9478": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "ADD",
      "path": "2"
    },
    "9479": {
      "op": "MSTORE"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9484": {
      "op": "DUP3"
    },
    "9485": {
      "op": "ADD"
    },
    "9486": {
      "op": "MSTORE"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9489": {
      "op": "DUP1"
    },
    "9490": {
      "op": "MLOAD"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9493": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "9496": {
      "op": "DUP4"
    },
    "9497": {
      "op": "CODECOPY"
    },
    "9498": {
      "op": "DUP2"
    },
    "9499": {
      "op": "MLOAD"
    },
    "9500": {
      "op": "SWAP2"
    },
    "9501": {
      "op": "MSTORE"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9504": {
      "op": "DUP3"
    },
    "9505": {
      "op": "ADD"
    },
    "9506": {
      "op": "MSTORE"
    },
    "9507": {
      "op": "PUSH32",
      "value": "0x4E6F7420617661696C61626C6520666F72207375626D697373696F6E732E0000"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9542": {
      "op": "DUP3"
    },
    "9543": {
      "op": "ADD"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9547": {
      "op": "ADD"
    },
    "9548": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9551": {
      "op": "JUMP"
    },
    "9552": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6534,
        6648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9553": {
      "branch": 151,
      "fn": "Competition._updateSubmission",
      "offset": [
        6666,
        6697
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 110
    },
    "9554": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25B1"
    },
    "9557": {
      "branch": 151,
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9558": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9560": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9567": {
      "op": "SHL"
    },
    "9568": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9569": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9572": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9574": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9575": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "ADD",
      "path": "2"
    },
    "9576": {
      "op": "MSTORE"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9581": {
      "op": "DUP3"
    },
    "9582": {
      "op": "ADD"
    },
    "9583": {
      "op": "MSTORE"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9586": {
      "op": "DUP1"
    },
    "9587": {
      "op": "MLOAD"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9590": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "9593": {
      "op": "DUP4"
    },
    "9594": {
      "op": "CODECOPY"
    },
    "9595": {
      "op": "DUP2"
    },
    "9596": {
      "op": "MLOAD"
    },
    "9597": {
      "op": "SWAP2"
    },
    "9598": {
      "op": "MSTORE"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9601": {
      "op": "DUP3"
    },
    "9602": {
      "op": "ADD"
    },
    "9603": {
      "op": "MSTORE"
    },
    "9604": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74207375626D697420656D70747920686173682E00000000000000"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9639": {
      "op": "DUP3"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "MSTORE"
    },
    "9642": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9644": {
      "op": "ADD"
    },
    "9645": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9648": {
      "op": "JUMP"
    },
    "9649": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6658,
        6759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9650": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6798,
        6815
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 111
    },
    "9651": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6777,
        6794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9652": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6777,
        6815
      ],
      "op": "EQ",
      "path": "2"
    },
    "9653": {
      "branch": 152,
      "fn": "Competition._updateSubmission",
      "offset": [
        6777,
        6815
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9654": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2629"
    },
    "9657": {
      "branch": 152,
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9658": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9660": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9667": {
      "op": "SHL"
    },
    "9668": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9669": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9672": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9674": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9675": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "ADD",
      "path": "2"
    },
    "9676": {
      "op": "MSTORE"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9681": {
      "op": "DUP3"
    },
    "9682": {
      "op": "ADD"
    },
    "9683": {
      "op": "MSTORE"
    },
    "9684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9686": {
      "op": "DUP1"
    },
    "9687": {
      "op": "MLOAD"
    },
    "9688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9690": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "9693": {
      "op": "DUP4"
    },
    "9694": {
      "op": "CODECOPY"
    },
    "9695": {
      "op": "DUP2"
    },
    "9696": {
      "op": "MLOAD"
    },
    "9697": {
      "op": "SWAP2"
    },
    "9698": {
      "op": "MSTORE"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9701": {
      "op": "DUP3"
    },
    "9702": {
      "op": "ADD"
    },
    "9703": {
      "op": "MSTORE"
    },
    "9704": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74207570646174652077697468207468652073616D652068617368"
    },
    "9737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9739": {
      "op": "DUP3"
    },
    "9740": {
      "op": "ADD"
    },
    "9741": {
      "op": "MSTORE"
    },
    "9742": {
      "op": "PUSH11",
      "value": "0x1030B9903132B337B93297"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "9756": {
      "op": "SHL"
    },
    "9757": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9759": {
      "op": "DUP3"
    },
    "9760": {
      "op": "ADD"
    },
    "9761": {
      "op": "MSTORE"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "9764": {
      "op": "ADD"
    },
    "9765": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9768": {
      "op": "JUMP"
    },
    "9769": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6769,
        6895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9770": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 112,
      "value": "0xFFFFFFFF"
    },
    "9775": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9776": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "AND",
      "path": "2"
    },
    "9777": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9779": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9780": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9781": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9782": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9784": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9786": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9787": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9788": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9789": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9791": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9792": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9793": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6941
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9794": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6965,
        6975
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9795": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9796": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9797": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9799": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6964
      ],
      "op": "ADD",
      "path": "2"
    },
    "9800": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9801": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9802": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9803": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9804": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9805": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6976
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9806": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6997
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9807": {
      "branch": 153,
      "fn": "Competition._updateSubmission",
      "offset": [
        6913,
        6997
      ],
      "op": "EQ",
      "path": "2"
    },
    "9808": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26BA"
    },
    "9811": {
      "branch": 153,
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9812": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9814": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9821": {
      "op": "SHL"
    },
    "9822": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9823": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9826": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9828": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9829": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "ADD",
      "path": "2"
    },
    "9830": {
      "op": "MSTORE"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9835": {
      "op": "DUP3"
    },
    "9836": {
      "op": "ADD"
    },
    "9837": {
      "op": "MSTORE"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9840": {
      "op": "DUP1"
    },
    "9841": {
      "op": "MLOAD"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9844": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "9847": {
      "op": "DUP4"
    },
    "9848": {
      "op": "CODECOPY"
    },
    "9849": {
      "op": "DUP2"
    },
    "9850": {
      "op": "MLOAD"
    },
    "9851": {
      "op": "SWAP2"
    },
    "9852": {
      "op": "MSTORE"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9855": {
      "op": "DUP3"
    },
    "9856": {
      "op": "ADD"
    },
    "9857": {
      "op": "MSTORE"
    },
    "9858": {
      "op": "PUSH32",
      "value": "0x436C61736820696E206578697374696E67207375626D697373696F6E20686173"
    },
    "9891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9893": {
      "op": "DUP3"
    },
    "9894": {
      "op": "ADD"
    },
    "9895": {
      "op": "MSTORE"
    },
    "9896": {
      "op": "PUSH2",
      "value": "0x3417"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "9901": {
      "op": "SHL"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9904": {
      "op": "DUP3"
    },
    "9905": {
      "op": "ADD"
    },
    "9906": {
      "op": "MSTORE"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "9909": {
      "op": "ADD"
    },
    "9910": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "9913": {
      "op": "JUMP"
    },
    "9914": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6905,
        7084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9915": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 113,
      "value": "0xFFFFFFFF"
    },
    "9920": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9921": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "AND",
      "path": "2"
    },
    "9922": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9924": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9925": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9926": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9927": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9929": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9931": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9932": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9933": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9934": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9936": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9937": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9938": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7122
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9939": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7146,
        7156
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9940": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9941": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9942": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9943": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9945": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9946": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7145
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9947": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7145
      ],
      "op": "ADD",
      "path": "2"
    },
    "9948": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9949": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9950": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9951": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9952": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9953": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7157
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9954": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7177
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9955": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9956": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7094,
        7177
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9957": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7193,
        7258
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 114
    },
    "9958": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7160,
        7177
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9959": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7160,
        7177
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9960": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7146,
        7156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9961": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7146,
        7156
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9962": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7193,
        7258
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x953E3B79BB71898776BB2EF8BB919748C883B8B27C42E334DE1ECDBF79D472BB"
    },
    "9995": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7193,
        7258
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9996": {
      "fn": "Competition._updateSubmission",
      "offset": [
        7193,
        7258
      ],
      "op": "LOG4",
      "path": "2"
    },
    "9997": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6345,
        7265
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9998": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6345,
        7265
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9999": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6345,
        7265
      ],
      "op": "POP",
      "path": "2"
    },
    "10000": {
      "fn": "Competition._updateSubmission",
      "offset": [
        6345,
        7265
      ],
      "op": "POP",
      "path": "2"
    },
    "10001": {
      "fn": "Competition._updateSubmission",
      "jump": "o",
      "offset": [
        6345,
        7265
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10002": {
      "op": "JUMPDEST"
    },
    "10003": {
      "op": "DUP1"
    },
    "10004": {
      "op": "CALLDATALOAD"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10011": {
      "op": "SHL"
    },
    "10012": {
      "op": "SUB"
    },
    "10013": {
      "op": "DUP2"
    },
    "10014": {
      "op": "AND"
    },
    "10015": {
      "op": "DUP2"
    },
    "10016": {
      "op": "EQ"
    },
    "10017": {
      "op": "PUSH2",
      "value": "0x2729"
    },
    "10020": {
      "op": "JUMPI"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10023": {
      "op": "DUP1"
    },
    "10024": {
      "op": "REVERT"
    },
    "10025": {
      "op": "JUMPDEST"
    },
    "10026": {
      "op": "SWAP2"
    },
    "10027": {
      "op": "SWAP1"
    },
    "10028": {
      "op": "POP"
    },
    "10029": {
      "jump": "o",
      "op": "JUMP"
    },
    "10030": {
      "op": "JUMPDEST"
    },
    "10031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10033": {
      "op": "DUP1"
    },
    "10034": {
      "op": "DUP4"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10037": {
      "op": "DUP5"
    },
    "10038": {
      "op": "ADD"
    },
    "10039": {
      "op": "SLT"
    },
    "10040": {
      "op": "PUSH2",
      "value": "0x273F"
    },
    "10043": {
      "op": "JUMPI"
    },
    "10044": {
      "op": "DUP2"
    },
    "10045": {
      "op": "DUP3"
    },
    "10046": {
      "op": "REVERT"
    },
    "10047": {
      "op": "JUMPDEST"
    },
    "10048": {
      "op": "POP"
    },
    "10049": {
      "op": "DUP2"
    },
    "10050": {
      "op": "CALLDATALOAD"
    },
    "10051": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10060": {
      "op": "DUP2"
    },
    "10061": {
      "op": "GT"
    },
    "10062": {
      "op": "ISZERO"
    },
    "10063": {
      "op": "PUSH2",
      "value": "0x2756"
    },
    "10066": {
      "op": "JUMPI"
    },
    "10067": {
      "op": "DUP2"
    },
    "10068": {
      "op": "DUP3"
    },
    "10069": {
      "op": "REVERT"
    },
    "10070": {
      "op": "JUMPDEST"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10073": {
      "op": "DUP4"
    },
    "10074": {
      "op": "ADD"
    },
    "10075": {
      "op": "SWAP2"
    },
    "10076": {
      "op": "POP"
    },
    "10077": {
      "op": "DUP4"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10080": {
      "op": "DUP3"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10083": {
      "op": "SHL"
    },
    "10084": {
      "op": "DUP6"
    },
    "10085": {
      "op": "ADD"
    },
    "10086": {
      "op": "ADD"
    },
    "10087": {
      "op": "GT"
    },
    "10088": {
      "op": "ISZERO"
    },
    "10089": {
      "op": "PUSH2",
      "value": "0x2771"
    },
    "10092": {
      "op": "JUMPI"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10095": {
      "op": "DUP1"
    },
    "10096": {
      "op": "REVERT"
    },
    "10097": {
      "op": "JUMPDEST"
    },
    "10098": {
      "op": "SWAP3"
    },
    "10099": {
      "op": "POP"
    },
    "10100": {
      "op": "SWAP3"
    },
    "10101": {
      "op": "SWAP1"
    },
    "10102": {
      "op": "POP"
    },
    "10103": {
      "jump": "o",
      "op": "JUMP"
    },
    "10104": {
      "op": "JUMPDEST"
    },
    "10105": {
      "op": "DUP1"
    },
    "10106": {
      "op": "CALLDATALOAD"
    },
    "10107": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10112": {
      "op": "DUP2"
    },
    "10113": {
      "op": "AND"
    },
    "10114": {
      "op": "DUP2"
    },
    "10115": {
      "op": "EQ"
    },
    "10116": {
      "op": "PUSH2",
      "value": "0x2729"
    },
    "10119": {
      "op": "JUMPI"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10122": {
      "op": "DUP1"
    },
    "10123": {
      "op": "REVERT"
    },
    "10124": {
      "op": "JUMPDEST"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10129": {
      "op": "DUP3"
    },
    "10130": {
      "op": "DUP5"
    },
    "10131": {
      "op": "SUB"
    },
    "10132": {
      "op": "SLT"
    },
    "10133": {
      "op": "ISZERO"
    },
    "10134": {
      "op": "PUSH2",
      "value": "0x279D"
    },
    "10137": {
      "op": "JUMPI"
    },
    "10138": {
      "op": "DUP1"
    },
    "10139": {
      "op": "DUP2"
    },
    "10140": {
      "op": "REVERT"
    },
    "10141": {
      "op": "JUMPDEST"
    },
    "10142": {
      "op": "PUSH2",
      "value": "0x1EAB"
    },
    "10145": {
      "op": "DUP3"
    },
    "10146": {
      "op": "PUSH2",
      "value": "0x2712"
    },
    "10149": {
      "jump": "i",
      "op": "JUMP"
    },
    "10150": {
      "op": "JUMPDEST"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10153": {
      "op": "DUP1"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10156": {
      "op": "DUP4"
    },
    "10157": {
      "op": "DUP6"
    },
    "10158": {
      "op": "SUB"
    },
    "10159": {
      "op": "SLT"
    },
    "10160": {
      "op": "ISZERO"
    },
    "10161": {
      "op": "PUSH2",
      "value": "0x27B8"
    },
    "10164": {
      "op": "JUMPI"
    },
    "10165": {
      "op": "DUP1"
    },
    "10166": {
      "op": "DUP2"
    },
    "10167": {
      "op": "REVERT"
    },
    "10168": {
      "op": "JUMPDEST"
    },
    "10169": {
      "op": "PUSH2",
      "value": "0x27C1"
    },
    "10172": {
      "op": "DUP4"
    },
    "10173": {
      "op": "PUSH2",
      "value": "0x2712"
    },
    "10176": {
      "jump": "i",
      "op": "JUMP"
    },
    "10177": {
      "op": "JUMPDEST"
    },
    "10178": {
      "op": "SWAP5"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10181": {
      "op": "SWAP4"
    },
    "10182": {
      "op": "SWAP1"
    },
    "10183": {
      "op": "SWAP4"
    },
    "10184": {
      "op": "ADD"
    },
    "10185": {
      "op": "CALLDATALOAD"
    },
    "10186": {
      "op": "SWAP4"
    },
    "10187": {
      "op": "POP"
    },
    "10188": {
      "op": "POP"
    },
    "10189": {
      "op": "POP"
    },
    "10190": {
      "jump": "o",
      "op": "JUMP"
    },
    "10191": {
      "op": "JUMPDEST"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10194": {
      "op": "DUP1"
    },
    "10195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10197": {
      "op": "DUP1"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10200": {
      "op": "DUP6"
    },
    "10201": {
      "op": "DUP8"
    },
    "10202": {
      "op": "SUB"
    },
    "10203": {
      "op": "SLT"
    },
    "10204": {
      "op": "ISZERO"
    },
    "10205": {
      "op": "PUSH2",
      "value": "0x27E4"
    },
    "10208": {
      "op": "JUMPI"
    },
    "10209": {
      "op": "DUP2"
    },
    "10210": {
      "op": "DUP3"
    },
    "10211": {
      "op": "REVERT"
    },
    "10212": {
      "op": "JUMPDEST"
    },
    "10213": {
      "op": "DUP5"
    },
    "10214": {
      "op": "CALLDATALOAD"
    },
    "10215": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10224": {
      "op": "DUP1"
    },
    "10225": {
      "op": "DUP3"
    },
    "10226": {
      "op": "GT"
    },
    "10227": {
      "op": "ISZERO"
    },
    "10228": {
      "op": "PUSH2",
      "value": "0x27FB"
    },
    "10231": {
      "op": "JUMPI"
    },
    "10232": {
      "op": "DUP4"
    },
    "10233": {
      "op": "DUP5"
    },
    "10234": {
      "op": "REVERT"
    },
    "10235": {
      "op": "JUMPDEST"
    },
    "10236": {
      "op": "PUSH2",
      "value": "0x2807"
    },
    "10239": {
      "op": "DUP9"
    },
    "10240": {
      "op": "DUP4"
    },
    "10241": {
      "op": "DUP10"
    },
    "10242": {
      "op": "ADD"
    },
    "10243": {
      "op": "PUSH2",
      "value": "0x272E"
    },
    "10246": {
      "jump": "i",
      "op": "JUMP"
    },
    "10247": {
      "op": "JUMPDEST"
    },
    "10248": {
      "op": "SWAP1"
    },
    "10249": {
      "op": "SWAP7"
    },
    "10250": {
      "op": "POP"
    },
    "10251": {
      "op": "SWAP5"
    },
    "10252": {
      "op": "POP"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10255": {
      "op": "DUP8"
    },
    "10256": {
      "op": "ADD"
    },
    "10257": {
      "op": "CALLDATALOAD"
    },
    "10258": {
      "op": "SWAP2"
    },
    "10259": {
      "op": "POP"
    },
    "10260": {
      "op": "DUP1"
    },
    "10261": {
      "op": "DUP3"
    },
    "10262": {
      "op": "GT"
    },
    "10263": {
      "op": "ISZERO"
    },
    "10264": {
      "op": "PUSH2",
      "value": "0x281F"
    },
    "10267": {
      "op": "JUMPI"
    },
    "10268": {
      "op": "DUP4"
    },
    "10269": {
      "op": "DUP5"
    },
    "10270": {
      "op": "REVERT"
    },
    "10271": {
      "op": "JUMPDEST"
    },
    "10272": {
      "op": "POP"
    },
    "10273": {
      "op": "PUSH2",
      "value": "0x282C"
    },
    "10276": {
      "op": "DUP8"
    },
    "10277": {
      "op": "DUP3"
    },
    "10278": {
      "op": "DUP9"
    },
    "10279": {
      "op": "ADD"
    },
    "10280": {
      "op": "PUSH2",
      "value": "0x272E"
    },
    "10283": {
      "jump": "i",
      "op": "JUMP"
    },
    "10284": {
      "op": "JUMPDEST"
    },
    "10285": {
      "op": "SWAP6"
    },
    "10286": {
      "op": "SWAP9"
    },
    "10287": {
      "op": "SWAP5"
    },
    "10288": {
      "op": "SWAP8"
    },
    "10289": {
      "op": "POP"
    },
    "10290": {
      "op": "SWAP6"
    },
    "10291": {
      "op": "POP"
    },
    "10292": {
      "op": "POP"
    },
    "10293": {
      "op": "POP"
    },
    "10294": {
      "op": "POP"
    },
    "10295": {
      "jump": "o",
      "op": "JUMP"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10301": {
      "op": "DUP3"
    },
    "10302": {
      "op": "DUP5"
    },
    "10303": {
      "op": "SUB"
    },
    "10304": {
      "op": "SLT"
    },
    "10305": {
      "op": "ISZERO"
    },
    "10306": {
      "op": "PUSH2",
      "value": "0x2849"
    },
    "10309": {
      "op": "JUMPI"
    },
    "10310": {
      "op": "DUP1"
    },
    "10311": {
      "op": "DUP2"
    },
    "10312": {
      "op": "REVERT"
    },
    "10313": {
      "op": "JUMPDEST"
    },
    "10314": {
      "op": "DUP2"
    },
    "10315": {
      "op": "MLOAD"
    },
    "10316": {
      "op": "DUP1"
    },
    "10317": {
      "op": "ISZERO"
    },
    "10318": {
      "op": "ISZERO"
    },
    "10319": {
      "op": "DUP2"
    },
    "10320": {
      "op": "EQ"
    },
    "10321": {
      "op": "PUSH2",
      "value": "0x1EAB"
    },
    "10324": {
      "op": "JUMPI"
    },
    "10325": {
      "op": "DUP2"
    },
    "10326": {
      "op": "DUP3"
    },
    "10327": {
      "op": "REVERT"
    },
    "10328": {
      "op": "JUMPDEST"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10333": {
      "op": "DUP3"
    },
    "10334": {
      "op": "DUP5"
    },
    "10335": {
      "op": "SUB"
    },
    "10336": {
      "op": "SLT"
    },
    "10337": {
      "op": "ISZERO"
    },
    "10338": {
      "op": "PUSH2",
      "value": "0x2869"
    },
    "10341": {
      "op": "JUMPI"
    },
    "10342": {
      "op": "DUP1"
    },
    "10343": {
      "op": "DUP2"
    },
    "10344": {
      "op": "REVERT"
    },
    "10345": {
      "op": "JUMPDEST"
    },
    "10346": {
      "op": "POP"
    },
    "10347": {
      "op": "CALLDATALOAD"
    },
    "10348": {
      "op": "SWAP2"
    },
    "10349": {
      "op": "SWAP1"
    },
    "10350": {
      "op": "POP"
    },
    "10351": {
      "jump": "o",
      "op": "JUMP"
    },
    "10352": {
      "op": "JUMPDEST"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10355": {
      "op": "DUP1"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10358": {
      "op": "DUP4"
    },
    "10359": {
      "op": "DUP6"
    },
    "10360": {
      "op": "SUB"
    },
    "10361": {
      "op": "SLT"
    },
    "10362": {
      "op": "ISZERO"
    },
    "10363": {
      "op": "PUSH2",
      "value": "0x2882"
    },
    "10366": {
      "op": "JUMPI"
    },
    "10367": {
      "op": "DUP2"
    },
    "10368": {
      "op": "DUP3"
    },
    "10369": {
      "op": "REVERT"
    },
    "10370": {
      "op": "JUMPDEST"
    },
    "10371": {
      "op": "DUP3"
    },
    "10372": {
      "op": "CALLDATALOAD"
    },
    "10373": {
      "op": "SWAP2"
    },
    "10374": {
      "op": "POP"
    },
    "10375": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10380": {
      "op": "DUP5"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "PUSH2",
      "value": "0x2712"
    },
    "10385": {
      "jump": "i",
      "op": "JUMP"
    },
    "10386": {
      "op": "JUMPDEST"
    },
    "10387": {
      "op": "SWAP1"
    },
    "10388": {
      "op": "POP"
    },
    "10389": {
      "op": "SWAP3"
    },
    "10390": {
      "op": "POP"
    },
    "10391": {
      "op": "SWAP3"
    },
    "10392": {
      "op": "SWAP1"
    },
    "10393": {
      "op": "POP"
    },
    "10394": {
      "jump": "o",
      "op": "JUMP"
    },
    "10395": {
      "op": "JUMPDEST"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10398": {
      "op": "DUP1"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10401": {
      "op": "DUP4"
    },
    "10402": {
      "op": "DUP6"
    },
    "10403": {
      "op": "SUB"
    },
    "10404": {
      "op": "SLT"
    },
    "10405": {
      "op": "ISZERO"
    },
    "10406": {
      "op": "PUSH2",
      "value": "0x28AD"
    },
    "10409": {
      "op": "JUMPI"
    },
    "10410": {
      "op": "DUP2"
    },
    "10411": {
      "op": "DUP3"
    },
    "10412": {
      "op": "REVERT"
    },
    "10413": {
      "op": "JUMPDEST"
    },
    "10414": {
      "op": "POP"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "op": "DUP1"
    },
    "10417": {
      "op": "CALLDATALOAD"
    },
    "10418": {
      "op": "SWAP3"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10421": {
      "op": "SWAP1"
    },
    "10422": {
      "op": "SWAP2"
    },
    "10423": {
      "op": "ADD"
    },
    "10424": {
      "op": "CALLDATALOAD"
    },
    "10425": {
      "op": "SWAP2"
    },
    "10426": {
      "op": "POP"
    },
    "10427": {
      "jump": "o",
      "op": "JUMP"
    },
    "10428": {
      "op": "JUMPDEST"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10433": {
      "op": "DUP3"
    },
    "10434": {
      "op": "DUP5"
    },
    "10435": {
      "op": "SUB"
    },
    "10436": {
      "op": "SLT"
    },
    "10437": {
      "op": "ISZERO"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x28CD"
    },
    "10441": {
      "op": "JUMPI"
    },
    "10442": {
      "op": "DUP1"
    },
    "10443": {
      "op": "DUP2"
    },
    "10444": {
      "op": "REVERT"
    },
    "10445": {
      "op": "JUMPDEST"
    },
    "10446": {
      "op": "DUP2"
    },
    "10447": {
      "op": "CALLDATALOAD"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10454": {
      "op": "SHL"
    },
    "10455": {
      "op": "SUB"
    },
    "10456": {
      "op": "NOT"
    },
    "10457": {
      "op": "DUP2"
    },
    "10458": {
      "op": "AND"
    },
    "10459": {
      "op": "DUP2"
    },
    "10460": {
      "op": "EQ"
    },
    "10461": {
      "op": "PUSH2",
      "value": "0x1EAB"
    },
    "10464": {
      "op": "JUMPI"
    },
    "10465": {
      "op": "DUP2"
    },
    "10466": {
      "op": "DUP3"
    },
    "10467": {
      "op": "REVERT"
    },
    "10468": {
      "op": "JUMPDEST"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10473": {
      "op": "DUP3"
    },
    "10474": {
      "op": "DUP5"
    },
    "10475": {
      "op": "SUB"
    },
    "10476": {
      "op": "SLT"
    },
    "10477": {
      "op": "ISZERO"
    },
    "10478": {
      "op": "PUSH2",
      "value": "0x28F5"
    },
    "10481": {
      "op": "JUMPI"
    },
    "10482": {
      "op": "DUP1"
    },
    "10483": {
      "op": "DUP2"
    },
    "10484": {
      "op": "REVERT"
    },
    "10485": {
      "op": "JUMPDEST"
    },
    "10486": {
      "op": "POP"
    },
    "10487": {
      "op": "MLOAD"
    },
    "10488": {
      "op": "SWAP2"
    },
    "10489": {
      "op": "SWAP1"
    },
    "10490": {
      "op": "POP"
    },
    "10491": {
      "jump": "o",
      "op": "JUMP"
    },
    "10492": {
      "op": "JUMPDEST"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10497": {
      "op": "DUP3"
    },
    "10498": {
      "op": "DUP5"
    },
    "10499": {
      "op": "SUB"
    },
    "10500": {
      "op": "SLT"
    },
    "10501": {
      "op": "ISZERO"
    },
    "10502": {
      "op": "PUSH2",
      "value": "0x290D"
    },
    "10505": {
      "op": "JUMPI"
    },
    "10506": {
      "op": "DUP1"
    },
    "10507": {
      "op": "DUP2"
    },
    "10508": {
      "op": "REVERT"
    },
    "10509": {
      "op": "JUMPDEST"
    },
    "10510": {
      "op": "PUSH2",
      "value": "0x1EAB"
    },
    "10513": {
      "op": "DUP3"
    },
    "10514": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10517": {
      "jump": "i",
      "op": "JUMP"
    },
    "10518": {
      "op": "JUMPDEST"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10521": {
      "op": "DUP1"
    },
    "10522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10524": {
      "op": "DUP4"
    },
    "10525": {
      "op": "DUP6"
    },
    "10526": {
      "op": "SUB"
    },
    "10527": {
      "op": "SLT"
    },
    "10528": {
      "op": "ISZERO"
    },
    "10529": {
      "op": "PUSH2",
      "value": "0x2928"
    },
    "10532": {
      "op": "JUMPI"
    },
    "10533": {
      "op": "DUP2"
    },
    "10534": {
      "op": "DUP3"
    },
    "10535": {
      "op": "REVERT"
    },
    "10536": {
      "op": "JUMPDEST"
    },
    "10537": {
      "op": "PUSH2",
      "value": "0x2931"
    },
    "10540": {
      "op": "DUP4"
    },
    "10541": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10544": {
      "jump": "i",
      "op": "JUMP"
    },
    "10545": {
      "op": "JUMPDEST"
    },
    "10546": {
      "op": "SWAP2"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10553": {
      "op": "DUP5"
    },
    "10554": {
      "op": "ADD"
    },
    "10555": {
      "op": "PUSH2",
      "value": "0x2712"
    },
    "10558": {
      "jump": "i",
      "op": "JUMP"
    },
    "10559": {
      "op": "JUMPDEST"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10562": {
      "op": "DUP1"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10565": {
      "op": "DUP1"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10570": {
      "op": "DUP7"
    },
    "10571": {
      "op": "DUP9"
    },
    "10572": {
      "op": "SUB"
    },
    "10573": {
      "op": "SLT"
    },
    "10574": {
      "op": "ISZERO"
    },
    "10575": {
      "op": "PUSH2",
      "value": "0x2956"
    },
    "10578": {
      "op": "JUMPI"
    },
    "10579": {
      "op": "DUP1"
    },
    "10580": {
      "op": "DUP2"
    },
    "10581": {
      "op": "REVERT"
    },
    "10582": {
      "op": "JUMPDEST"
    },
    "10583": {
      "op": "PUSH2",
      "value": "0x295F"
    },
    "10586": {
      "op": "DUP7"
    },
    "10587": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10590": {
      "jump": "i",
      "op": "JUMP"
    },
    "10591": {
      "op": "JUMPDEST"
    },
    "10592": {
      "op": "SWAP5"
    },
    "10593": {
      "op": "POP"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10596": {
      "op": "DUP7"
    },
    "10597": {
      "op": "ADD"
    },
    "10598": {
      "op": "CALLDATALOAD"
    },
    "10599": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10608": {
      "op": "DUP1"
    },
    "10609": {
      "op": "DUP3"
    },
    "10610": {
      "op": "GT"
    },
    "10611": {
      "op": "ISZERO"
    },
    "10612": {
      "op": "PUSH2",
      "value": "0x297B"
    },
    "10615": {
      "op": "JUMPI"
    },
    "10616": {
      "op": "DUP3"
    },
    "10617": {
      "op": "DUP4"
    },
    "10618": {
      "op": "REVERT"
    },
    "10619": {
      "op": "JUMPDEST"
    },
    "10620": {
      "op": "PUSH2",
      "value": "0x2987"
    },
    "10623": {
      "op": "DUP10"
    },
    "10624": {
      "op": "DUP4"
    },
    "10625": {
      "op": "DUP11"
    },
    "10626": {
      "op": "ADD"
    },
    "10627": {
      "op": "PUSH2",
      "value": "0x272E"
    },
    "10630": {
      "jump": "i",
      "op": "JUMP"
    },
    "10631": {
      "op": "JUMPDEST"
    },
    "10632": {
      "op": "SWAP1"
    },
    "10633": {
      "op": "SWAP7"
    },
    "10634": {
      "op": "POP"
    },
    "10635": {
      "op": "SWAP5"
    },
    "10636": {
      "op": "POP"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10639": {
      "op": "DUP9"
    },
    "10640": {
      "op": "ADD"
    },
    "10641": {
      "op": "CALLDATALOAD"
    },
    "10642": {
      "op": "SWAP2"
    },
    "10643": {
      "op": "POP"
    },
    "10644": {
      "op": "DUP1"
    },
    "10645": {
      "op": "DUP3"
    },
    "10646": {
      "op": "GT"
    },
    "10647": {
      "op": "ISZERO"
    },
    "10648": {
      "op": "PUSH2",
      "value": "0x299F"
    },
    "10651": {
      "op": "JUMPI"
    },
    "10652": {
      "op": "DUP3"
    },
    "10653": {
      "op": "DUP4"
    },
    "10654": {
      "op": "REVERT"
    },
    "10655": {
      "op": "JUMPDEST"
    },
    "10656": {
      "op": "POP"
    },
    "10657": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "10660": {
      "op": "DUP9"
    },
    "10661": {
      "op": "DUP3"
    },
    "10662": {
      "op": "DUP10"
    },
    "10663": {
      "op": "ADD"
    },
    "10664": {
      "op": "PUSH2",
      "value": "0x272E"
    },
    "10667": {
      "jump": "i",
      "op": "JUMP"
    },
    "10668": {
      "op": "JUMPDEST"
    },
    "10669": {
      "op": "SWAP7"
    },
    "10670": {
      "op": "SWAP10"
    },
    "10671": {
      "op": "SWAP6"
    },
    "10672": {
      "op": "SWAP9"
    },
    "10673": {
      "op": "POP"
    },
    "10674": {
      "op": "SWAP4"
    },
    "10675": {
      "op": "SWAP7"
    },
    "10676": {
      "op": "POP"
    },
    "10677": {
      "op": "SWAP3"
    },
    "10678": {
      "op": "SWAP5"
    },
    "10679": {
      "op": "SWAP4"
    },
    "10680": {
      "op": "SWAP3"
    },
    "10681": {
      "op": "POP"
    },
    "10682": {
      "op": "POP"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "jump": "o",
      "op": "JUMP"
    },
    "10685": {
      "op": "JUMPDEST"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10688": {
      "op": "DUP1"
    },
    "10689": {
      "op": "DUP3"
    },
    "10690": {
      "op": "MSTORE"
    },
    "10691": {
      "op": "DUP3"
    },
    "10692": {
      "op": "MLOAD"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "DUP3"
    },
    "10695": {
      "op": "ADD"
    },
    "10696": {
      "op": "DUP2"
    },
    "10697": {
      "op": "SWAP1"
    },
    "10698": {
      "op": "MSTORE"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10701": {
      "op": "SWAP2"
    },
    "10702": {
      "op": "SWAP1"
    },
    "10703": {
      "op": "DUP5"
    },
    "10704": {
      "op": "DUP3"
    },
    "10705": {
      "op": "ADD"
    },
    "10706": {
      "op": "SWAP1"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10709": {
      "op": "DUP6"
    },
    "10710": {
      "op": "ADD"
    },
    "10711": {
      "op": "SWAP1"
    },
    "10712": {
      "op": "DUP5"
    },
    "10713": {
      "op": "JUMPDEST"
    },
    "10714": {
      "op": "DUP2"
    },
    "10715": {
      "op": "DUP2"
    },
    "10716": {
      "op": "LT"
    },
    "10717": {
      "op": "ISZERO"
    },
    "10718": {
      "op": "PUSH2",
      "value": "0x29FE"
    },
    "10721": {
      "op": "JUMPI"
    },
    "10722": {
      "op": "DUP4"
    },
    "10723": {
      "op": "MLOAD"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10730": {
      "op": "SHL"
    },
    "10731": {
      "op": "SUB"
    },
    "10732": {
      "op": "AND"
    },
    "10733": {
      "op": "DUP4"
    },
    "10734": {
      "op": "MSTORE"
    },
    "10735": {
      "op": "SWAP3"
    },
    "10736": {
      "op": "DUP5"
    },
    "10737": {
      "op": "ADD"
    },
    "10738": {
      "op": "SWAP3"
    },
    "10739": {
      "op": "SWAP2"
    },
    "10740": {
      "op": "DUP5"
    },
    "10741": {
      "op": "ADD"
    },
    "10742": {
      "op": "SWAP2"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10745": {
      "op": "ADD"
    },
    "10746": {
      "op": "PUSH2",
      "value": "0x29D9"
    },
    "10749": {
      "op": "JUMP"
    },
    "10750": {
      "op": "JUMPDEST"
    },
    "10751": {
      "op": "POP"
    },
    "10752": {
      "op": "SWAP1"
    },
    "10753": {
      "op": "SWAP7"
    },
    "10754": {
      "op": "SWAP6"
    },
    "10755": {
      "op": "POP"
    },
    "10756": {
      "op": "POP"
    },
    "10757": {
      "op": "POP"
    },
    "10758": {
      "op": "POP"
    },
    "10759": {
      "op": "POP"
    },
    "10760": {
      "op": "POP"
    },
    "10761": {
      "jump": "o",
      "op": "JUMP"
    },
    "10762": {
      "op": "JUMPDEST"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10765": {
      "op": "DUP3"
    },
    "10766": {
      "op": "NOT"
    },
    "10767": {
      "op": "DUP3"
    },
    "10768": {
      "op": "GT"
    },
    "10769": {
      "op": "ISZERO"
    },
    "10770": {
      "op": "PUSH2",
      "value": "0x2A1D"
    },
    "10773": {
      "op": "JUMPI"
    },
    "10774": {
      "op": "PUSH2",
      "value": "0x2A1D"
    },
    "10777": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10780": {
      "jump": "i",
      "op": "JUMP"
    },
    "10781": {
      "op": "JUMPDEST"
    },
    "10782": {
      "op": "POP"
    },
    "10783": {
      "op": "ADD"
    },
    "10784": {
      "op": "SWAP1"
    },
    "10785": {
      "jump": "o",
      "op": "JUMP"
    },
    "10786": {
      "op": "JUMPDEST"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10789": {
      "op": "DUP3"
    },
    "10790": {
      "op": "PUSH2",
      "value": "0x2A3D"
    },
    "10793": {
      "op": "JUMPI"
    },
    "10794": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10801": {
      "op": "SHL"
    },
    "10802": {
      "op": "DUP2"
    },
    "10803": {
      "op": "MSTORE"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10808": {
      "op": "MSTORE"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10811": {
      "op": "DUP2"
    },
    "10812": {
      "op": "REVERT"
    },
    "10813": {
      "op": "JUMPDEST"
    },
    "10814": {
      "op": "POP"
    },
    "10815": {
      "op": "DIV"
    },
    "10816": {
      "op": "SWAP1"
    },
    "10817": {
      "jump": "o",
      "op": "JUMP"
    },
    "10818": {
      "op": "JUMPDEST"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10821": {
      "op": "DUP2"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10824": {
      "op": "NOT"
    },
    "10825": {
      "op": "DIV"
    },
    "10826": {
      "op": "DUP4"
    },
    "10827": {
      "op": "GT"
    },
    "10828": {
      "op": "DUP3"
    },
    "10829": {
      "op": "ISZERO"
    },
    "10830": {
      "op": "ISZERO"
    },
    "10831": {
      "op": "AND"
    },
    "10832": {
      "op": "ISZERO"
    },
    "10833": {
      "op": "PUSH2",
      "value": "0x2A5C"
    },
    "10836": {
      "op": "JUMPI"
    },
    "10837": {
      "op": "PUSH2",
      "value": "0x2A5C"
    },
    "10840": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10843": {
      "jump": "i",
      "op": "JUMP"
    },
    "10844": {
      "op": "JUMPDEST"
    },
    "10845": {
      "op": "POP"
    },
    "10846": {
      "op": "MUL"
    },
    "10847": {
      "op": "SWAP1"
    },
    "10848": {
      "jump": "o",
      "op": "JUMP"
    },
    "10849": {
      "op": "JUMPDEST"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10852": {
      "op": "DUP3"
    },
    "10853": {
      "op": "DUP3"
    },
    "10854": {
      "op": "LT"
    },
    "10855": {
      "op": "ISZERO"
    },
    "10856": {
      "op": "PUSH2",
      "value": "0x2A73"
    },
    "10859": {
      "op": "JUMPI"
    },
    "10860": {
      "op": "PUSH2",
      "value": "0x2A73"
    },
    "10863": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10866": {
      "jump": "i",
      "op": "JUMP"
    },
    "10867": {
      "op": "JUMPDEST"
    },
    "10868": {
      "op": "POP"
    },
    "10869": {
      "op": "SUB"
    },
    "10870": {
      "op": "SWAP1"
    },
    "10871": {
      "jump": "o",
      "op": "JUMP"
    },
    "10872": {
      "op": "JUMPDEST"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10877": {
      "op": "NOT"
    },
    "10878": {
      "op": "DUP3"
    },
    "10879": {
      "op": "EQ"
    },
    "10880": {
      "op": "ISZERO"
    },
    "10881": {
      "op": "PUSH2",
      "value": "0x2A8C"
    },
    "10884": {
      "op": "JUMPI"
    },
    "10885": {
      "op": "PUSH2",
      "value": "0x2A8C"
    },
    "10888": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10891": {
      "jump": "i",
      "op": "JUMP"
    },
    "10892": {
      "op": "JUMPDEST"
    },
    "10893": {
      "op": "POP"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10896": {
      "op": "ADD"
    },
    "10897": {
      "op": "SWAP1"
    },
    "10898": {
      "jump": "o",
      "op": "JUMP"
    },
    "10899": {
      "op": "JUMPDEST"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10902": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10907": {
      "op": "DUP1"
    },
    "10908": {
      "op": "DUP4"
    },
    "10909": {
      "op": "AND"
    },
    "10910": {
      "op": "DUP2"
    },
    "10911": {
      "op": "DUP2"
    },
    "10912": {
      "op": "EQ"
    },
    "10913": {
      "op": "ISZERO"
    },
    "10914": {
      "op": "PUSH2",
      "value": "0x2AAD"
    },
    "10917": {
      "op": "JUMPI"
    },
    "10918": {
      "op": "PUSH2",
      "value": "0x2AAD"
    },
    "10921": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10924": {
      "jump": "i",
      "op": "JUMP"
    },
    "10925": {
      "op": "JUMPDEST"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10928": {
      "op": "ADD"
    },
    "10929": {
      "op": "SWAP4"
    },
    "10930": {
      "op": "SWAP3"
    },
    "10931": {
      "op": "POP"
    },
    "10932": {
      "op": "POP"
    },
    "10933": {
      "op": "POP"
    },
    "10934": {
      "jump": "o",
      "op": "JUMP"
    },
    "10935": {
      "op": "JUMPDEST"
    },
    "10936": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10943": {
      "op": "SHL"
    },
    "10944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10946": {
      "op": "MSTORE"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10951": {
      "op": "MSTORE"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10956": {
      "op": "REVERT"
    }
  },
  "sha1": "f84c9c2f52d782c2476baf5e7bdaf3124c20d964",
  "source": "pragma solidity 0.8.4;\n\n// SPDX-License-Identifier: MIT\n\nimport './../interfaces/ICompetition.sol';\nimport './standard/access/AccessControl.sol';\nimport '../interfaces/IToken.sol';\nimport '../interfaces/IVault.sol';\nimport '../interfaces/IRegistry.sol';\n\n/**\n * @title RCI Tournament Contract\n * @author Rocket Capital Investment Pte Ltd\n * @dev This contract manages registration and reward payouts for the RCI Tournament.\n * @dev IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes)\n * \n */\ncontract Competition is AccessControl, ICompetition {\n\n    struct Challenge{\n        bytes32 dataset;\n        bytes32 results;\n        uint256 totalStakedForChallenge;\n        uint8 phase;\n        // 0: closed, 1: open for staking, 2: staking closed, open for submissions, 3: submissions closed 4: rewards paid, phase completed.\n        mapping(address => bytes32) addressToSubmissionMap;\n        address[] submitters;\n    }\n\n    IToken private _token;\n    IVault private _vault;\n    uint32 private _challengeCounter;\n    uint256 private _stakeThreshold;\n    uint256 private _competitionPool;\n    uint256 private _currentTotalStaked;\n    uint256 private _currentParticipationRewardsBudget;\n    uint256 private _currentPerformanceRewardsBudget;\n    uint256 private _performanceRewardsPercentageInWei = 90e16;\n    mapping(address => uint256) private _stakes;\n    mapping(uint32 => Challenge) private _challenges;\n\n    /*\n    * @param duration_ The number of phases per challenge.\n    * @param fee_ The initial registration fee in Token wei.\n    * @param token_address_ The address of the ERC20 token contract.\n    */\n    constructor(uint256 stakeThreshold_, address tokenAddress_, address vaultAddress_){\n        require(tokenAddress_ != address(0), \"No token address found.\");\n        require(vaultAddress_ != address(0), \"No vault address found.\");\n\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _stakeThreshold = stakeThreshold_;\n        _token = IToken(tokenAddress_);\n        _vault = IVault(vaultAddress_);\n        _challengeCounter = 0;\n        _challenges[_challengeCounter].phase = 4;\n    }\n\n    function sponsor(uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        // Transfer would fail anyway if not approved.\n        require(_token.transferFrom(msg.sender, address(this), amountToken), \"Tournament - sponsor: Token transfer failed.\");\n        uint256 currentCompPoolAmt = _competitionPool;\n        _competitionPool = currentCompPoolAmt + amountToken;\n        success = true;\n\n        emit Sponsor(msg.sender, amountToken, currentCompPoolAmt + amountToken);\n    }\n\n    function setStake(uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        uint256 currentStake = _stakes[msg.sender];\n        require(currentStake != amountToken, \"Competition - setStake: Your stake is already set to this amount.\");\n        if (amountToken > currentStake){\n            require(increaseStake(amountToken - currentStake), \"Competition - setStake: Could not increase stake.\");\n        } else{\n            require(decreaseStake(currentStake - amountToken), \"Competition - setStake: Could not decrease stake.\");\n        }\n        success = true;\n    }\n\n    function increaseStake(uint256 amountToken)\n    public override\n    returns (bool success)\n    {\n        require(_challenges[_challengeCounter].phase == 1, \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\");\n        require(_token.transferFrom(msg.sender, address(this), amountToken), \"Competition - increaseStake: Token Transfer failed.\");\n        _stakes[msg.sender] += amountToken;\n        _currentTotalStaked += amountToken;\n        success = true;\n\n        emit StakeIncreased(msg.sender, amountToken);\n    }\n\n    function decreaseStake(uint256 amountToken)\n    public override\n    returns (bool success)\n    {\n        require(_challenges[_challengeCounter].phase == 1, \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\");\n        uint256 currentBal = _stakes[msg.sender];\n        require(amountToken <= currentBal, \"Competition - decreaseStake: Insufficient funds for withdrawal.\");\n        _stakes[msg.sender] = currentBal - amountToken;\n        _currentTotalStaked -= amountToken;\n        _token.transfer(msg.sender, amountToken);\n        success = true;\n\n        emit StakeDecreased(msg.sender, amountToken);\n    }\n\n    function transferStake(address recipient, uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        require(_challenges[_challengeCounter].phase == 1, \"Competition - transferStake: Please wait for the staking period to unlock before modifying your stake.\");\n        uint256 currentBal = _stakes[msg.sender];\n        require(amountToken <= currentBal, \"Competition - transferStake: Insufficient balance.\");\n        _stakes[msg.sender] -= amountToken;\n        _stakes[recipient] += amountToken;\n        success = true;\n\n        emit StakeTransferred(msg.sender, recipient, amountToken);\n    }\n\n    function submitNewPredictions(bytes32 submissionHash)\n    external override\n    returns (uint32 challengeNumber)\n    {  \n        challengeNumber = _updateSubmission(bytes32(0), submissionHash);\n        uint256 currentStake = _stakes[msg.sender];\n        require(currentStake >= _stakeThreshold, \"Competition - submitNewPredictions: Stake is below threshold.\");\n        _challenges[challengeNumber].submitters.push(msg.sender);\n\n        uint256 participationRewards = _currentParticipationRewardsBudget * currentStake / _challenges[challengeNumber].totalStakedForChallenge;\n\n        _competitionPool -= participationRewards;\n        _stakes[msg.sender] = currentStake + participationRewards;\n        _currentTotalStaked += participationRewards;\n\n        emit StakeParticipationRewardsPaid(msg.sender, currentStake, participationRewards);\n    }\n\n    function updateSubmission(bytes32 oldSubmissionHash, bytes32 newSubmissionHash)\n    public override\n    returns (uint32 challengeNumber)\n    {\n        require(oldSubmissionHash != bytes32(0), \"Competition - updateSubmission: Must have pre-existing submission.\");\n        challengeNumber = _updateSubmission(oldSubmissionHash, newSubmissionHash);\n    }\n\n    function _updateSubmission(bytes32 oldSubmissionHash, bytes32 newSubmissionHash)\n    private\n    returns (uint32 challengeNumber)\n    {\n        challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 2, \"Competition - updateSubmission: Not available for submissions.\");\n        require(newSubmissionHash != bytes32(0), \"Competition - updateSubmission: Cannot submit empty hash.\");\n        require(oldSubmissionHash != newSubmissionHash, \"Competition - updateSubmission: Cannot update with the same hash as before.\");\n        require(_challenges[challengeNumber].addressToSubmissionMap[msg.sender] == oldSubmissionHash,\n                \"Competition - updateSubmission: Clash in existing submission hash.\");\n        _challenges[challengeNumber].addressToSubmissionMap[msg.sender] = newSubmissionHash;\n\n        emit SubmissionUpdated(challengeNumber, msg.sender, newSubmissionHash);\n    }\n\n    function getCompetitionPool()\n    view external override\n    returns (uint256 competitionPool)\n    {\n        competitionPool = _competitionPool;\n    }\n\n    function getCurrentTotalStaked()\n    view external override\n    returns (uint256 currentTotalStaked)\n    {\n        currentTotalStaked = _currentTotalStaked;\n    }\n\n    function getCurrentParticipationRewardsBudget()\n    view external override\n    returns (uint256 currentParticipationRewardsBudget)\n    {\n        currentParticipationRewardsBudget = _currentParticipationRewardsBudget;\n    }\n\n    function getCurrentPerformanceRewardsBudget()\n    view external override\n    returns (uint256 currentPerformanceRewardsBudget)\n    {\n        currentPerformanceRewardsBudget = _currentPerformanceRewardsBudget;\n    }\n\n    function getLatestChallengeNumber()\n    view public override\n    returns (uint32 latestChallengeNumber)\n    {\n        latestChallengeNumber = _challengeCounter;\n    }\n\n    function getDatasetHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 dataset)\n    {\n        dataset = _challenges[challengeNumber].dataset;\n    }\n\n    function getResultsHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 results)\n    {\n        results = _challenges[challengeNumber].results;\n    }\n\n    function getSubmissionCounter(uint32 challengeNumber)\n    view external override\n    returns (uint256 submissionCounter)\n    {\n        submissionCounter = _challenges[challengeNumber].submitters.length;\n    }\n\n    function getSubmitters(uint32 challengeNumber)\n    view external override\n    returns (address[] memory submitters)\n    {\n        submitters = _challenges[challengeNumber].submitters;\n    }\n\n    function getPhase(uint32 challengeNumber)\n    view external override\n    returns (uint8 phase)\n    {\n        phase = _challenges[challengeNumber].phase;\n    }\n\n    function getStakeThreshold()\n    view external override\n    returns (uint256 stakeThreshold)\n    {\n        stakeThreshold = _stakeThreshold;\n    }\n\n    function getStake(address participant)\n    view external override\n    returns (uint256 stake)\n    {\n        stake = _stakes[participant];\n    }\n\n    function getTokenAddress()\n    view external override\n    returns (address tokenAddress)\n    {\n        tokenAddress = address(_token);\n    }\n\n    function getVaultAddress()\n    view external override\n    returns (address vaultAddress)\n    {\n        vaultAddress = address(_vault);\n    }\n\n    function getSubmission(uint32 challengeNumber, address participant)\n    view external override\n    returns (bytes32 submissionHash)\n    {\n        submissionHash = _challenges[challengeNumber].addressToSubmissionMap[participant];\n    }\n\n    function getTotalStakesLockedForChallenge(uint32 challengeNumber)\n    view external override\n    returns (uint256 totalStakedForChallenge)\n    {\n        totalStakedForChallenge = _challenges[challengeNumber].totalStakedForChallenge;\n    }\n\n    function updateVaultAddress(address newVaultAddress)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - updateVaultAddress: Caller is unauthorized.\");\n        _vault = IVault(newVaultAddress);\n\n        emit VaultAddressUpdated(newVaultAddress);\n    }\n\n    function updateStakeThreshold(uint256 newStakeThreshold)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - updateStakeThreshold: Caller is unauthorized.\");\n        _stakeThreshold = newStakeThreshold;\n\n        emit StakeThresholdUpdated(newStakeThreshold, msg.sender);\n    }\n\n    function openStaking(bytes32 datasetHash)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - openStaking: Caller is unauthorized.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 4, \"Competition - openStaking: Previous phase is incomplete.\");\n\n        challengeNumber++;\n\n        _challenges[challengeNumber].phase = 1;\n        _challengeCounter = challengeNumber;\n\n        _updateDataset(challengeNumber, bytes32(0), datasetHash);\n\n        uint256 drawAmount = _vault.draw();\n        _competitionPool += drawAmount;\n\n        _currentPerformanceRewardsBudget = _competitionPool * _performanceRewardsPercentageInWei/(1e18);\n        _currentParticipationRewardsBudget = _competitionPool - _currentPerformanceRewardsBudget;\n\n        emit StakingOpened(challengeNumber);\n    }\n    \n    function openSubmission()\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - openSubmission: Caller is unauthorized.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - openSubmission: Challenge is in unexpected state.\");\n\n        _challenges[challengeNumber].phase = 2;\n        _challenges[challengeNumber].totalStakedForChallenge = _currentTotalStaked;\n\n        emit SubmissionOpened(challengeNumber);\n    }\n\n    function updateDataset(bytes32 oldDatasetHash, bytes32 newDatasetHash)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - updateDataset: Caller is unauthorized.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - updateDataset: Challenge is closed.\");\n        require(oldDatasetHash != bytes32(0), \"Competition - updateDataset: Must have pre-existing dataset.\");\n        _updateDataset(challengeNumber, oldDatasetHash, newDatasetHash);\n    }\n\n    function _updateDataset(uint32 challengeNumber, bytes32 oldDatasetHash, bytes32 newDatasetHash)\n    private\n    {\n        require(oldDatasetHash != newDatasetHash, \"Competition - updateDataset: Cannot update with the same hash as before.\");\n        require(_challenges[challengeNumber].dataset == oldDatasetHash, \"Competition - updateDataset: Incorrect old dataset reference.\");\n        _challenges[challengeNumber].dataset = newDatasetHash;\n\n        emit DatasetUpdated(challengeNumber, oldDatasetHash, newDatasetHash);\n    }\n\n    function closeSubmission()\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - closeSubmission: Caller is unauthorized.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 2, \"Competition - closeSubmission: Challenge in unexpected state.\");\n        _challenges[challengeNumber].phase = 3;\n\n        emit SubmissionClosed(challengeNumber);\n    }\n\n    function submitResults(bytes32 resultsHash)\n    external override\n    {\n        _updateResults(bytes32(0), resultsHash);\n    }\n\n    function updateResults(bytes32 oldResultsHash, bytes32 newResultsHash)\n    public override\n    {\n\n        require(oldResultsHash != bytes32(0), \"Competition - updateResults: Must have pre-existing results.\");\n        _updateResults(oldResultsHash, newResultsHash);\n    }\n\n    function _updateResults(bytes32 oldResultsHash, bytes32 newResultsHash)\n    private\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - updateResults: Caller is unauthorized.\");\n        require(oldResultsHash != newResultsHash, \"Competition - updateResults: Cannot update with the same hash as before.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - updateResults: Challenge in unexpected state.\");\n        require(_challenges[challengeNumber].results == oldResultsHash, \"Competition - updateResults: Clash in existing results hash.\");\n        _challenges[challengeNumber].results = newResultsHash;\n\n        emit ResultsUpdated(challengeNumber, oldResultsHash, newResultsHash);\n    }\n\n    function payPerformanceRewards(address[] calldata winners, uint256[] calldata rewards)\n    external override\n    returns (bool success)\n    {\n        success = payPerformanceRewards(_challengeCounter, winners, rewards);\n    }\n\n    function payPerformanceRewards(uint32 challengeNumber, address[] calldata winners, uint256[] calldata rewards)\n    public override\n    returns (bool success)\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Competition - payPerformanceRewards: Caller is unauthorized.\");\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - payPerformanceRewards: Challenge is in unexpected state.\");\n        require(winners.length == rewards.length, \"Competition - payPerformanceRewards: Number of winners and rewards are different.\");\n        uint256 totalAmount;\n        for (uint i = 0; i < winners.length; i++)\n        {\n            uint256 rewardAmount = rewards[i];\n            address winner = winners[i];\n            _stakes[winner] += rewardAmount;\n            totalAmount += rewardAmount;\n            emit PerformanceRewardsPayment(winner, rewardAmount);\n        }\n        if (totalAmount > _currentPerformanceRewardsBudget) {\n            revert('Total payout sum more than competition pool.');\n        }\n        else {\n            _competitionPool -= totalAmount;\n            _currentTotalStaked += totalAmount;\n            success = true;\n        }\n        _challenges[challengeNumber].phase = 4;\n\n        emit PerformanceRewardsPaid(challengeNumber, totalAmount);\n    }\n}",
  "sourceMap": "559:16019:2:-:0;;;1360:5;1307:58;;1678:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1778:27:2;;1770:63;;;;-1:-1:-1;;;1770:63:2;;1119:2:93;1770:63:2;;;1101:21:93;1158:2;1138:18;;;1131:30;1197:25;1177:18;;;1170:53;1240:18;;1770:63:2;;;;;;;;;-1:-1:-1;;;;;1851:27:2;;1843:63;;;;-1:-1:-1;;;1843:63:2;;767:2:93;1843:63:2;;;749:21:93;806:2;786:18;;;779:30;845:25;825:18;;;818:53;888:18;;1843:63:2;739:173:93;1843:63:2;1917:42;2408:4:7;1948:10:2;1917;:42::i;:::-;1969:15;:33;;;2012:6;:30;;-1:-1:-1;;;;;2012:30:2;;;-1:-1:-1;;;;;;2012:30:2;;;;;;-1:-1:-1;2052:30:2;;-1:-1:-1;;;;;;2092:21:2;2052:30;;;;2092:21;;;;;-1:-1:-1;;;2135:17:2;;2092:21;2135:17;2012:6;2123:30;;;:11;:30;;;;;:36;:40;;-1:-1:-1;;2123:40:2;2162:1;2123:40;;;559:16019;;6519:110:7;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:65;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;14:177:93:-;93:13;;-1:-1:-1;;;;;135:31:93;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:364::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:2;;;374:6;366;359:22;321:2;408:9;402:16;392:26;;437:49;482:2;471:9;467:18;437:49;:::i;:::-;427:59;;505:49;550:2;539:9;535:18;505:49;:::i;:::-;495:59;;311:249;;;;;:::o;1091:173::-;559:16019:2;;;;;;",
  "sourcePath": "contracts/Competition.sol",
  "type": "contract"
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token_address_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "AmountPerWithdrawalUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCompetition",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPerWithdrawal",
          "type": "uint256"
        }
      ],
      "name": "CompetitionAuthorized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "intervalsElapsed",
          "type": "uint256"
        }
      ],
      "name": "Drawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCompetition",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountPerWithdrawal",
          "type": "uint256"
        }
      ],
      "name": "authorizeCompetition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "draw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToWithdraw",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAmountPerWithdrawal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountPerWithdrawal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizedCompetition",
      "outputs": [
        {
          "internalType": "address",
          "name": "authorizedCompetition",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIntervalsSinceLaunch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "intervals",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastIntervalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastIntervalWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "updateAmountPerWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "6": "contracts/Vault.sol",
    "91": "interfaces/IToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault.sol",
    "exportedSymbols": {
      "AccessControl": [
        3590
      ],
      "Context": [
        13097
      ],
      "ERC165": [
        14155
      ],
      "IAccessControl": [
        3310
      ],
      "IERC165": [
        14481
      ],
      "IToken": [
        16809
      ],
      "IVault": [
        17045
      ],
      "Vault": [
        3267
      ]
    },
    "id": 3268,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3027,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:6"
      },
      {
        "absolutePath": "contracts/standard/access/AccessControl.sol",
        "file": "./standard/access/AccessControl.sol",
        "id": 3028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3591,
        "src": "57:45:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 3029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 17046,
        "src": "103:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IToken.sol",
        "file": "../interfaces/IToken.sol",
        "id": 3030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 16810,
        "src": "138:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3031,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3590,
              "src": "192:13:6"
            },
            "id": 3032,
            "nodeType": "InheritanceSpecifier",
            "src": "192:13:6"
          },
          {
            "baseName": {
              "id": 3033,
              "name": "IVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17045,
              "src": "207:6:6"
            },
            "id": 3034,
            "nodeType": "InheritanceSpecifier",
            "src": "207:6:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3267,
        "linearizedBaseContracts": [
          3267,
          17045,
          3590,
          14155,
          14481,
          3310,
          13097
        ],
        "name": "Vault",
        "nameLocation": "183:5:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3037,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "239:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "224:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IToken_$16809",
              "typeString": "contract IToken"
            },
            "typeName": {
              "id": 3036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3035,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16809,
                "src": "224:6:6"
              },
              "referencedDeclaration": 16809,
              "src": "224:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$16809",
                "typeString": "contract IToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3039,
            "mutability": "mutable",
            "name": "_authorizedCompetition",
            "nameLocation": "267:22:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "251:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3038,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 3042,
            "mutability": "constant",
            "name": "_intervalInSeconds",
            "nameLocation": "320:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "295:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3040,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "295:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3335",
              "id": 3041,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:2:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_35_by_1",
                "typeString": "int_const 35"
              },
              "value": "35"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3044,
            "mutability": "mutable",
            "name": "_amountPerWithdrawal",
            "nameLocation": "385:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "369:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3043,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "369:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3046,
            "mutability": "mutable",
            "name": "_start",
            "nameLocation": "427:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "411:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3045,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3048,
            "mutability": "mutable",
            "name": "_lastIntervalWithdrawn",
            "nameLocation": "455:22:6",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "439:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3047,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "439:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3082,
              "nodeType": "Block",
              "src": "540:217:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3056,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "561:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "581:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "581:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3055,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3504,
                      "src": "550:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3060,
                  "nodeType": "ExpressionStatement",
                  "src": "550:42:6"
                },
                {
                  "expression": {
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3061,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3037,
                      "src": "602:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$16809",
                        "typeString": "contract IToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3063,
                          "name": "token_address_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3052,
                          "src": "618:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3062,
                        "name": "IToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16809,
                        "src": "611:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IToken_$16809_$",
                          "typeString": "type(contract IToken)"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "611:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$16809",
                        "typeString": "contract IToken"
                      }
                    },
                    "src": "602:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IToken_$16809",
                      "typeString": "contract IToken"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "602:31:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3067,
                      "name": "start_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "647:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "656:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "647:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3080,
                    "nodeType": "Block",
                    "src": "711:40:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3076,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3046,
                            "src": "725:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3077,
                            "name": "start_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "734:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "725:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3079,
                        "nodeType": "ExpressionStatement",
                        "src": "725:15:6"
                      }
                    ]
                  },
                  "id": 3081,
                  "nodeType": "IfStatement",
                  "src": "643:108:6",
                  "trueBody": {
                    "id": 3075,
                    "nodeType": "Block",
                    "src": "658:49:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3070,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3046,
                            "src": "672:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3071,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "681:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "681:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "672:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "672:24:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3083,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3050,
                  "mutability": "mutable",
                  "name": "start_",
                  "nameLocation": "504:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "496:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3052,
                  "mutability": "mutable",
                  "name": "token_address_",
                  "nameLocation": "520:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "512:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "495:40:6"
            },
            "returnParameters": {
              "id": 3054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:0:6"
            },
            "scope": 3267,
            "src": "484:273:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              16991
            ],
            "body": {
              "id": 3123,
              "nodeType": "Block",
              "src": "872:413:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3093,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "898:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3094,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "918:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "918:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3092,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "890:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "890:39:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "931:55:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61921b4cdd6d91ed17075edef8ab20b4983761c3590443e4a2566bd1c135b34f",
                          "typeString": "literal_string \"Vault - authorizeCompetition: Caller is unauthorized.\""
                        },
                        "value": "Vault - authorizeCompetition: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61921b4cdd6d91ed17075edef8ab20b4983761c3590443e4a2566bd1c135b34f",
                          "typeString": "literal_string \"Vault - authorizeCompetition: Caller is unauthorized.\""
                        }
                      ],
                      "id": 3091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "882:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:105:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3099,
                  "nodeType": "ExpressionStatement",
                  "src": "882:105:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3101,
                          "name": "_authorizedCompetition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3039,
                          "src": "1005:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1039:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1031:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1031:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1031:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1005:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a20436f6d7065746974696f6e20616c7265616479206578697374732e",
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1043:59:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61722ee966e5fc50853ff21dfa4a66f06beba6ca2273524232290e85da2628ea",
                          "typeString": "literal_string \"Vault - authorizeCompetition: Competition already exists.\""
                        },
                        "value": "Vault - authorizeCompetition: Competition already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61722ee966e5fc50853ff21dfa4a66f06beba6ca2273524232290e85da2628ea",
                          "typeString": "literal_string \"Vault - authorizeCompetition: Competition already exists.\""
                        }
                      ],
                      "id": 3100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "997:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "997:106:6"
                },
                {
                  "expression": {
                    "id": 3112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3110,
                      "name": "_amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "1113:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3111,
                      "name": "amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3087,
                      "src": "1136:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1113:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3113,
                  "nodeType": "ExpressionStatement",
                  "src": "1113:42:6"
                },
                {
                  "expression": {
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3114,
                      "name": "_authorizedCompetition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3039,
                      "src": "1165:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3115,
                      "name": "newCompetition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3085,
                      "src": "1190:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1165:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:39:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3119,
                        "name": "newCompetition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "1242:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3120,
                        "name": "amountPerWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3087,
                        "src": "1258:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3118,
                      "name": "CompetitionAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17032,
                      "src": "1220:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3122,
                  "nodeType": "EmitStatement",
                  "src": "1215:63:6"
                }
              ]
            },
            "functionSelector": "538a1f88",
            "id": 3124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeCompetition",
            "nameLocation": "772:20:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "859:8:6"
            },
            "parameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3085,
                  "mutability": "mutable",
                  "name": "newCompetition",
                  "nameLocation": "801:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "793:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "mutability": "mutable",
                  "name": "amountPerWithdrawal",
                  "nameLocation": "825:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "817:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:53:6"
            },
            "returnParameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:6"
            },
            "scope": 3267,
            "src": "763:522:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              16996
            ],
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "1371:222:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3132,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "1397:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3133,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1417:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1417:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3131,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3400,
                          "src": "1389:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1389:39:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74202d20757064617465416d6f756e745065725769746864726177616c3a2043616c6c657220697320756e617574686f72697a65642e",
                        "id": 3136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:60:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_689c06d8c689659cba07a0c6e713f998d9fcc174f2440358ec8da719bdce8a6a",
                          "typeString": "literal_string \"Vault - updateAmountPerWithdrawal: Caller is unauthorized.\""
                        },
                        "value": "Vault - updateAmountPerWithdrawal: Caller is unauthorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_689c06d8c689659cba07a0c6e713f998d9fcc174f2440358ec8da719bdce8a6a",
                          "typeString": "literal_string \"Vault - updateAmountPerWithdrawal: Caller is unauthorized.\""
                        }
                      ],
                      "id": 3130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1381:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3138,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:110:6"
                },
                {
                  "expression": {
                    "id": 3141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3139,
                      "name": "_amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "1501:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3140,
                      "name": "newAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3126,
                      "src": "1524:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1501:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3142,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:32:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3144,
                        "name": "newAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "1576:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3143,
                      "name": "AmountPerWithdrawalUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17036,
                      "src": "1549:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3146,
                  "nodeType": "EmitStatement",
                  "src": "1544:42:6"
                }
              ]
            },
            "functionSelector": "fb0f6286",
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAmountPerWithdrawal",
            "nameLocation": "1300:25:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1358:8:6"
            },
            "parameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "newAmount",
                  "nameLocation": "1334:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "1326:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1325:19:6"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:6"
            },
            "scope": 3267,
            "src": "1291:302:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17001
            ],
            "body": {
              "id": 3158,
              "nodeType": "Block",
              "src": "1710:63:6",
              "statements": [
                {
                  "expression": {
                    "id": 3156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3154,
                      "name": "authorizedCompetition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3152,
                      "src": "1720:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3155,
                      "name": "_authorizedCompetition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3039,
                      "src": "1744:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1720:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3157,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:46:6"
                }
              ]
            },
            "functionSelector": "6cd22340",
            "id": 3159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizedCompetition",
            "nameLocation": "1608:24:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3150,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1653:8:6"
            },
            "parameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:2:6"
            },
            "returnParameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "authorizedCompetition",
                  "nameLocation": "1683:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3159,
                  "src": "1675:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:31:6"
            },
            "scope": 3267,
            "src": "1599:174:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17006
            ],
            "body": {
              "id": 3169,
              "nodeType": "Block",
              "src": "1886:59:6",
              "statements": [
                {
                  "expression": {
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3165,
                      "name": "amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3163,
                      "src": "1896:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3166,
                      "name": "_amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "1918:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1896:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3168,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:42:6"
                }
              ]
            },
            "functionSelector": "86b099bb",
            "id": 3170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountPerWithdrawal",
            "nameLocation": "1788:22:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1831:8:6"
            },
            "parameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:2:6"
            },
            "returnParameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "amountPerWithdrawal",
                  "nameLocation": "1861:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3170,
                  "src": "1853:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:6"
            },
            "scope": 3267,
            "src": "1779:166:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17011
            ],
            "body": {
              "id": 3186,
              "nodeType": "Block",
              "src": "2047:76:6",
              "statements": [
                {
                  "expression": {
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3176,
                      "name": "intervals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "2057:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3177,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2070:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2070:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 3179,
                              "name": "_start",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3046,
                              "src": "2088:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2070:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3181,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2069:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 3182,
                        "name": "_intervalInSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "2098:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2069:47:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2057:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:59:6"
                }
              ]
            },
            "functionSelector": "5ed6a01d",
            "id": 3187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIntervalsSinceLaunch",
            "nameLocation": "1960:23:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3172,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2002:8:6"
            },
            "parameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:2:6"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "intervals",
                  "nameLocation": "2032:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3187,
                  "src": "2024:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:19:6"
            },
            "scope": 3267,
            "src": "1951:172:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17016
            ],
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "2207:31:6",
              "statements": [
                {
                  "expression": {
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3193,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "2217:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3194,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "2225:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2217:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "2217:14:6"
                }
              ]
            },
            "functionSelector": "c828371e",
            "id": 3198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStartTime",
            "nameLocation": "2138:12:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3189,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:6"
            },
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2150:2:6"
            },
            "returnParameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3191,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "2201:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3198,
                  "src": "2193:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2192:15:6"
            },
            "scope": 3267,
            "src": "2129:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17021
            ],
            "body": {
              "id": 3208,
              "nodeType": "Block",
              "src": "2350:63:6",
              "statements": [
                {
                  "expression": {
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3204,
                      "name": "lastIntervalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3202,
                      "src": "2360:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3205,
                      "name": "_lastIntervalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3048,
                      "src": "2384:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2360:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:46:6"
                }
              ]
            },
            "functionSelector": "127a80ab",
            "id": 3209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastIntervalWithdrawn",
            "nameLocation": "2253:24:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3200,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2293:8:6"
            },
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:2:6"
            },
            "returnParameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3202,
                  "mutability": "mutable",
                  "name": "lastIntervalWithdrawn",
                  "nameLocation": "2323:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3209,
                  "src": "2315:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2314:31:6"
            },
            "scope": 3267,
            "src": "2244:169:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17026
            ],
            "body": {
              "id": 3265,
              "nodeType": "Block",
              "src": "2500:625:6",
              "statements": [
                {
                  "expression": {
                    "id": 3217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3215,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "2510:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3216,
                      "name": "_amountPerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "2529:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2510:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3218,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:39:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3219,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "2563:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2582:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2563:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3264,
                  "nodeType": "IfStatement",
                  "src": "2559:560:6",
                  "trueBody": {
                    "id": 3263,
                    "nodeType": "Block",
                    "src": "2584:535:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3223,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2606:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2606:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3225,
                                "name": "_authorizedCompetition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3039,
                                "src": "2620:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2606:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661756c74202d20647261773a2043616c6c6572206973206e6f7420617574686f72697a65642e",
                              "id": 3227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2644:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fd7628cc020b2619c56678069938a4736d38a9fb5ec20a38dcd7dfb07a0fc15a",
                                "typeString": "literal_string \"Vault - draw: Caller is not authorized.\""
                              },
                              "value": "Vault - draw: Caller is not authorized."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fd7628cc020b2619c56678069938a4736d38a9fb5ec20a38dcd7dfb07a0fc15a",
                                "typeString": "literal_string \"Vault - draw: Caller is not authorized.\""
                              }
                            ],
                            "id": 3222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2598:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2598:88:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3229,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:88:6"
                      },
                      {
                        "assignments": [
                          3231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3231,
                            "mutability": "mutable",
                            "name": "intervalsElapsed",
                            "nameLocation": "2708:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 3263,
                            "src": "2700:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3230,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2700:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3234,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3232,
                            "name": "getIntervalsSinceLaunch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3187,
                            "src": "2727:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2727:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2700:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3236,
                                "name": "intervalsElapsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3231,
                                "src": "2774:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 3237,
                                "name": "_lastIntervalWithdrawn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3048,
                                "src": "2793:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2774:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661756c74202d20647261773a20416c726561647920636c61696d656420666f72207468697320696e74657276616c2e",
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2817:50:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_975631a61b00121e7097ae56383f880de415710e9b95a18b29f7b5efc58fd6c1",
                                "typeString": "literal_string \"Vault - draw: Already claimed for this interval.\""
                              },
                              "value": "Vault - draw: Already claimed for this interval."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_975631a61b00121e7097ae56383f880de415710e9b95a18b29f7b5efc58fd6c1",
                                "typeString": "literal_string \"Vault - draw: Already claimed for this interval.\""
                              }
                            ],
                            "id": 3235,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2766:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2766:102:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3241,
                        "nodeType": "ExpressionStatement",
                        "src": "2766:102:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3245,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2906:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2906:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3247,
                                  "name": "_amountPerWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3044,
                                  "src": "2918:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3243,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3037,
                                  "src": "2890:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IToken_$16809",
                                    "typeString": "contract IToken"
                                  }
                                },
                                "id": 3244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16712,
                                "src": "2890:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 3248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2890:49:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661756c74202d20647261773a20546f6b656e207472616e73666572206661696c65642e",
                              "id": 3249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2941:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ac6add3ef60b9756e7a06a1a9f531ce21c776037f33d33ca38ab07dc3caf5f2",
                                "typeString": "literal_string \"Vault - draw: Token transfer failed.\""
                              },
                              "value": "Vault - draw: Token transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ac6add3ef60b9756e7a06a1a9f531ce21c776037f33d33ca38ab07dc3caf5f2",
                                "typeString": "literal_string \"Vault - draw: Token transfer failed.\""
                              }
                            ],
                            "id": 3242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2882:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2882:98:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3251,
                        "nodeType": "ExpressionStatement",
                        "src": "2882:98:6"
                      },
                      {
                        "expression": {
                          "id": 3254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3252,
                            "name": "_lastIntervalWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3048,
                            "src": "2994:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3253,
                            "name": "intervalsElapsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3231,
                            "src": "3019:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2994:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3255,
                        "nodeType": "ExpressionStatement",
                        "src": "2994:41:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3061:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3061:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3259,
                              "name": "amountToWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3213,
                              "src": "3073:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3260,
                              "name": "intervalsElapsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3231,
                              "src": "3091:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3256,
                            "name": "Drawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17044,
                            "src": "3055:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3055:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3262,
                        "nodeType": "EmitStatement",
                        "src": "3050:58:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0eecae21",
            "id": 3266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "draw",
            "nameLocation": "2428:4:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2448:8:6"
            },
            "parameters": {
              "id": 3210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:2:6"
            },
            "returnParameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3213,
                  "mutability": "mutable",
                  "name": "amountToWithdraw",
                  "nameLocation": "2478:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "2470:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:26:6"
            },
            "scope": 3267,
            "src": "2419:706:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3268,
        "src": "174:2953:6",
        "usedErrors": []
      }
    ],
    "src": "0:3127:6"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610bb9380380610bb983398101604081905261002f9161011c565b61003a600033610070565b600180546001600160a01b0319166001600160a01b038316179055816100635742600455610069565b60048290555b5050610157565b61007a828261007e565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661007a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100d83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000806040838503121561012e578182fd5b825160208401519092506001600160a01b038116811461014c578182fd5b809150509250929050565b610a53806101666000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635ed6a01d11610097578063a217fddf11610066578063a217fddf146101dc578063c828371e146101e4578063d547741f146101ec578063fb0f6286146101ff57600080fd5b80635ed6a01d1461019e5780636cd22340146101a657806386b099bb146101c157806391d14854146101c957600080fd5b8063248a9ca3116100d3578063248a9ca3146101405780632f2ff15d1461016357806336568abe14610178578063538a1f881461018b57600080fd5b806301ffc9a7146100fa5780630eecae2114610122578063127a80ab14610138575b600080fd5b61010d6101083660046109b2565b610212565b60405190151581526020015b60405180910390f35b61012a610249565b604051908152602001610119565b60055461012a565b61012a61014e36600461096f565b60009081526020819052604090206001015490565b610176610171366004610987565b610450565b005b610176610186366004610987565b6104df565b61017661019936600461091f565b610559565b61012a6106a0565b6002546040516001600160a01b039091168152602001610119565b60035461012a565b61010d6101d7366004610987565b6106c1565b61012a600081565b60045461012a565b6101766101fa366004610987565b6106ea565b61017661020d36600461096f565b61076a565b60006001600160e01b03198216637965db0b60e01b148061024357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600354801561044d576002546001600160a01b031633146102c15760405162461bcd60e51b815260206004820152602760248201527f5661756c74202d20647261773a2043616c6c6572206973206e6f74206175746860448201526637b934bd32b21760c91b60648201526084015b60405180910390fd5b60006102cb6106a0565b905060055481116103375760405162461bcd60e51b815260206004820152603060248201527f5661756c74202d20647261773a20416c726561647920636c61696d656420666f60448201526f39103a3434b99034b73a32b93b30b61760811b60648201526084016102b8565b60015460035460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610948565b6104175760405162461bcd60e51b8152602060048201526024808201527f5661756c74202d20647261773a20546f6b656e207472616e73666572206661696044820152633632b21760e11b60648201526084016102b8565b60058190556040518190839033907f11c8b4019de91c411a4563c3f1a6debb06e417f30b786f18dfe77db88d40657790600090a4505b90565b60008281526020819052604090206001015461046d905b336106c1565b6104d15760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b60648201526084016102b8565b6104db828261081a565b5050565b6001600160a01b038116331461054f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016102b8565b6104db828261089e565b6105646000336106c1565b6105ce5760405162461bcd60e51b815260206004820152603560248201527f5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a204361604482015274363632b91034b9903ab730baba3437b934bd32b21760591b60648201526084016102b8565b6002546001600160a01b03161561064d5760405162461bcd60e51b815260206004820152603960248201527f5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a20436f60448201527f6d7065746974696f6e20616c7265616479206578697374732e0000000000000060648201526084016102b8565b6003819055600280546001600160a01b0319166001600160a01b0384169081179091556040518291907f9c6c08c6e8a66cbc213ea9350571c9b46aac2684fc090ba0b330a9c8ba33602690600090a35050565b60006023600454426106b291906109fa565b6106bc91906109da565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461070590610467565b61054f5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b60648201526084016102b8565b6107756000336106c1565b6107e75760405162461bcd60e51b815260206004820152603a60248201527f5661756c74202d20757064617465416d6f756e7450657257697468647261776160448201527f6c3a2043616c6c657220697320756e617574686f72697a65642e00000000000060648201526084016102b8565b600381905560405181907ff6a1be46faba17636fe6b7abe9e62c1a1cd7fbb17d196d4860fdcee962cd63d290600090a250565b61082482826106c1565b6104db576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561085a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108a882826106c1565b156104db576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80356001600160a01b038116811461091a57600080fd5b919050565b60008060408385031215610931578182fd5b61093a83610903565b946020939093013593505050565b600060208284031215610959578081fd5b81518015158114610968578182fd5b9392505050565b600060208284031215610980578081fd5b5035919050565b60008060408385031215610999578182fd5b823591506109a960208401610903565b90509250929050565b6000602082840312156109c3578081fd5b81356001600160e01b031981168114610968578182fd5b6000826109f557634e487b7160e01b81526012600452602481fd5b500490565b600082821015610a1857634e487b7160e01b81526011600452602481fd5b50039056fea264697066735822122016117a4869ca4130b1d6503ae3762e05d81d627d4d3d66177d0e9ad3c54e470a64736f6c63430008040033",
  "bytecodeSha1": "85337e366f287a582db901ad405cf26774d20165",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "6": {
        "Vault.authorizeCompetition": {
          "23": [
            890,
            929,
            true
          ],
          "24": [
            1005,
            1041,
            true
          ]
        },
        "Vault.draw": {
          "19": [
            2563,
            2583,
            false
          ],
          "20": [
            2606,
            2642,
            true
          ],
          "21": [
            2774,
            2815,
            true
          ],
          "22": [
            2890,
            2939,
            true
          ]
        },
        "Vault.updateAmountPerWithdrawal": {
          "25": [
            1389,
            1428,
            true
          ]
        }
      },
      "91": {}
    },
    "statements": {
      "6": {
        "Vault.authorizeCompetition": {
          "10": [
            882,
            987
          ],
          "11": [
            997,
            1103
          ],
          "12": [
            1113,
            1155
          ],
          "13": [
            1165,
            1204
          ],
          "14": [
            1215,
            1278
          ]
        },
        "Vault.draw": {
          "4": [
            2510,
            2549
          ],
          "5": [
            2598,
            2686
          ],
          "6": [
            2766,
            2868
          ],
          "7": [
            2882,
            2980
          ],
          "8": [
            2994,
            3035
          ],
          "9": [
            3050,
            3108
          ]
        },
        "Vault.getAmountPerWithdrawal": {
          "2": [
            1896,
            1938
          ]
        },
        "Vault.getAuthorizedCompetition": {
          "1": [
            1720,
            1766
          ]
        },
        "Vault.getIntervalsSinceLaunch": {
          "15": [
            2057,
            2116
          ]
        },
        "Vault.getLastIntervalWithdrawn": {
          "0": [
            2360,
            2406
          ]
        },
        "Vault.getStartTime": {
          "3": [
            2217,
            2231
          ]
        },
        "Vault.updateAmountPerWithdrawal": {
          "16": [
            1381,
            1491
          ],
          "17": [
            1501,
            1533
          ],
          "18": [
            1544,
            1586
          ]
        }
      },
      "91": {}
    }
  },
  "dependencies": [
    "IToken"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80635ed6a01d11610097578063a217fddf11610066578063a217fddf146101dc578063c828371e146101e4578063d547741f146101ec578063fb0f6286146101ff57600080fd5b80635ed6a01d1461019e5780636cd22340146101a657806386b099bb146101c157806391d14854146101c957600080fd5b8063248a9ca3116100d3578063248a9ca3146101405780632f2ff15d1461016357806336568abe14610178578063538a1f881461018b57600080fd5b806301ffc9a7146100fa5780630eecae2114610122578063127a80ab14610138575b600080fd5b61010d6101083660046109b2565b610212565b60405190151581526020015b60405180910390f35b61012a610249565b604051908152602001610119565b60055461012a565b61012a61014e36600461096f565b60009081526020819052604090206001015490565b610176610171366004610987565b610450565b005b610176610186366004610987565b6104df565b61017661019936600461091f565b610559565b61012a6106a0565b6002546040516001600160a01b039091168152602001610119565b60035461012a565b61010d6101d7366004610987565b6106c1565b61012a600081565b60045461012a565b6101766101fa366004610987565b6106ea565b61017661020d36600461096f565b61076a565b60006001600160e01b03198216637965db0b60e01b148061024357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600354801561044d576002546001600160a01b031633146102c15760405162461bcd60e51b815260206004820152602760248201527f5661756c74202d20647261773a2043616c6c6572206973206e6f74206175746860448201526637b934bd32b21760c91b60648201526084015b60405180910390fd5b60006102cb6106a0565b905060055481116103375760405162461bcd60e51b815260206004820152603060248201527f5661756c74202d20647261773a20416c726561647920636c61696d656420666f60448201526f39103a3434b99034b73a32b93b30b61760811b60648201526084016102b8565b60015460035460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610948565b6104175760405162461bcd60e51b8152602060048201526024808201527f5661756c74202d20647261773a20546f6b656e207472616e73666572206661696044820152633632b21760e11b60648201526084016102b8565b60058190556040518190839033907f11c8b4019de91c411a4563c3f1a6debb06e417f30b786f18dfe77db88d40657790600090a4505b90565b60008281526020819052604090206001015461046d905b336106c1565b6104d15760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b60648201526084016102b8565b6104db828261081a565b5050565b6001600160a01b038116331461054f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016102b8565b6104db828261089e565b6105646000336106c1565b6105ce5760405162461bcd60e51b815260206004820152603560248201527f5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a204361604482015274363632b91034b9903ab730baba3437b934bd32b21760591b60648201526084016102b8565b6002546001600160a01b03161561064d5760405162461bcd60e51b815260206004820152603960248201527f5661756c74202d20617574686f72697a65436f6d7065746974696f6e3a20436f60448201527f6d7065746974696f6e20616c7265616479206578697374732e0000000000000060648201526084016102b8565b6003819055600280546001600160a01b0319166001600160a01b0384169081179091556040518291907f9c6c08c6e8a66cbc213ea9350571c9b46aac2684fc090ba0b330a9c8ba33602690600090a35050565b60006023600454426106b291906109fa565b6106bc91906109da565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461070590610467565b61054f5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b60648201526084016102b8565b6107756000336106c1565b6107e75760405162461bcd60e51b815260206004820152603a60248201527f5661756c74202d20757064617465416d6f756e7450657257697468647261776160448201527f6c3a2043616c6c657220697320756e617574686f72697a65642e00000000000060648201526084016102b8565b600381905560405181907ff6a1be46faba17636fe6b7abe9e62c1a1cd7fbb17d196d4860fdcee962cd63d290600090a250565b61082482826106c1565b6104db576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561085a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108a882826106c1565b156104db576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b80356001600160a01b038116811461091a57600080fd5b919050565b60008060408385031215610931578182fd5b61093a83610903565b946020939093013593505050565b600060208284031215610959578081fd5b81518015158114610968578182fd5b9392505050565b600060208284031215610980578081fd5b5035919050565b60008060408385031215610999578182fd5b823591506109a960208401610903565b90509250929050565b6000602082840312156109c3578081fd5b81356001600160e01b031981168114610968578182fd5b6000826109f557634e487b7160e01b81526012600452602481fd5b500490565b600082821015610a1857634e487b7160e01b81526011600452602481fd5b50039056fea264697066735822122016117a4869ca4130b1d6503ae3762e05d81d627d4d3d66177d0e9ad3c54e470a64736f6c63430008040033",
  "deployedSourceMap": "174:2953:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566:214:7;;;;;;:::i;:::-;;:::i;:::-;;;2385:14:93;;2378:22;2360:41;;2348:2;2333:18;3566:214:7;;;;;;;;2419:706:6;;;:::i;:::-;;;2558:25:93;;;2546:2;2531:18;2419:706:6;2513:76:93;2244:169:6;2384:22;;2244:169;;4185:121:7;;;;;;:::i;:::-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121;4556:228;;;;;;:::i;:::-;;:::i;:::-;;5740:214;;;;;;:::i;:::-;;:::i;763:522:6:-;;;;;;:::i;:::-;;:::i;1951:172::-;;;:::i;1599:174::-;1744:22;;1599:174;;-1:-1:-1;;;;;1744:22:6;;;1879:51:93;;1867:2;1852:18;1599:174:6;1834:102:93;1779:166:6;1918:20;;1779:166;;3867:137:7;;;;;;:::i;:::-;;:::i;2363:49::-;;2408:4;2363:49;;2129:109:6;2225:6;;2129:109;;5018:231:7;;;;;;:::i;:::-;;:::i;1291:302:6:-;;;;;;:::i;:::-;;:::i;3566:214:7:-;3651:4;-1:-1:-1;;;;;;3674:47:7;;-1:-1:-1;;;3674:47:7;;:99;;-1:-1:-1;;;;;;;;;;871:40:75;;;3737:36:7;3667:106;3566:214;-1:-1:-1;;3566:214:7:o;2419:706:6:-;2529:20;;2563;;2559:560;;2620:22;;-1:-1:-1;;;;;2620:22:6;2606:10;:36;2598:88;;;;-1:-1:-1;;;2598:88:6;;6142:2:93;2598:88:6;;;6124:21:93;6181:2;6161:18;;;6154:30;6220:34;6200:18;;;6193:62;-1:-1:-1;;;6271:18:93;;;6264:37;6318:19;;2598:88:6;;;;;;;;;2700:24;2727:25;:23;:25::i;:::-;2700:52;;2793:22;;2774:16;:41;2766:102;;;;-1:-1:-1;;;2766:102:6;;5309:2:93;2766:102:6;;;5291:21:93;5348:2;5328:18;;;5321:30;5387:34;5367:18;;;5360:62;-1:-1:-1;;;5438:18:93;;;5431:46;5494:19;;2766:102:6;5281:238:93;2766:102:6;2890:6;;2918:20;;2890:49;;-1:-1:-1;;;2890:49:6;;2906:10;2890:49;;;2115:51:93;2182:18;;;2175:34;;;;-1:-1:-1;;;;;2890:6:6;;;;:15;;2088:18:93;;2890:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2882:98;;;;-1:-1:-1;;;2882:98:6;;3212:2:93;2882:98:6;;;3194:21:93;3251:2;3231:18;;;3224:30;3290:34;3270:18;;;3263:62;-1:-1:-1;;;3341:18:93;;;3334:34;3385:19;;2882:98:6;3184:226:93;2882:98:6;2994:22;:41;;;3055:53;;3019:16;;3073;;3061:10;;3055:53;;;;;2559:560;;2419:706;:::o;4556:228:7:-;4251:7;4277:12;;;;;;;;;;:22;;;4648:41;;4656:18;665:10:65;3867:137:7;:::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:7;;2796:2:93;4640:101:7;;;2778:21:93;2835:2;2815:18;;;2808:30;2874:34;2854:18;;;2847:62;-1:-1:-1;;;2925:18:93;;;2918:45;2980:19;;4640:101:7;2768:237:93;4640:101:7;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;5740:214::-;-1:-1:-1;;;;;5835:23:7;;665:10:65;5835:23:7;5827:83;;;;-1:-1:-1;;;5827:83:7;;5726:2:93;5827:83:7;;;5708:21:93;5765:2;5745:18;;;5738:30;5804:34;5784:18;;;5777:62;-1:-1:-1;;;5855:18:93;;;5848:45;5910:19;;5827:83:7;5698:237:93;5827:83:7;5921:26;5933:4;5939:7;5921:11;:26::i;763:522:6:-;890:39;2408:4:7;918:10:6;890:7;:39::i;:::-;882:105;;;;-1:-1:-1;;;882:105:6;;4043:2:93;882:105:6;;;4025:21:93;4082:2;4062:18;;;4055:30;4121:34;4101:18;;;4094:62;-1:-1:-1;;;4172:18:93;;;4165:51;4233:19;;882:105:6;4015:243:93;882:105:6;1005:22;;-1:-1:-1;;;;;1005:22:6;:36;997:106;;;;-1:-1:-1;;;997:106:6;;3617:2:93;997:106:6;;;3599:21:93;3656:2;3636:18;;;3629:30;3695:34;3675:18;;;3668:62;3766:27;3746:18;;;3739:55;3811:19;;997:106:6;3589:247:93;997:106:6;1113:20;:42;;;1165:22;:39;;-1:-1:-1;;;;;;1165:39:6;-1:-1:-1;;;;;1165:39:6;;;;;;;;1220:58;;1113:42;;1165:39;1220:58;;-1:-1:-1;;1220:58:6;763:522;;:::o;1951:172::-;2024:17;341:2;2088:6;;2070:15;:24;;;;:::i;:::-;2069:47;;;;:::i;:::-;2057:59;;1951:172;:::o;3867:137:7:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;;;;3867:137::o;5018:231::-;4251:7;4277:12;;;;;;;;;;:22;;;5111:41;;5119:18;4185:121;5111:41;5103:102;;;;-1:-1:-1;;;5103:102:7;;4465:2:93;5103:102:7;;;4447:21:93;4504:2;4484:18;;;4477:30;4543:34;4523:18;;;4516:62;-1:-1:-1;;;4594:18:93;;;4587:46;4650:19;;5103:102:7;4437:238:93;1291:302:6;1389:39;2408:4:7;1417:10:6;1389:7;:39::i;:::-;1381:110;;;;-1:-1:-1;;;1381:110:6;;4882:2:93;1381:110:6;;;4864:21:93;4921:2;4901:18;;;4894:30;4960:34;4940:18;;;4933:62;5031:28;5011:18;;;5004:56;5077:19;;1381:110:6;4854:248:93;1381:110:6;1501:20;:32;;;1549:37;;1524:9;;1549:37;;;;;1291:302;:::o;6952:224:7:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:65;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:7;;;;;;;;;;:37;;-1:-1:-1;;7294:37:7;;;7350:40;665:10:65;;7294:12:7;;7350:40;;7326:5;7350:40;7182:225;;:::o;14:173:93:-;82:20;;-1:-1:-1;;;;;131:31:93;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:264::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;370:29;389:9;370:29;:::i;:::-;360:39;446:2;431:18;;;;418:32;;-1:-1:-1;;;279:177:93:o;461:297::-;528:6;581:2;569:9;560:7;556:23;552:32;549:2;;;602:6;594;587:22;549:2;639:9;633:16;692:5;685:13;678:21;671:5;668:32;658:2;;719:6;711;704:22;658:2;747:5;539:219;-1:-1:-1;;;539:219:93:o;763:190::-;822:6;875:2;863:9;854:7;850:23;846:32;843:2;;;896:6;888;881:22;843:2;-1:-1:-1;924:23:93;;833:120;-1:-1:-1;833:120:93:o;958:264::-;1026:6;1034;1087:2;1075:9;1066:7;1062:23;1058:32;1055:2;;;1108:6;1100;1093:22;1055:2;1149:9;1136:23;1126:33;;1178:38;1212:2;1201:9;1197:18;1178:38;:::i;:::-;1168:48;;1045:177;;;;;:::o;1227:306::-;1285:6;1338:2;1326:9;1317:7;1313:23;1309:32;1306:2;;;1359:6;1351;1344:22;1306:2;1390:23;;-1:-1:-1;;;;;;1442:32:93;;1432:43;;1422:2;;1494:6;1486;1479:22;6530:217;6570:1;6596;6586:2;;-1:-1:-1;;;6621:31:93;;6675:4;6672:1;6665:15;6703:4;6628:1;6693:15;6586:2;-1:-1:-1;6732:9:93;;6576:171::o;6752:228::-;6792:4;6820:1;6817;6814:8;6811:2;;;-1:-1:-1;;;6845:34:93;;6902:4;6899:1;6892:15;6933:4;6852;6920:18;6811:2;-1:-1:-1;6965:9:93;;6801:179::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    174,
    3127
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5ED6A01D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC828371E EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFB0F6286 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5ED6A01D EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x6CD22340 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x86B099BB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x538A1F88 EQ PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xEECAE21 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x127A80AB EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x12A JUMP JUMPDEST PUSH2 0x12A PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x176 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x12A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x12A PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12A JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x243 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20647261773A2043616C6C6572206973206E6F742061757468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x37B934BD32B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH2 0x6A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20647261773A20416C726561647920636C61696D656420666F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x39103A3434B99034B73A32B93B30B617 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20647261773A20546F6B656E207472616E7366657220666169 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3632B217 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH32 0x11C8B4019DE91C411A4563C3F1A6DEBB06E417F30B786F18DFE77DB88D406577 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x46D SWAP1 JUMPDEST CALLER PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x4DB DUP3 DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x4DB DUP3 DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x564 PUSH1 0x0 CALLER PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20617574686F72697A65436F6D7065746974696F6E3A204361 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x363632B91034B9903AB730BABA3437B934BD32B217 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20617574686F72697A65436F6D7065746974696F6E3A20436F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D7065746974696F6E20616C7265616479206578697374732E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 SWAP1 PUSH32 0x9C6C08C6E8A66CBC213EA9350571C9B46AAC2684FC090BA0B330A9C8BA336026 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x23 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x705 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x775 PUSH1 0x0 CALLER PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74202D20757064617465416D6F756E74506572576974686472617761 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C3A2043616C6C657220697320756E617574686F72697A65642E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF6A1BE46FABA17636FE6B7ABE9E62C1A1CD7FBB17D196D4860FDCEE962CD63D2 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x824 DUP3 DUP3 PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x4DB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x85A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8A8 DUP3 DUP3 PUSH2 0x6C1 JUMP JUMPDEST ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x931 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x93A DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x968 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x980 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x999 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x9A9 PUSH1 0x20 DUP5 ADD PUSH2 0x903 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x968 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA18 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND GT PUSH27 0x4869CA4130B1D6503AE3762E05D81D627D4D3D66177D0E9AD3C54E SELFBALANCE EXP PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5ED6A01D"
    },
    "38": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA217FDDF"
    },
    "49": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA217FDDF"
    },
    "60": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DC"
    },
    "64": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC828371E"
    },
    "71": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E4"
    },
    "75": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD547741F"
    },
    "82": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC"
    },
    "86": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFB0F6286"
    },
    "93": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF"
    },
    "97": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5ED6A01D"
    },
    "109": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19E"
    },
    "113": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6CD22340"
    },
    "120": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A6"
    },
    "124": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86B099BB"
    },
    "131": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C1"
    },
    "135": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x91D14854"
    },
    "142": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C9"
    },
    "146": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "150": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "151": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x248A9CA3"
    },
    "158": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "GT",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x248A9CA3"
    },
    "169": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x140"
    },
    "173": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2F2FF15D"
    },
    "180": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163"
    },
    "184": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x36568ABE"
    },
    "191": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x178"
    },
    "195": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x538A1F88"
    },
    "202": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "206": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "210": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "211": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "213": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1FFC9A7"
    },
    "218": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "224": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEECAE21"
    },
    "229": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122"
    },
    "233": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "235": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x127A80AB"
    },
    "240": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "EQ",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x138"
    },
    "244": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "246": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        174,
        3127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "250": {
      "op": "JUMPDEST"
    },
    "251": {
      "op": "PUSH2",
      "value": "0x10D"
    },
    "254": {
      "op": "PUSH2",
      "value": "0x108"
    },
    "257": {
      "op": "CALLDATASIZE"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "260": {
      "op": "PUSH2",
      "value": "0x9B2"
    },
    "263": {
      "jump": "i",
      "op": "JUMP"
    },
    "264": {
      "op": "JUMPDEST"
    },
    "265": {
      "op": "PUSH2",
      "value": "0x212"
    },
    "268": {
      "jump": "i",
      "op": "JUMP"
    },
    "269": {
      "op": "JUMPDEST"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "272": {
      "op": "MLOAD"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "ISZERO"
    },
    "275": {
      "op": "ISZERO"
    },
    "276": {
      "op": "DUP2"
    },
    "277": {
      "op": "MSTORE"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "op": "JUMPDEST"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "284": {
      "op": "MLOAD"
    },
    "285": {
      "op": "DUP1"
    },
    "286": {
      "op": "SWAP2"
    },
    "287": {
      "op": "SUB"
    },
    "288": {
      "op": "SWAP1"
    },
    "289": {
      "op": "RETURN"
    },
    "290": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "291": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "294": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x249"
    },
    "297": {
      "fn": "Vault.draw",
      "jump": "i",
      "offset": [
        2419,
        3125
      ],
      "op": "JUMP",
      "path": "6"
    },
    "298": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "299": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "301": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "302": {
      "op": "SWAP1"
    },
    "303": {
      "op": "DUP2"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x119"
    },
    "311": {
      "op": "JUMP"
    },
    "312": {
      "fn": "Vault.getLastIntervalWithdrawn",
      "offset": [
        2244,
        2413
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "313": {
      "fn": "Vault.getLastIntervalWithdrawn",
      "offset": [
        2384,
        2406
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x5"
    },
    "315": {
      "fn": "Vault.getLastIntervalWithdrawn",
      "offset": [
        2384,
        2406
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "316": {
      "fn": "Vault.getLastIntervalWithdrawn",
      "offset": [
        2244,
        2413
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "319": {
      "fn": "Vault.getLastIntervalWithdrawn",
      "offset": [
        2244,
        2413
      ],
      "op": "JUMP",
      "path": "6"
    },
    "320": {
      "op": "JUMPDEST"
    },
    "321": {
      "op": "PUSH2",
      "value": "0x12A"
    },
    "324": {
      "op": "PUSH2",
      "value": "0x14E"
    },
    "327": {
      "op": "CALLDATASIZE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "330": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "333": {
      "jump": "i",
      "op": "JUMP"
    },
    "334": {
      "op": "JUMPDEST"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "337": {
      "op": "SWAP1"
    },
    "338": {
      "op": "DUP2"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "342": {
      "op": "DUP2"
    },
    "343": {
      "op": "SWAP1"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "347": {
      "op": "SWAP1"
    },
    "348": {
      "op": "KECCAK256"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "SLOAD"
    },
    "353": {
      "op": "SWAP1"
    },
    "354": {
      "op": "JUMP"
    },
    "355": {
      "op": "JUMPDEST"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "359": {
      "op": "PUSH2",
      "value": "0x171"
    },
    "362": {
      "op": "CALLDATASIZE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "365": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "368": {
      "jump": "i",
      "op": "JUMP"
    },
    "369": {
      "op": "JUMPDEST"
    },
    "370": {
      "op": "PUSH2",
      "value": "0x450"
    },
    "373": {
      "jump": "i",
      "op": "JUMP"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "op": "STOP"
    },
    "376": {
      "op": "JUMPDEST"
    },
    "377": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "380": {
      "op": "PUSH2",
      "value": "0x186"
    },
    "383": {
      "op": "CALLDATASIZE"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "386": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "389": {
      "jump": "i",
      "op": "JUMP"
    },
    "390": {
      "op": "JUMPDEST"
    },
    "391": {
      "op": "PUSH2",
      "value": "0x4DF"
    },
    "394": {
      "jump": "i",
      "op": "JUMP"
    },
    "395": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "396": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176"
    },
    "399": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199"
    },
    "402": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "403": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "405": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91F"
    },
    "408": {
      "fn": "Vault.authorizeCompetition",
      "jump": "i",
      "offset": [
        763,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "409": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "410": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x559"
    },
    "413": {
      "fn": "Vault.authorizeCompetition",
      "jump": "i",
      "offset": [
        763,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "414": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        1951,
        2123
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "415": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        1951,
        2123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "418": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        1951,
        2123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A0"
    },
    "421": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "jump": "i",
      "offset": [
        1951,
        2123
      ],
      "op": "JUMP",
      "path": "6"
    },
    "422": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1599,
        1773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "423": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1744,
        1766
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x2"
    },
    "425": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1744,
        1766
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "426": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1599,
        1773
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "428": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1599,
        1773
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1744,
        1766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "438": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1744,
        1766
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "439": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1744,
        1766
      ],
      "op": "AND",
      "path": "6"
    },
    "440": {
      "op": "DUP2"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "444": {
      "op": "ADD"
    },
    "445": {
      "fn": "Vault.getAuthorizedCompetition",
      "offset": [
        1599,
        1773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x119"
    },
    "448": {
      "op": "JUMP"
    },
    "449": {
      "fn": "Vault.getAmountPerWithdrawal",
      "offset": [
        1779,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "450": {
      "fn": "Vault.getAmountPerWithdrawal",
      "offset": [
        1918,
        1938
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x3"
    },
    "452": {
      "fn": "Vault.getAmountPerWithdrawal",
      "offset": [
        1918,
        1938
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "453": {
      "fn": "Vault.getAmountPerWithdrawal",
      "offset": [
        1779,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "456": {
      "fn": "Vault.getAmountPerWithdrawal",
      "offset": [
        1779,
        1945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "457": {
      "op": "JUMPDEST"
    },
    "458": {
      "op": "PUSH2",
      "value": "0x10D"
    },
    "461": {
      "op": "PUSH2",
      "value": "0x1D7"
    },
    "464": {
      "op": "CALLDATASIZE"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "467": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "470": {
      "jump": "i",
      "op": "JUMP"
    },
    "471": {
      "op": "JUMPDEST"
    },
    "472": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "475": {
      "jump": "i",
      "op": "JUMP"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "PUSH2",
      "value": "0x12A"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "482": {
      "op": "DUP2"
    },
    "483": {
      "op": "JUMP"
    },
    "484": {
      "fn": "Vault.getStartTime",
      "offset": [
        2129,
        2238
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "485": {
      "fn": "Vault.getStartTime",
      "offset": [
        2225,
        2231
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x4"
    },
    "487": {
      "fn": "Vault.getStartTime",
      "offset": [
        2225,
        2231
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "488": {
      "fn": "Vault.getStartTime",
      "offset": [
        2129,
        2238
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A"
    },
    "491": {
      "fn": "Vault.getStartTime",
      "offset": [
        2129,
        2238
      ],
      "op": "JUMP",
      "path": "6"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "496": {
      "op": "PUSH2",
      "value": "0x1FA"
    },
    "499": {
      "op": "CALLDATASIZE"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "502": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "505": {
      "jump": "i",
      "op": "JUMP"
    },
    "506": {
      "op": "JUMPDEST"
    },
    "507": {
      "op": "PUSH2",
      "value": "0x6EA"
    },
    "510": {
      "jump": "i",
      "op": "JUMP"
    },
    "511": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "512": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176"
    },
    "515": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20D"
    },
    "518": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "519": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "521": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x96F"
    },
    "524": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "jump": "i",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMP",
      "path": "6"
    },
    "525": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "526": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x76A"
    },
    "529": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "jump": "i",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMP",
      "path": "6"
    },
    "530": {
      "op": "JUMPDEST"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "op": "NOT"
    },
    "542": {
      "op": "DUP3"
    },
    "543": {
      "op": "AND"
    },
    "544": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "EQ"
    },
    "553": {
      "op": "DUP1"
    },
    "554": {
      "op": "PUSH2",
      "value": "0x243"
    },
    "557": {
      "op": "JUMPI"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "op": "SUB"
    },
    "575": {
      "op": "NOT"
    },
    "576": {
      "op": "DUP4"
    },
    "577": {
      "op": "AND"
    },
    "578": {
      "op": "EQ"
    },
    "579": {
      "op": "JUMPDEST"
    },
    "580": {
      "op": "SWAP3"
    },
    "581": {
      "op": "SWAP2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "jump": "o",
      "op": "JUMP"
    },
    "585": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "586": {
      "fn": "Vault.draw",
      "offset": [
        2529,
        2549
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x3"
    },
    "588": {
      "fn": "Vault.draw",
      "offset": [
        2529,
        2549
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "589": {
      "fn": "Vault.draw",
      "offset": [
        2563,
        2583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "590": {
      "branch": 19,
      "fn": "Vault.draw",
      "offset": [
        2563,
        2583
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "591": {
      "fn": "Vault.draw",
      "offset": [
        2559,
        3119
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44D"
    },
    "594": {
      "branch": 19,
      "fn": "Vault.draw",
      "offset": [
        2559,
        3119
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "595": {
      "fn": "Vault.draw",
      "offset": [
        2620,
        2642
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x2"
    },
    "597": {
      "fn": "Vault.draw",
      "offset": [
        2620,
        2642
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "fn": "Vault.draw",
      "offset": [
        2620,
        2642
      ],
      "op": "AND",
      "path": "6"
    },
    "607": {
      "fn": "Vault.draw",
      "offset": [
        2606,
        2616
      ],
      "op": "CALLER",
      "path": "6"
    },
    "608": {
      "branch": 20,
      "fn": "Vault.draw",
      "offset": [
        2606,
        2642
      ],
      "op": "EQ",
      "path": "6"
    },
    "609": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "612": {
      "branch": 20,
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "613": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "615": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "624": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "627": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "629": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "DUP3",
      "path": "6"
    },
    "630": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "ADD",
      "path": "6"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "636": {
      "op": "DUP3"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "op": "MSTORE"
    },
    "639": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20647261773A2043616C6C6572206973206E6F742061757468"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "674": {
      "op": "DUP3"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "op": "PUSH7",
      "value": "0x37B934BD32B217"
    },
    "685": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "687": {
      "op": "SHL"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "690": {
      "op": "DUP3"
    },
    "691": {
      "op": "ADD"
    },
    "692": {
      "op": "MSTORE"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "699": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "700": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "DUP1",
      "path": "6"
    },
    "701": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "702": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "SUB",
      "path": "6"
    },
    "703": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "704": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "705": {
      "fn": "Vault.draw",
      "offset": [
        2598,
        2686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "706": {
      "fn": "Vault.draw",
      "offset": [
        2700,
        2724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "708": {
      "fn": "Vault.draw",
      "offset": [
        2727,
        2752
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CB"
    },
    "711": {
      "fn": "Vault.draw",
      "offset": [
        2727,
        2750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A0"
    },
    "714": {
      "fn": "Vault.draw",
      "jump": "i",
      "offset": [
        2727,
        2752
      ],
      "op": "JUMP",
      "path": "6"
    },
    "715": {
      "fn": "Vault.draw",
      "offset": [
        2727,
        2752
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "716": {
      "fn": "Vault.draw",
      "offset": [
        2700,
        2752
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "717": {
      "fn": "Vault.draw",
      "offset": [
        2700,
        2752
      ],
      "op": "POP",
      "path": "6"
    },
    "718": {
      "fn": "Vault.draw",
      "offset": [
        2793,
        2815
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x5"
    },
    "720": {
      "fn": "Vault.draw",
      "offset": [
        2793,
        2815
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "721": {
      "fn": "Vault.draw",
      "offset": [
        2774,
        2790
      ],
      "op": "DUP2",
      "path": "6"
    },
    "722": {
      "branch": 21,
      "fn": "Vault.draw",
      "offset": [
        2774,
        2815
      ],
      "op": "GT",
      "path": "6"
    },
    "723": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "726": {
      "branch": 21,
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "727": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "729": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "DUP2",
      "path": "6"
    },
    "738": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "741": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "743": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "DUP3",
      "path": "6"
    },
    "744": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "ADD",
      "path": "6"
    },
    "745": {
      "op": "MSTORE"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "750": {
      "op": "DUP3"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20647261773A20416C726561647920636C61696D656420666F"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "788": {
      "op": "DUP3"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH16",
      "value": "0x39103A3434B99034B73A32B93B30B617"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "813": {
      "op": "DUP3"
    },
    "814": {
      "op": "ADD"
    },
    "815": {
      "op": "MSTORE"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "818": {
      "op": "ADD"
    },
    "819": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "822": {
      "op": "JUMP"
    },
    "823": {
      "fn": "Vault.draw",
      "offset": [
        2766,
        2868
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "824": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x1"
    },
    "826": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "827": {
      "fn": "Vault.draw",
      "offset": [
        2918,
        2938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "829": {
      "fn": "Vault.draw",
      "offset": [
        2918,
        2938
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "830": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "832": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "833": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "842": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "843": {
      "fn": "Vault.draw",
      "offset": [
        2906,
        2916
      ],
      "op": "CALLER",
      "path": "6"
    },
    "844": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "846": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "847": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ADD",
      "path": "6"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "851": {
      "op": "DUP2"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "SWAP2"
    },
    "854": {
      "op": "SWAP1"
    },
    "855": {
      "op": "SWAP2"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "866": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "867": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "AND",
      "path": "6"
    },
    "868": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "869": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2905
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "874": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "880": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "882": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "883": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "884": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP4",
      "path": "6"
    },
    "885": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "SUB",
      "path": "6"
    },
    "886": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "887": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "889": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP8",
      "path": "6"
    },
    "890": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "891": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "892": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "893": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "894": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "895": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x387"
    },
    "898": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "899": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "901": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "902": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "REVERT",
      "path": "6"
    },
    "903": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "904": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "905": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "GAS",
      "path": "6"
    },
    "906": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "CALL",
      "path": "6"
    },
    "907": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "908": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "909": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "910": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39B"
    },
    "913": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "914": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "915": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "917": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "918": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "919": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "920": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "922": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "REVERT",
      "path": "6"
    },
    "923": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "924": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "925": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "926": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "927": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "928": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "930": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "931": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "932": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "934": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "NOT",
      "path": "6"
    },
    "935": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "937": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "938": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ADD",
      "path": "6"
    },
    "939": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "AND",
      "path": "6"
    },
    "940": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "941": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ADD",
      "path": "6"
    },
    "942": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP1",
      "path": "6"
    },
    "943": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "945": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "946": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "POP",
      "path": "6"
    },
    "947": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "948": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "ADD",
      "path": "6"
    },
    "949": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "950": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BF"
    },
    "953": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "954": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "955": {
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x948"
    },
    "958": {
      "fn": "Vault.draw",
      "jump": "i",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMP",
      "path": "6"
    },
    "959": {
      "branch": 22,
      "fn": "Vault.draw",
      "offset": [
        2890,
        2939
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "960": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x417"
    },
    "963": {
      "branch": 22,
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "964": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "966": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "DUP2",
      "path": "6"
    },
    "975": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "978": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "980": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "DUP3",
      "path": "6"
    },
    "981": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "ADD",
      "path": "6"
    },
    "982": {
      "op": "MSTORE"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "985": {
      "op": "DUP1"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20647261773A20546F6B656E207472616E7366657220666169"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1024": {
      "op": "DUP3"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH4",
      "value": "0x3632B217"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1037": {
      "op": "DUP3"
    },
    "1038": {
      "op": "ADD"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "1046": {
      "op": "JUMP"
    },
    "1047": {
      "fn": "Vault.draw",
      "offset": [
        2882,
        2980
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1048": {
      "fn": "Vault.draw",
      "offset": [
        2994,
        3016
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x5"
    },
    "1050": {
      "fn": "Vault.draw",
      "offset": [
        2994,
        3035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1051": {
      "fn": "Vault.draw",
      "offset": [
        2994,
        3035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1052": {
      "fn": "Vault.draw",
      "offset": [
        2994,
        3035
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1053": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x40"
    },
    "1055": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1056": {
      "fn": "Vault.draw",
      "offset": [
        3019,
        3035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1057": {
      "fn": "Vault.draw",
      "offset": [
        3019,
        3035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1058": {
      "fn": "Vault.draw",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1059": {
      "fn": "Vault.draw",
      "offset": [
        3073,
        3089
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1060": {
      "fn": "Vault.draw",
      "offset": [
        3061,
        3071
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1061": {
      "fn": "Vault.draw",
      "offset": [
        3061,
        3071
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1062": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x11C8B4019DE91C411A4563C3F1A6DEBB06E417F30B786F18DFE77DB88D406577"
    },
    "1095": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1096": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1098": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1099": {
      "fn": "Vault.draw",
      "offset": [
        3055,
        3108
      ],
      "op": "LOG4",
      "path": "6"
    },
    "1100": {
      "fn": "Vault.draw",
      "offset": [
        2559,
        3119
      ],
      "op": "POP",
      "path": "6"
    },
    "1101": {
      "fn": "Vault.draw",
      "offset": [
        2559,
        3119
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1102": {
      "fn": "Vault.draw",
      "offset": [
        2419,
        3125
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1103": {
      "fn": "Vault.draw",
      "jump": "o",
      "offset": [
        2419,
        3125
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1104": {
      "op": "JUMPDEST"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "DUP2"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1112": {
      "op": "DUP2"
    },
    "1113": {
      "op": "SWAP1"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1117": {
      "op": "SWAP1"
    },
    "1118": {
      "op": "KECCAK256"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "ADD"
    },
    "1122": {
      "op": "SLOAD"
    },
    "1123": {
      "op": "PUSH2",
      "value": "0x46D"
    },
    "1126": {
      "op": "SWAP1"
    },
    "1127": {
      "op": "JUMPDEST"
    },
    "1128": {
      "op": "CALLER"
    },
    "1129": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1132": {
      "jump": "i",
      "op": "JUMP"
    },
    "1133": {
      "op": "JUMPDEST"
    },
    "1134": {
      "op": "PUSH2",
      "value": "0x4D1"
    },
    "1137": {
      "op": "JUMPI"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1140": {
      "op": "MLOAD"
    },
    "1141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "DUP2"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1154": {
      "op": "DUP3"
    },
    "1155": {
      "op": "ADD"
    },
    "1156": {
      "op": "MSTORE"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1199": {
      "op": "DUP3"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "op": "MSTORE"
    },
    "1202": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1223": {
      "op": "DUP3"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "PUSH2",
      "value": "0x2B8"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "op": "JUMPDEST"
    },
    "1234": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x81A"
    },
    "1242": {
      "jump": "i",
      "op": "JUMP"
    },
    "1243": {
      "op": "JUMPDEST"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "jump": "o",
      "op": "JUMP"
    },
    "1247": {
      "op": "JUMPDEST"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1254": {
      "op": "SHL"
    },
    "1255": {
      "op": "SUB"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "AND"
    },
    "1258": {
      "op": "CALLER"
    },
    "1259": {
      "op": "EQ"
    },
    "1260": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1263": {
      "op": "JUMPI"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1266": {
      "op": "MLOAD"
    },
    "1267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "DUP2"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1287": {
      "op": "DUP3"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "op": "MSTORE"
    },
    "1290": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "ADD"
    },
    "1327": {
      "op": "MSTORE"
    },
    "1328": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1346": {
      "op": "SHL"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1349": {
      "op": "DUP3"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "PUSH2",
      "value": "0x2B8"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "PUSH2",
      "value": "0x89E"
    },
    "1368": {
      "jump": "i",
      "op": "JUMP"
    },
    "1369": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1370": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        890,
        929
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 10,
      "value": "0x564"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1375": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1376": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        890,
        897
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C1"
    },
    "1379": {
      "fn": "Vault.authorizeCompetition",
      "jump": "i",
      "offset": [
        890,
        929
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1380": {
      "branch": 23,
      "fn": "Vault.authorizeCompetition",
      "offset": [
        890,
        929
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1381": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CE"
    },
    "1384": {
      "branch": 23,
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1385": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1387": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1396": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1401": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1402": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "ADD",
      "path": "6"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20617574686F72697A65436F6D7065746974696F6E3A204361"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH21",
      "value": "0x363632B91034B9903AB730BABA3437B934BD32B217"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1476": {
      "op": "DUP3"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "MSTORE"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "1485": {
      "op": "JUMP"
    },
    "1486": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        882,
        987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1487": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1005,
        1027
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x2"
    },
    "1489": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1005,
        1027
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1496": {
      "op": "SHL"
    },
    "1497": {
      "op": "SUB"
    },
    "1498": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1005,
        1027
      ],
      "op": "AND",
      "path": "6"
    },
    "1499": {
      "branch": 24,
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1005,
        1041
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1500": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64D"
    },
    "1503": {
      "branch": 24,
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1504": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1506": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1515": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1518": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1520": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1521": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "ADD",
      "path": "6"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1527": {
      "op": "DUP3"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20617574686F72697A65436F6D7065746974696F6E3A20436F"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH32",
      "value": "0x6D7065746974696F6E20616C7265616479206578697374732E00000000000000"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1603": {
      "op": "DUP3"
    },
    "1604": {
      "op": "ADD"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "1612": {
      "op": "JUMP"
    },
    "1613": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        997,
        1103
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1614": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1133
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x3"
    },
    "1616": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1617": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1618": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1155
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1619": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1187
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x2"
    },
    "1621": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1622": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "op": "NOT"
    },
    "1632": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "AND",
      "path": "6"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1642": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "AND",
      "path": "6"
    },
    "1643": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1644": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1645": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "OR",
      "path": "6"
    },
    "1646": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1647": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1648": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1649": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1220,
        1278
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x40"
    },
    "1651": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1220,
        1278
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1652": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1155
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1653": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1113,
        1155
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1654": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1165,
        1204
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1655": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1220,
        1278
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x9C6C08C6E8A66CBC213EA9350571C9B46AAC2684FC090BA0B330A9C8BA336026"
    },
    "1688": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1220,
        1278
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        1220,
        1278
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1693": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "1694": {
      "fn": "Vault.authorizeCompetition",
      "offset": [
        763,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "1695": {
      "fn": "Vault.authorizeCompetition",
      "jump": "o",
      "offset": [
        763,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1696": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        1951,
        2123
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1697": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2024,
        2041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1699": {
      "offset": [
        341,
        343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x23"
    },
    "1701": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2088,
        2094
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x4"
    },
    "1703": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2088,
        2094
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1704": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2085
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1705": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2094
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B2"
    },
    "1708": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2094
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1709": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2094
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1710": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2094
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FA"
    },
    "1713": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "jump": "i",
      "offset": [
        2070,
        2094
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1714": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2070,
        2094
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1715": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2069,
        2116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BC"
    },
    "1718": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2069,
        2116
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1719": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2069,
        2116
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1720": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2069,
        2116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9DA"
    },
    "1723": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "jump": "i",
      "offset": [
        2069,
        2116
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1724": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2069,
        2116
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1725": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2057,
        2116
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1726": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        2057,
        2116
      ],
      "op": "POP",
      "path": "6"
    },
    "1727": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "offset": [
        1951,
        2123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1728": {
      "fn": "Vault.getIntervalsSinceLaunch",
      "jump": "o",
      "offset": [
        1951,
        2123
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1729": {
      "op": "JUMPDEST"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1732": {
      "op": "SWAP2"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1737": {
      "op": "DUP3"
    },
    "1738": {
      "op": "DUP2"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1742": {
      "op": "DUP1"
    },
    "1743": {
      "op": "DUP5"
    },
    "1744": {
      "op": "KECCAK256"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1751": {
      "op": "SHL"
    },
    "1752": {
      "op": "SUB"
    },
    "1753": {
      "op": "SWAP4"
    },
    "1754": {
      "op": "SWAP1"
    },
    "1755": {
      "op": "SWAP4"
    },
    "1756": {
      "op": "AND"
    },
    "1757": {
      "op": "DUP5"
    },
    "1758": {
      "op": "MSTORE"
    },
    "1759": {
      "op": "SWAP2"
    },
    "1760": {
      "op": "SWAP1"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "SWAP1"
    },
    "1763": {
      "op": "KECCAK256"
    },
    "1764": {
      "op": "SLOAD"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1767": {
      "op": "AND"
    },
    "1768": {
      "op": "SWAP1"
    },
    "1769": {
      "jump": "o",
      "op": "JUMP"
    },
    "1770": {
      "op": "JUMPDEST"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "DUP2"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1778": {
      "op": "DUP2"
    },
    "1779": {
      "op": "SWAP1"
    },
    "1780": {
      "op": "MSTORE"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "op": "KECCAK256"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "SLOAD"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x705"
    },
    "1792": {
      "op": "SWAP1"
    },
    "1793": {
      "op": "PUSH2",
      "value": "0x467"
    },
    "1796": {
      "op": "JUMP"
    },
    "1797": {
      "op": "JUMPDEST"
    },
    "1798": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1801": {
      "op": "JUMPI"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1804": {
      "op": "MLOAD"
    },
    "1805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "op": "DUP2"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1818": {
      "op": "DUP3"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1825": {
      "op": "DUP3"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "MSTORE"
    },
    "1828": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1888": {
      "op": "DUP3"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "op": "MSTORE"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "PUSH2",
      "value": "0x2B8"
    },
    "1897": {
      "op": "JUMP"
    },
    "1898": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1899": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1389,
        1428
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0x775"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1904": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1417,
        1427
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1905": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1389,
        1396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C1"
    },
    "1908": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "jump": "i",
      "offset": [
        1389,
        1428
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1909": {
      "branch": 25,
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1389,
        1428
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1910": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E7"
    },
    "1913": {
      "branch": 25,
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1914": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1916": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1925": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1928": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1930": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1931": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "ADD",
      "path": "6"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1937": {
      "op": "DUP3"
    },
    "1938": {
      "op": "ADD"
    },
    "1939": {
      "op": "MSTORE"
    },
    "1940": {
      "op": "PUSH32",
      "value": "0x5661756C74202D20757064617465416D6F756E74506572576974686472617761"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1975": {
      "op": "DUP3"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "MSTORE"
    },
    "1978": {
      "op": "PUSH32",
      "value": "0x6C3A2043616C6C657220697320756E617574686F72697A65642E000000000000"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "ADD"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "2022": {
      "op": "JUMP"
    },
    "2023": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1381,
        1491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2024": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1501,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x3"
    },
    "2026": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1501,
        1533
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2027": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1501,
        1533
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2028": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1501,
        1533
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2029": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x40"
    },
    "2031": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2032": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1524,
        1533
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2033": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1524,
        1533
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2034": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF6A1BE46FABA17636FE6B7ABE9E62C1A1CD7FBB17D196D4860FDCEE962CD63D2"
    },
    "2067": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2068": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2070": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2071": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1549,
        1586
      ],
      "op": "LOG2",
      "path": "6"
    },
    "2072": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "offset": [
        1291,
        1593
      ],
      "op": "POP",
      "path": "6"
    },
    "2073": {
      "fn": "Vault.updateAmountPerWithdrawal",
      "jump": "o",
      "offset": [
        1291,
        1593
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2074": {
      "op": "JUMPDEST"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2078": {
      "op": "DUP3"
    },
    "2079": {
      "op": "DUP3"
    },
    "2080": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "2083": {
      "jump": "i",
      "op": "JUMP"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "2088": {
      "op": "JUMPI"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2091": {
      "op": "DUP3"
    },
    "2092": {
      "op": "DUP2"
    },
    "2093": {
      "op": "MSTORE"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2096": {
      "op": "DUP2"
    },
    "2097": {
      "op": "DUP2"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2101": {
      "op": "DUP1"
    },
    "2102": {
      "op": "DUP4"
    },
    "2103": {
      "op": "KECCAK256"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "op": "DUP6"
    },
    "2113": {
      "op": "AND"
    },
    "2114": {
      "op": "DUP5"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "SWAP1"
    },
    "2117": {
      "op": "SWAP2"
    },
    "2118": {
      "op": "MSTORE"
    },
    "2119": {
      "op": "SWAP1"
    },
    "2120": {
      "op": "KECCAK256"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "SLOAD"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2125": {
      "op": "NOT"
    },
    "2126": {
      "op": "AND"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "OR"
    },
    "2130": {
      "op": "SWAP1"
    },
    "2131": {
      "op": "SSTORE"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x85A"
    },
    "2135": {
      "op": "CALLER"
    },
    "2136": {
      "op": "SWAP1"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "op": "JUMPDEST"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "AND"
    },
    "2148": {
      "op": "DUP2"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2155": {
      "op": "SHL"
    },
    "2156": {
      "op": "SUB"
    },
    "2157": {
      "op": "AND"
    },
    "2158": {
      "op": "DUP4"
    },
    "2159": {
      "op": "PUSH32",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2194": {
      "op": "MLOAD"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2197": {
      "op": "MLOAD"
    },
    "2198": {
      "op": "DUP1"
    },
    "2199": {
      "op": "SWAP2"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "op": "SWAP1"
    },
    "2202": {
      "op": "LOG4"
    },
    "2203": {
      "op": "POP"
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "jump": "o",
      "op": "JUMP"
    },
    "2206": {
      "op": "JUMPDEST"
    },
    "2207": {
      "op": "PUSH2",
      "value": "0x8A8"
    },
    "2210": {
      "op": "DUP3"
    },
    "2211": {
      "op": "DUP3"
    },
    "2212": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "2215": {
      "jump": "i",
      "op": "JUMP"
    },
    "2216": {
      "op": "JUMPDEST"
    },
    "2217": {
      "op": "ISZERO"
    },
    "2218": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "2221": {
      "op": "JUMPI"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2224": {
      "op": "DUP3"
    },
    "2225": {
      "op": "DUP2"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2229": {
      "op": "DUP2"
    },
    "2230": {
      "op": "DUP2"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2234": {
      "op": "DUP1"
    },
    "2235": {
      "op": "DUP4"
    },
    "2236": {
      "op": "KECCAK256"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "op": "DUP6"
    },
    "2246": {
      "op": "AND"
    },
    "2247": {
      "op": "DUP1"
    },
    "2248": {
      "op": "DUP6"
    },
    "2249": {
      "op": "MSTORE"
    },
    "2250": {
      "op": "SWAP3"
    },
    "2251": {
      "op": "MSTORE"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "DUP4"
    },
    "2254": {
      "op": "KECCAK256"
    },
    "2255": {
      "op": "DUP1"
    },
    "2256": {
      "op": "SLOAD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2259": {
      "op": "NOT"
    },
    "2260": {
      "op": "AND"
    },
    "2261": {
      "op": "SWAP1"
    },
    "2262": {
      "op": "SSTORE"
    },
    "2263": {
      "op": "MLOAD"
    },
    "2264": {
      "op": "CALLER"
    },
    "2265": {
      "op": "SWAP3"
    },
    "2266": {
      "op": "DUP6"
    },
    "2267": {
      "op": "SWAP2"
    },
    "2268": {
      "op": "PUSH32",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "2301": {
      "op": "SWAP2"
    },
    "2302": {
      "op": "SWAP1"
    },
    "2303": {
      "op": "LOG4"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "jump": "o",
      "op": "JUMP"
    },
    "2307": {
      "op": "JUMPDEST"
    },
    "2308": {
      "op": "DUP1"
    },
    "2309": {
      "op": "CALLDATALOAD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "op": "SUB"
    },
    "2318": {
      "op": "DUP2"
    },
    "2319": {
      "op": "AND"
    },
    "2320": {
      "op": "DUP2"
    },
    "2321": {
      "op": "EQ"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "REVERT"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "SWAP2"
    },
    "2332": {
      "op": "SWAP1"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "jump": "o",
      "op": "JUMP"
    },
    "2335": {
      "op": "JUMPDEST"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2338": {
      "op": "DUP1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2341": {
      "op": "DUP4"
    },
    "2342": {
      "op": "DUP6"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "op": "SLT"
    },
    "2345": {
      "op": "ISZERO"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2349": {
      "op": "JUMPI"
    },
    "2350": {
      "op": "DUP2"
    },
    "2351": {
      "op": "DUP3"
    },
    "2352": {
      "op": "REVERT"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "PUSH2",
      "value": "0x93A"
    },
    "2357": {
      "op": "DUP4"
    },
    "2358": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2361": {
      "jump": "i",
      "op": "JUMP"
    },
    "2362": {
      "op": "JUMPDEST"
    },
    "2363": {
      "op": "SWAP5"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2366": {
      "op": "SWAP4"
    },
    "2367": {
      "op": "SWAP1"
    },
    "2368": {
      "op": "SWAP4"
    },
    "2369": {
      "op": "ADD"
    },
    "2370": {
      "op": "CALLDATALOAD"
    },
    "2371": {
      "op": "SWAP4"
    },
    "2372": {
      "op": "POP"
    },
    "2373": {
      "op": "POP"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "jump": "o",
      "op": "JUMP"
    },
    "2376": {
      "op": "JUMPDEST"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2381": {
      "op": "DUP3"
    },
    "2382": {
      "op": "DUP5"
    },
    "2383": {
      "op": "SUB"
    },
    "2384": {
      "op": "SLT"
    },
    "2385": {
      "op": "ISZERO"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x959"
    },
    "2389": {
      "op": "JUMPI"
    },
    "2390": {
      "op": "DUP1"
    },
    "2391": {
      "op": "DUP2"
    },
    "2392": {
      "op": "REVERT"
    },
    "2393": {
      "op": "JUMPDEST"
    },
    "2394": {
      "op": "DUP2"
    },
    "2395": {
      "op": "MLOAD"
    },
    "2396": {
      "op": "DUP1"
    },
    "2397": {
      "op": "ISZERO"
    },
    "2398": {
      "op": "ISZERO"
    },
    "2399": {
      "op": "DUP2"
    },
    "2400": {
      "op": "EQ"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x968"
    },
    "2404": {
      "op": "JUMPI"
    },
    "2405": {
      "op": "DUP2"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "REVERT"
    },
    "2408": {
      "op": "JUMPDEST"
    },
    "2409": {
      "op": "SWAP4"
    },
    "2410": {
      "op": "SWAP3"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "POP"
    },
    "2414": {
      "jump": "o",
      "op": "JUMP"
    },
    "2415": {
      "op": "JUMPDEST"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2420": {
      "op": "DUP3"
    },
    "2421": {
      "op": "DUP5"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "op": "SLT"
    },
    "2424": {
      "op": "ISZERO"
    },
    "2425": {
      "op": "PUSH2",
      "value": "0x980"
    },
    "2428": {
      "op": "JUMPI"
    },
    "2429": {
      "op": "DUP1"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "REVERT"
    },
    "2432": {
      "op": "JUMPDEST"
    },
    "2433": {
      "op": "POP"
    },
    "2434": {
      "op": "CALLDATALOAD"
    },
    "2435": {
      "op": "SWAP2"
    },
    "2436": {
      "op": "SWAP1"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "jump": "o",
      "op": "JUMP"
    },
    "2439": {
      "op": "JUMPDEST"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2442": {
      "op": "DUP1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2445": {
      "op": "DUP4"
    },
    "2446": {
      "op": "DUP6"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "op": "SLT"
    },
    "2449": {
      "op": "ISZERO"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x999"
    },
    "2453": {
      "op": "JUMPI"
    },
    "2454": {
      "op": "DUP2"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "REVERT"
    },
    "2457": {
      "op": "JUMPDEST"
    },
    "2458": {
      "op": "DUP3"
    },
    "2459": {
      "op": "CALLDATALOAD"
    },
    "2460": {
      "op": "SWAP2"
    },
    "2461": {
      "op": "POP"
    },
    "2462": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2467": {
      "op": "DUP5"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2472": {
      "jump": "i",
      "op": "JUMP"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "SWAP1"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "op": "SWAP3"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "SWAP3"
    },
    "2479": {
      "op": "SWAP1"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "jump": "o",
      "op": "JUMP"
    },
    "2482": {
      "op": "JUMPDEST"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2487": {
      "op": "DUP3"
    },
    "2488": {
      "op": "DUP5"
    },
    "2489": {
      "op": "SUB"
    },
    "2490": {
      "op": "SLT"
    },
    "2491": {
      "op": "ISZERO"
    },
    "2492": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2495": {
      "op": "JUMPI"
    },
    "2496": {
      "op": "DUP1"
    },
    "2497": {
      "op": "DUP2"
    },
    "2498": {
      "op": "REVERT"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "DUP2"
    },
    "2501": {
      "op": "CALLDATALOAD"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "op": "SUB"
    },
    "2510": {
      "op": "NOT"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "AND"
    },
    "2513": {
      "op": "DUP2"
    },
    "2514": {
      "op": "EQ"
    },
    "2515": {
      "op": "PUSH2",
      "value": "0x968"
    },
    "2518": {
      "op": "JUMPI"
    },
    "2519": {
      "op": "DUP2"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "REVERT"
    },
    "2522": {
      "op": "JUMPDEST"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2525": {
      "op": "DUP3"
    },
    "2526": {
      "op": "PUSH2",
      "value": "0x9F5"
    },
    "2529": {
      "op": "JUMPI"
    },
    "2530": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "DUP2"
    },
    "2539": {
      "op": "MSTORE"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2547": {
      "op": "DUP2"
    },
    "2548": {
      "op": "REVERT"
    },
    "2549": {
      "op": "JUMPDEST"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "op": "DIV"
    },
    "2552": {
      "op": "SWAP1"
    },
    "2553": {
      "jump": "o",
      "op": "JUMP"
    },
    "2554": {
      "op": "JUMPDEST"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "LT"
    },
    "2560": {
      "op": "ISZERO"
    },
    "2561": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2564": {
      "op": "JUMPI"
    },
    "2565": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2572": {
      "op": "SHL"
    },
    "2573": {
      "op": "DUP2"
    },
    "2574": {
      "op": "MSTORE"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2579": {
      "op": "MSTORE"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2582": {
      "op": "DUP2"
    },
    "2583": {
      "op": "REVERT"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "op": "SUB"
    },
    "2587": {
      "op": "SWAP1"
    },
    "2588": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "633bbf132e6f1132b7d016b4b9b3b56c6d5f6a9a",
  "source": "pragma solidity 0.8.4;\n\n// SPDX-License-Identifier: MIT\n\nimport './standard/access/AccessControl.sol';\nimport '../interfaces/IVault.sol';\nimport '../interfaces/IToken.sol';\n\ncontract Vault is AccessControl, IVault{\n    \n    IToken private _token;\n    address private _authorizedCompetition;\n    uint256 constant private _intervalInSeconds = 35; //60 * 60 * 24 * 7;\n    uint256 private _amountPerWithdrawal;\n    uint256 private _start;\n    uint256 private _lastIntervalWithdrawn;\n\n    constructor(uint256 start_, address token_address_)\n    {\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _token = IToken(token_address_);\n        if (start_== 0){\n            _start = block.timestamp;\n        }else{\n            _start = start_;\n        }\n    }\n\n    function authorizeCompetition(address newCompetition, uint256 amountPerWithdrawal)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Vault - authorizeCompetition: Caller is unauthorized.\");\n        require(_authorizedCompetition == address(0), \"Vault - authorizeCompetition: Competition already exists.\");\n        _amountPerWithdrawal = amountPerWithdrawal;\n        _authorizedCompetition = newCompetition;\n\n        emit CompetitionAuthorized(newCompetition, amountPerWithdrawal);\n    }\n\n    function updateAmountPerWithdrawal(uint256 newAmount)\n    external override\n    {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Vault - updateAmountPerWithdrawal: Caller is unauthorized.\");\n        _amountPerWithdrawal = newAmount;\n\n        emit AmountPerWithdrawalUpdated(newAmount);\n    }\n\n    function getAuthorizedCompetition()\n    external view override\n    returns (address authorizedCompetition)\n    {\n        authorizedCompetition = _authorizedCompetition;\n    }\n\n    function getAmountPerWithdrawal()\n    external view override\n    returns (uint256 amountPerWithdrawal)\n    {\n        amountPerWithdrawal = _amountPerWithdrawal;\n    }\n\n    function getIntervalsSinceLaunch()\n    public view override\n    returns (uint256 intervals)\n    {\n        intervals = (block.timestamp - _start) / _intervalInSeconds;\n    }\n\n    function getStartTime()\n    external view override\n    returns (uint256 start){\n        start = _start;\n    }\n\n    function getLastIntervalWithdrawn()\n    external override\n    returns (uint256 lastIntervalWithdrawn)\n    {\n        lastIntervalWithdrawn = _lastIntervalWithdrawn;\n    }\n\n    function draw()\n    external override\n    returns (uint256 amountToWithdraw)\n    {\n        amountToWithdraw = _amountPerWithdrawal;\n        if (amountToWithdraw > 0){\n            require(msg.sender == _authorizedCompetition, \"Vault - draw: Caller is not authorized.\");\n            uint256 intervalsElapsed = getIntervalsSinceLaunch();\n            require(intervalsElapsed > _lastIntervalWithdrawn, \"Vault - draw: Already claimed for this interval.\");\n            require(_token.transfer(msg.sender, _amountPerWithdrawal), \"Vault - draw: Token transfer failed.\");\n            _lastIntervalWithdrawn = intervalsElapsed;\n\n            emit Drawn(msg.sender, amountToWithdraw, intervalsElapsed);\n        }\n    }\n}",
  "sourceMap": "174:2953:6:-:0;;;484:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:42;2408:4:7;581:10:6;550;:42::i;:::-;602:6;:31;;-1:-1:-1;;;;;;602:31:6;-1:-1:-1;;;;;602:31:6;;;;;647:10;643:108;;681:15;672:6;:24;643:108;;;725:6;:15;;;643:108;484:273;;174:2953;;6519:110:7;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:65;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;14:371:93:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;203:16;;262:2;247:18;;241:25;203:16;;-1:-1:-1;;;;;;295:31:93;;285:42;;275:2;;346:6;338;331:22;275:2;374:5;364:15;;;112:273;;;;;:::o;:::-;174:2953:6;;;;;;",
  "sourcePath": "contracts/Vault.sol",
  "type": "contract"
}